{"version":3,"sources":["pages/CodePGATutorial.ts","pages/InteractiveCode.module.css","ga/viz2d.tsx","ga/ga_zpp.ts","pages/TutorialIndex.tsx","pages/Motivation.tsx","pages/GATutorial.tsx","pages/PGATutorial.tsx","App.tsx","ga/ga_pp.ts","ga/ga_ppp.ts","pages/InteractiveCode.tsx","pages/PGAGeometryTutorial.tsx","pages/GADesign1.tsx","serviceWorker.ts","index.tsx","pages/CodeGATutorial.ts"],"names":["pgaPoints","translators","motors","motorsBox","motorBlendingMotivation","motorBlending","motorBlendingLog","module","exports","pointCoordinates","a","magInv","e12","e02","e01","PointElementPGA2D","props","point","radius","fill","label","trailCount","trailStroke","x","y","useState","trail","setTrail","trailPolyPoints","useMemo","flat","join","updateTrail","useCallback","length","newTrail","slice","push","useEffect","pga","stroke","strokeWidth","points","cx","cy","r","dominantBaseline","fontWeight","textAnchor","fontSize","LineElementPGA2D","line","width","lineCoords","Math","abs","e2","e1","e0","x1","y1","x2","y2","SVGGrid","rows","cols","i","getThickness","index","map","toFixed","SceneView","scene","style","viewBox","preserveAspectRatio","height","transform","lines","l","key","p","infos","info","color","text","add","b","scalar","undefined","e012","sub","dual","geometricProduct","resultScalar","scalar_0","scalar_1","scalar_2","scalar_3","resultE0","e0_0","e0_1","e0_2","e0_3","e0_4","e0_5","e0_6","e0_7","resultE1","e1_0","e1_1","e1_2","e1_3","resultE2","e2_0","e2_1","e2_2","e2_3","resultE01","e01_0","e01_1","e01_2","e01_3","e01_4","e01_5","e01_6","e01_7","resultE02","e02_0","e02_1","e02_2","e02_3","e02_4","e02_5","e02_6","e02_7","resultE12","e12_0","e12_1","e12_2","e12_3","resultE012","e012_0","e012_1","e012_2","e012_3","e012_4","e012_5","e012_6","e012_7","innerProduct","exteriorProduct","multiply","div","reversion","repr","digits","result","regressiveProduct","sandwichProduct","commutatorProduct","exponential","s","rootS","sign","sqrt","cos","sin","cosh","sinh","TutorialIndex","to","Motivation","href","GATutorial","eval","sourceCode","cnt","hideOutput","withVisualizer","editorStyle","PGATutorial","breadcrumbPathToName","pathToBreadcrumbs","path","pathNames","pathUrls","cleanedPath","substr","pathSplit","split","pathElement","splice","name","url","NotFound","TutorialSite","location","useLocation","breadcrumbs","pathname","c","reduce","className","exact","App","wnd","window","ga","ga3d","viz","renderScene","renderTarget","ReactDOM","render","scalar_4","scalar_5","scalar_6","scalar_7","e1_4","e1_5","e1_6","e1_7","e2_4","e2_5","e2_6","e2_7","e12_4","e12_5","e12_6","e12_7","formatObject","obj","toString","JSON","stringify","InteractiveCode","visualizerStyle","outputStyle","code","setCode","runResult","setRunResult","run","oldLog","console","log","newRunResults","message","optionalParams","codeToRun","visualizerRef","current","id","e","uniqueId","random","useRef","styles","position","border","background","right","top","zIndex","onClick","display","flexDirection","alignContent","flexWrap","mode","theme","value","onChange","showPrintMargin","ref","readOnly","PGAGeometryTutorial","GADesign1","padding","textAlign","Boolean","hostname","match","getApp","StrictMode","rootElement","document","getElementById","hasChildNodes","hydrate","navigator","serviceWorker","ready","then","registration","unregister","catch","error","codeRenderPoint","codeSquareBasisVectors","codeExteriorProduct","codeAntiCommute","codeSquareBivector","codeRotate2DOrientation","codeRotate2D","codeGeneralRotor2D","codeGeneralRotor3D","codeReversionIdentity"],"mappings":"2HAAA,8OAAO,IAAMA,EAAS,iRAeTC,EAAW,qQAkBXC,EAAM,+TAsBNC,EAAS,sVAkBTC,EAAuB,qOAiBvBC,EAAa,uZAoBbC,EAAgB,qzB,mBC7G7BC,EAAOC,QAAU,CAAC,mBAAmB,0CAA0C,mCAAmC,0DAA0D,sCAAsC,6DAA6D,uBAAuB,8CAA8C,0BAA0B,mD,uRCGjWC,EAAmB,SAACC,GAC7B,IAAMC,EAAS,EAAID,EAAEE,IACrB,MAAO,EAAEF,EAAEG,IAAMF,EAAQD,EAAEI,IAAMH,IAgB9B,SAASI,EAAkBC,GAAgC,IACtDC,EAAwDD,EAAxDC,MAAOC,EAAiDF,EAAjDE,OAAQC,EAAyCH,EAAzCG,KAAMC,EAAmCJ,EAAnCI,MAAOC,EAA4BL,EAA5BK,WAAYC,EAAgBN,EAAhBM,YAE1CC,GAAKN,EAAMJ,IAAMI,EAAML,IACvBY,EAAIP,EAAMH,IAAMG,EAAML,IAJiC,EAMnCa,mBAA6B,IANM,mBAMtDC,EANsD,KAM/CC,EAN+C,KAQvDC,EAAkBC,mBAAQ,kBAAwBH,EAXjDI,OAAOC,KAAK,OAW6C,CAACL,IAE3DM,EAAcC,uBAAY,WAC5B,GAAIZ,GACA,GAAqB,IAAjBK,EAAMQ,QAAiBR,EAAMA,EAAMQ,OAAS,GAAG,KAAOX,GAAKG,EAAMA,EAAMQ,OAAS,GAAG,KAAOV,EAAI,CAC9F,IAAIW,EAAQ,YAAOT,GACfS,EAASD,OAASb,IAClBc,EAAWA,EAASC,MAAM,IAE9BD,EAASE,KAAK,CAACd,EAAGC,IAClBG,EAASQ,SAGbR,EAAS,MAEd,CAACJ,EAAGC,EAAGE,EAAOL,IAKjB,OAFAiB,oBAAUN,EAAa,CAACT,EAAGC,IAGvB,8BACI,gCAAQe,OAAStB,KAChBS,EAAMQ,OAAS,GACZ,0BAAUf,KAAK,OAAOqB,OAAQlB,GAAe,UACzCmB,YAAa,IAAOvB,GAAU,GAC9BwB,OAAQd,IAGhB,wBAAQe,GAAIpB,EAAGqB,IAAKpB,EAAGqB,EAAG3B,GAAU,EAAGC,KAAMA,GAAQ,UAAWqB,OAAO,UAEtEpB,GACG,sBAAMG,EAAGA,EAAGC,GAAIA,EAAGsB,iBAAiB,SAChCC,WAAW,MACXC,WAAW,SAASC,SAAU/B,GAAU,EAF5C,SAGKE,OAcd,SAAS8B,EAAiBlC,GAA+B,IACtDmC,EAA+BnC,EAA/BmC,KAAMC,EAAyBpC,EAAzBoC,MAAOZ,EAAkBxB,EAAlBwB,OAAQpB,EAAUJ,EAAVI,MAErBiC,EAAaxB,mBAAQ,WACvB,GAAIyB,KAAKC,IAAIJ,EAAKK,IAAMF,KAAKC,IAAIJ,EAAKM,IAAK,CAKvC,MAAO,EAJQ,WAEEN,EAAKM,GAAcN,EAAKO,IAAMP,EAAKK,GADvC,UAEEL,EAAKM,GAAYN,EAAKO,IAAMP,EAAKK,IAOhD,MAAO,IAJQ,IAEEL,EAAKK,GAAcL,EAAKO,IAAMP,EAAKM,IAFrC,MACF,IAEEN,EAAKK,GAAYL,EAAKO,IAAMP,EAAKM,GAFnC,OAKlB,CAACN,IAEJ,OACI,8BACI,gCAAQZ,OAASY,KACjB,sBAAMQ,GAAIN,EAAW,GAAIO,IAAKP,EAAW,GAAIQ,GAAIR,EAAW,GAAIS,IAAKT,EAAW,GAC5EZ,YAAaW,GAAS,EAAGZ,OAAQA,GAAU,YAE9CpB,GACG,sBAAMG,GAAI8B,EAAW,GAAKA,EAAW,IAAM,EAAG7B,GAAI,IAAO6B,EAAW,GAAKA,EAAW,IAChFP,iBAAiB,SAASC,WAAW,MACrCC,WAAW,SAASC,SAAU,EAFlC,SAGK7B,OAwBrB,SAAS2C,IAGL,IAFA,IAAMC,EAAiB,GACjBC,EAAiB,GACdC,GAAK,GAAIA,GAAK,GAAIA,IACvBF,EAAK3B,KAAK6B,GACVD,EAAK5B,KAAK6B,GAGd,IAAMC,EAAelC,uBAAY,SAACmC,GAC9B,OAAc,IAAVA,EACO,EACAA,EAAQ,IAAM,EACd,GAGJ,MACR,IAEH,OACI,8BACI,4BACKH,EAAKI,KAAI,SAAA9C,GAAC,OACP,8BACI,sBAAMoC,GAAQ,GAAJpC,EAAQsC,GAAQ,GAAJtC,EAAQqC,GAAI,IAAKE,IAAK,IAAKtB,OAAO,UAAUC,YAAa0B,EAAa5C,KAC3FA,EAAI,IAAM,GAAW,IAANA,GACZ,sBAAMA,EAAG,GAAKA,EAAGC,GAAI,EAAGL,KAAK,QAAQ8B,SAAU,EAAGD,WAAW,SAA7D,oBACS,GAAKzB,GAAG+C,QAAQ,QAJzB/C,QAWhB,4BACKyC,EAAKK,KAAI,SAAA7C,GAAC,OACP,8BACI,sBAAMmC,IAAK,IAAKE,GAAI,IAAKD,GAAS,IAAJpC,EAAQsC,GAAS,IAAJtC,EAAQgB,OAAO,UAAUC,YAAa0B,EAAa3C,KAC5FA,EAAI,IAAM,GACR,sBAAMD,EAAG,EAAGC,IAAK,GAAKA,EAAI,GAAIL,KAAK,QAAQ8B,SAAU,EAAGD,WAAW,SAAnE,oBACS,GAAKxB,GAAG8C,QAAQ,QAJzB9C,WAcrB,SAAS+C,EAAUvD,GAAwB,IACtCwD,EAAiBxD,EAAjBwD,MAAOC,EAAUzD,EAAVyD,MAEf,OACI,sBAAKC,QAAQ,cAAcC,oBAAoB,iBAAiBF,MAAOA,EAAvE,UACI,sBAAMtD,KAAK,UAAUiC,MAAM,OAAOwB,OAAO,SAEzC,oBAAGC,UAAU,+BAAb,UACI,cAACd,EAAD,IAECS,EAAMM,OAASN,EAAMM,MAAMT,KAAI,SAACU,EAAGb,GAAJ,OAC5B,wBAAChB,EAAD,2BAAsB6B,GAAtB,IAAyBC,IAAKd,QAGjCM,EAAM9B,QAAU8B,EAAM9B,OAAO2B,KAAI,SAACY,EAAGf,GAAJ,OAC9B,wBAACnD,EAAD,2BAAuBkE,GAAvB,IAA0BD,IAAKd,WAItCM,EAAMU,OAASV,EAAMU,MAAMb,KAAI,SAACc,EAAMjB,GACnC,OACI,sBAAcnB,WAAW,MAAMxB,EAAG,EAAGC,EAAG,EAAI,EAAI0C,EAAGjB,SAAUkC,EAAKlC,UAAY,EAAG9B,KAAMgE,EAAKC,OAAS,QAArG,SACKD,EAAKE,MADCnB,W,gCCvJ/B,8lBAAO,IAAMoB,EAAM,SAA+D5E,EAAM6E,GAWpF,MAVoB,CAChBC,YAAsBC,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,QAAyB9E,EAAE8E,QAAU,IAAMD,EAAEC,QAAU,QAAKC,EACjG/B,QAAc+B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,IAAqBhD,EAAEgD,IAAM,IAAM6B,EAAE7B,IAAM,QAAK+B,EAC7EhC,QAAcgC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,IAAqB/C,EAAE+C,IAAM,IAAM8B,EAAE9B,IAAM,QAAKgC,EAC7EjC,QAAciC,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,IAAqB9C,EAAE8C,IAAM,IAAM+B,EAAE/B,IAAM,QAAKiC,EAC7E3E,SAAgB2E,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KAAsBJ,EAAEI,KAAO,IAAMyE,EAAEzE,KAAO,QAAK2E,EAClF5E,SAAgB4E,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE1E,KAAsBH,EAAEG,KAAO,IAAM0E,EAAE1E,KAAO,QAAK4E,EAClF7E,SAAgB6E,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,KAAsBF,EAAEE,KAAO,IAAM2E,EAAE3E,KAAO,QAAK6E,EAClFC,UAAkBD,IAAX/E,EAAEgF,WAAiCD,IAAXF,EAAEG,MAAuBhF,EAAEgF,MAAQ,IAAMH,EAAEG,MAAQ,QAAKD,IAKlFE,EAAM,SAA+DjF,EAAM6E,GAWpF,MAVoB,CAChBC,YAAsBC,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,QAAyB9E,EAAE8E,QAAU,IAAMD,EAAEC,QAAU,QAAKC,EACjG/B,QAAc+B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,IAAqBhD,EAAEgD,IAAM,IAAM6B,EAAE7B,IAAM,QAAK+B,EAC7EhC,QAAcgC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,IAAqB/C,EAAE+C,IAAM,IAAM8B,EAAE9B,IAAM,QAAKgC,EAC7EjC,QAAciC,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,IAAqB9C,EAAE8C,IAAM,IAAM+B,EAAE/B,IAAM,QAAKiC,EAC7E3E,SAAgB2E,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KAAsBJ,EAAEI,KAAO,IAAMyE,EAAEzE,KAAO,QAAK2E,EAClF5E,SAAgB4E,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE1E,KAAsBH,EAAEG,KAAO,IAAM0E,EAAE1E,KAAO,QAAK4E,EAClF7E,SAAgB6E,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,KAAsBF,EAAEE,KAAO,IAAM2E,EAAE3E,KAAO,QAAK6E,EAClFC,UAAkBD,IAAX/E,EAAEgF,WAAiCD,IAAXF,EAAEG,MAAuBhF,EAAEgF,MAAQ,IAAMH,EAAEG,MAAQ,QAAKD,IAgBlFG,EAAO,SAAgClF,GAWhD,MAVoB,CAChB8E,YAAmBC,IAAX/E,EAAEgF,KAAqB,EAAMhF,EAAEgF,UAAOD,EAC9C/B,QAAc+B,IAAV/E,EAAEE,IAAoB,EAAMF,EAAEE,SAAM6E,EACxChC,QAAcgC,IAAV/E,EAAEG,KAAqB,EAAMH,EAAEG,SAAM4E,EACzCjC,QAAciC,IAAV/E,EAAEI,IAAoB,EAAMJ,EAAEI,SAAM2E,EACxC3E,SAAc2E,IAAT/E,EAAE8C,GAAmB,EAAM9C,EAAE8C,QAAKiC,EACvC5E,SAAc4E,IAAT/E,EAAE+C,IAAoB,EAAM/C,EAAE+C,QAAKgC,EACxC7E,SAAc6E,IAAT/E,EAAEgD,GAAmB,EAAMhD,EAAEgD,QAAK+B,EACvCC,UAAmBD,IAAb/E,EAAE8E,OAAuB,EAAM9E,EAAE8E,YAASC,IAuE3CI,EAAmB,SAA+DnF,EAAM6E,GACjG,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACvCQ,OAAoBP,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,GACnCwC,OAAoBR,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,GACnC0C,OAAqBT,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,KACtCmF,GAAYC,GAAYC,GAAYC,KACpCJ,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,GAC1BQ,IAAUF,GAAuBpF,EAAE+C,GAAM8B,EAAE9B,GAAjB,GAC1BwC,IAAUH,GAAuBpF,EAAE8C,GAAM+B,EAAE/B,GAAjB,GAC1B0C,IAAUJ,GAAwBpF,EAAEE,IAAO2E,EAAE3E,KAAlB,IAEnC,IAAIuF,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,OAC/Bc,OAAgBb,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAEzE,IAC/ByF,OAAgBd,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE1E,IAC/B2F,OAAiBf,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE9B,GAChCgD,OAAiBhB,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE/B,GAChCkD,OAAiBjB,IAAV/E,EAAEE,UAAgC6E,IAAXF,EAAEG,KAChCiB,OAAkBlB,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAE3E,KACnCwF,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,KACxDR,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,GAClBc,IAAMH,GAAoBzF,EAAE+C,GAAM8B,EAAEzE,KAAjB,GACnByF,IAAMJ,GAAoBzF,EAAE8C,GAAM+B,EAAE1E,KAAjB,GACnB2F,IAAML,GAAmBzF,EAAEI,IAAOyE,EAAE9B,GAAlB,GAClBgD,IAAMN,GAAmBzF,EAAEG,IAAO0E,EAAE/B,GAAlB,GAClBkD,IAAMP,GAAoBzF,EAAEE,IAAO2E,EAAEG,MAAlB,GACnBiB,IAAMR,GAAoBzF,EAAEgF,KAAQH,EAAE3E,KAAnB,IAE3B,IAAIgG,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,OAC/BuB,OAAgBtB,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE3E,IAC/BoG,OAAiBvB,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE/B,IAClCqD,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,GAClBuB,IAAMH,GAAoBlG,EAAE8C,GAAM+B,EAAE3E,KAAjB,GACnBoG,IAAMJ,GAAmBlG,EAAEE,IAAO2E,EAAE/B,GAAlB,IAE1B,IAAIyD,OAAWxB,EACTyB,OAAoBzB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE/B,GACnC2D,OAAgB1B,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE3E,IAC/BwG,OAAgB3B,IAAT/E,EAAE8C,SAAiCiC,IAAbF,EAAEC,OAC/B6B,OAAiB5B,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE9B,IAClCyD,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBvG,EAAE8E,OAAUD,EAAE/B,GAArB,GAClB2D,IAAMF,GAAmBvG,EAAE+C,GAAM8B,EAAE3E,IAAjB,GAClBwG,IAAMH,GAAmBvG,EAAE8C,GAAM+B,EAAEC,OAAjB,GAClB6B,IAAMJ,GAAoBvG,EAAEE,IAAO2E,EAAE9B,IAAlB,IAE3B,IAAI6D,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE9B,GAChCgE,OAAiBhC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE7B,GAChCgE,OAAiBjC,IAAT/E,EAAE8C,SAA+BiC,IAAXF,EAAEG,KAChCiC,OAAkBlC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,OACjCoC,OAAkBnC,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE3E,IACjCiH,OAAkBpC,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE1E,IACjCiH,OAAmBrC,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE/B,IACpC+D,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,KAC/DR,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAEgD,GAAM6B,EAAE9B,GAAjB,GACpBgE,IAAOH,GAAqB5G,EAAE+C,GAAM8B,EAAE7B,IAAjB,GACrBgE,IAAOJ,GAAoB5G,EAAE8C,GAAM+B,EAAEG,KAAjB,GACpBiC,IAAOL,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,GACpBoC,IAAON,GAAqB5G,EAAEG,IAAO0E,EAAE3E,KAAlB,GACrBiH,IAAOP,GAAoB5G,EAAEE,IAAO2E,EAAE1E,IAAlB,GACpBiH,IAAOR,GAAoB5G,EAAEgF,KAAQH,EAAE/B,GAAnB,IAE5B,IAAIuE,OAAYtC,EACVuC,OAAqBvC,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE1E,IACpCoH,OAAiBxC,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE/B,GAChC0E,OAAiBzC,IAAT/E,EAAE+C,SAA+BgC,IAAXF,EAAEG,KAChCyC,OAAiB1C,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE7B,GAChC0E,OAAkB3C,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAE3E,IACjCyH,OAAkB5C,IAAV/E,EAAEG,UAAkC4E,IAAbF,EAAEC,OACjC8C,OAAkB7C,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAEzE,IACjCyH,OAAmB9C,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE9B,IACpCuE,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,KAC/DR,EAAY,EACRC,IAAOD,GAAoBrH,EAAE8E,OAAUD,EAAE1E,IAArB,GACpBoH,IAAOF,GAAoBrH,EAAEgD,GAAM6B,EAAE/B,GAAjB,GACpB0E,IAAOH,GAAqBrH,EAAE+C,GAAM8B,EAAEG,MAAjB,GACrByC,IAAOJ,GAAqBrH,EAAE8C,GAAM+B,EAAE7B,IAAjB,GACrB0E,IAAOL,GAAoBrH,EAAEI,IAAOyE,EAAE3E,IAAlB,GACpByH,IAAON,GAAoBrH,EAAEG,IAAO0E,EAAEC,OAAlB,GACpB8C,IAAOP,GAAqBrH,EAAEE,IAAO2E,EAAEzE,KAAlB,GACrByH,IAAOR,GAAqBrH,EAAEgF,KAAQH,EAAE9B,IAAnB,IAE7B,IAAI+E,OAAY/C,EACVgD,OAAqBhD,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE3E,IACpC8H,OAAiBjD,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE/B,GAChCmF,OAAiBlD,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE9B,GAChCmF,OAAkBnD,IAAV/E,EAAEE,UAAkC6E,IAAbF,EAAEC,QACnCiD,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB9H,EAAE8E,OAAUD,EAAE3E,IAArB,GACpB8H,IAAOF,GAAoB9H,EAAE+C,GAAM8B,EAAE/B,GAAjB,GACpBmF,IAAOH,GAAqB9H,EAAE8C,GAAM+B,EAAE9B,IAAjB,GACrBmF,IAAOJ,GAAoB9H,EAAEE,IAAO2E,EAAEC,OAAlB,IAE5B,IAAIqD,OAAapD,EACXqD,OAAsBrD,IAAb/E,EAAE8E,aAAmCC,IAAXF,EAAEG,KACrCqD,OAAkBtD,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAE3E,IACjCoI,OAAkBvD,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE1E,IACjCoI,OAAkBxD,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAEzE,IACjCoI,QAAmBzD,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE/B,GAClC2F,QAAmB1D,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE9B,GAClC2F,QAAmB3D,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE7B,GAClC2F,QAAoB5D,IAAX/E,EAAEgF,WAAmCD,IAAbF,EAAEC,OAsBzC,OArBIsD,GAAUC,GAAUC,GAAUC,GAAUC,IAAUC,IAAUC,IAAUC,MACtER,EAAa,EACTC,IAAQD,GAAqBnI,EAAE8E,OAAUD,EAAEG,KAArB,GACtBqD,IAAQF,GAAqBnI,EAAEgD,GAAM6B,EAAE3E,IAAjB,GACtBoI,IAAQH,GAAsBnI,EAAE+C,GAAM8B,EAAE1E,KAAjB,GACvBoI,IAAQJ,GAAqBnI,EAAE8C,GAAM+B,EAAEzE,IAAjB,GACtBoI,KAAQL,GAAqBnI,EAAEI,IAAOyE,EAAE/B,GAAlB,GACtB2F,KAAQN,GAAsBnI,EAAEG,IAAO0E,EAAE9B,IAAlB,GACvB2F,KAAQP,GAAqBnI,EAAEE,IAAO2E,EAAE7B,GAAlB,GACtB2F,KAAQR,GAAqBnI,EAAEgF,KAAQH,EAAEC,OAAnB,IAEV,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJpD,GAAIyD,EACJnG,IAAKwG,EACLzG,IAAKkH,EACLnH,IAAK4H,EACL9C,KAAMmD,IAuDDS,EAAe,SAA+D5I,EAAM6E,GAC7F,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACvCQ,OAAoBP,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,GACnCwC,OAAoBR,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,GACnC0C,OAAqBT,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,KACtCmF,GAAYC,GAAYC,GAAYC,KACpCJ,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,GAC1BQ,IAAUF,GAAuBpF,EAAE+C,GAAM8B,EAAE9B,GAAjB,GAC1BwC,IAAUH,GAAuBpF,EAAE8C,GAAM+B,EAAE/B,GAAjB,GAC1B0C,IAAUJ,GAAwBpF,EAAEE,IAAO2E,EAAE3E,KAAlB,IAEnC,IAAIuF,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,OAC/Bc,OAAgBb,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAEzE,IAC/ByF,OAAgBd,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE1E,IAC/B2F,OAAiBf,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE9B,GAChCgD,OAAiBhB,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE/B,GAChCkD,OAAiBjB,IAAV/E,EAAEE,UAAgC6E,IAAXF,EAAEG,KAChCiB,OAAkBlB,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAE3E,KACnCwF,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,KACxDR,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,GAClBc,IAAMH,GAAoBzF,EAAE+C,GAAM8B,EAAEzE,KAAjB,GACnByF,IAAMJ,GAAoBzF,EAAE8C,GAAM+B,EAAE1E,KAAjB,GACnB2F,IAAML,GAAmBzF,EAAEI,IAAOyE,EAAE9B,GAAlB,GAClBgD,IAAMN,GAAmBzF,EAAEG,IAAO0E,EAAE/B,GAAlB,GAClBkD,IAAMP,GAAoBzF,EAAEE,IAAO2E,EAAEG,MAAlB,GACnBiB,IAAMR,GAAoBzF,EAAEgF,KAAQH,EAAE3E,KAAnB,IAE3B,IAAIgG,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,OAC/BuB,OAAgBtB,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE3E,IAC/BoG,OAAiBvB,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE/B,IAClCqD,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,GAClBuB,IAAMH,GAAoBlG,EAAE8C,GAAM+B,EAAE3E,KAAjB,GACnBoG,IAAMJ,GAAmBlG,EAAEE,IAAO2E,EAAE/B,GAAlB,IAE1B,IAAIyD,OAAWxB,EACTyB,OAAoBzB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE/B,GACnC2D,OAAgB1B,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE3E,IAC/BwG,OAAgB3B,IAAT/E,EAAE8C,SAAiCiC,IAAbF,EAAEC,OAC/B6B,OAAiB5B,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE9B,IAClCyD,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBvG,EAAE8E,OAAUD,EAAE/B,GAArB,GAClB2D,IAAMF,GAAmBvG,EAAE+C,GAAM8B,EAAE3E,IAAjB,GAClBwG,IAAMH,GAAmBvG,EAAE8C,GAAM+B,EAAEC,OAAjB,GAClB6B,IAAMJ,GAAoBvG,EAAEE,IAAO2E,EAAE9B,IAAlB,IAE3B,IAAI6D,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAE8C,SAA+BiC,IAAXF,EAAEG,KAChC+B,OAAkBhC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,OACjCkC,OAAmBjC,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE/B,IACpC+D,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAE8C,GAAM+B,EAAEG,KAAjB,GACpB+B,IAAOH,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,GACpBkC,IAAOJ,GAAoB5G,EAAEgF,KAAQH,EAAE/B,GAAnB,IAE5B,IAAIuE,OAAYtC,EACVuC,OAAqBvC,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE1E,IACpCoH,OAAiBxC,IAAT/E,EAAE+C,SAA+BgC,IAAXF,EAAEG,KAChCwC,OAAkBzC,IAAV/E,EAAEG,UAAkC4E,IAAbF,EAAEC,OACjC2C,OAAmB1C,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE9B,IACpCuE,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoBrH,EAAE8E,OAAUD,EAAE1E,IAArB,GACpBoH,IAAOF,GAAqBrH,EAAE+C,GAAM8B,EAAEG,MAAjB,GACrBwC,IAAOH,GAAoBrH,EAAEG,IAAO0E,EAAEC,OAAlB,GACpB2C,IAAOJ,GAAqBrH,EAAEgF,KAAQH,EAAE9B,IAAnB,IAE7B,IAAI+E,OAAY/C,EACVgD,OAAqBhD,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE3E,IACpC8H,OAAkBjD,IAAV/E,EAAEE,UAAkC6E,IAAbF,EAAEC,QACnCiD,GAASC,KACTF,EAAY,EACRC,IAAOD,GAAoB9H,EAAE8E,OAAUD,EAAE3E,IAArB,GACpB8H,IAAOF,GAAoB9H,EAAEE,IAAO2E,EAAEC,OAAlB,IAE5B,IAAIqD,OAAapD,EACXqD,OAAsBrD,IAAb/E,EAAE8E,aAAmCC,IAAXF,EAAEG,KACrCqD,OAAoBtD,IAAX/E,EAAEgF,WAAmCD,IAAbF,EAAEC,OAgBzC,OAfIsD,GAAUC,KACVF,EAAa,EACTC,IAAQD,GAAqBnI,EAAE8E,OAAUD,EAAEG,KAArB,GACtBqD,IAAQF,GAAqBnI,EAAEgF,KAAQH,EAAEC,OAAnB,IAEV,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJpD,GAAIyD,EACJnG,IAAKwG,EACLzG,IAAKkH,EACLnH,IAAK4H,EACL9C,KAAMmD,IAkDDU,EAAkB,SAA+D7I,EAAM6E,GAChG,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACzCO,IACAD,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,IAElC,IAAIW,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,QACjCY,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,IAE1B,IAAIoB,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,QACjCqB,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,IAE1B,IAAIyB,OAAWxB,EACTyB,OAAoBzB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE/B,GACnC2D,OAAgB1B,IAAT/E,EAAE8C,SAAiCiC,IAAbF,EAAEC,QACjC0B,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBvG,EAAE8E,OAAUD,EAAE/B,GAArB,GAClB2D,IAAMF,GAAmBvG,EAAE8C,GAAM+B,EAAEC,OAAjB,IAE1B,IAAI8B,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE9B,GAChCgE,OAAiBhC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE7B,GAChCgE,OAAkBjC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,QACnC+B,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAEgD,GAAM6B,EAAE9B,GAAjB,GACpBgE,IAAOH,GAAqB5G,EAAE+C,GAAM8B,EAAE7B,IAAjB,GACrBgE,IAAOJ,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,IAE5B,IAAIuC,OAAYtC,EACVuC,OAAqBvC,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE1E,IACpCoH,OAAiBxC,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE/B,GAChC0E,OAAiBzC,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE7B,GAChCyE,OAAkB1C,IAAV/E,EAAEG,UAAkC4E,IAAbF,EAAEC,QACnCwC,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoBrH,EAAE8E,OAAUD,EAAE1E,IAArB,GACpBoH,IAAOF,GAAoBrH,EAAEgD,GAAM6B,EAAE/B,GAAjB,GACpB0E,IAAOH,GAAqBrH,EAAE8C,GAAM+B,EAAE7B,IAAjB,GACrByE,IAAOJ,GAAoBrH,EAAEG,IAAO0E,EAAEC,OAAlB,IAE5B,IAAIgD,OAAY/C,EACVgD,OAAqBhD,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE3E,IACpC8H,OAAiBjD,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE/B,GAChCmF,OAAiBlD,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE9B,GAChCmF,OAAkBnD,IAAV/E,EAAEE,UAAkC6E,IAAbF,EAAEC,QACnCiD,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB9H,EAAE8E,OAAUD,EAAE3E,IAArB,GACpB8H,IAAOF,GAAoB9H,EAAE+C,GAAM8B,EAAE/B,GAAjB,GACpBmF,IAAOH,GAAqB9H,EAAE8C,GAAM+B,EAAE9B,IAAjB,GACrBmF,IAAOJ,GAAoB9H,EAAEE,IAAO2E,EAAEC,OAAlB,IAE5B,IAAIqD,OAAapD,EACXqD,OAAsBrD,IAAb/E,EAAE8E,aAAmCC,IAAXF,EAAEG,KACrCqD,OAAkBtD,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAE3E,IACjCoI,OAAkBvD,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE1E,IACjCoI,OAAkBxD,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAEzE,IACjCoI,OAAmBzD,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE/B,GAClC2F,OAAmB1D,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE9B,GAClC2F,OAAmB3D,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE7B,GAClC2F,OAAoB5D,IAAX/E,EAAEgF,WAAmCD,IAAbF,EAAEC,OAsBzC,OArBIsD,GAAUC,GAAUC,GAAUC,GAAUC,GAAUC,GAAUC,GAAUC,KACtER,EAAa,EACTC,IAAQD,GAAqBnI,EAAE8E,OAAUD,EAAEG,KAArB,GACtBqD,IAAQF,GAAqBnI,EAAEgD,GAAM6B,EAAE3E,IAAjB,GACtBoI,IAAQH,GAAsBnI,EAAE+C,GAAM8B,EAAE1E,KAAjB,GACvBoI,IAAQJ,GAAqBnI,EAAE8C,GAAM+B,EAAEzE,IAAjB,GACtBoI,IAAQL,GAAqBnI,EAAEI,IAAOyE,EAAE/B,GAAlB,GACtB2F,IAAQN,GAAsBnI,EAAEG,IAAO0E,EAAE9B,IAAlB,GACvB2F,IAAQP,GAAqBnI,EAAEE,IAAO2E,EAAE7B,GAAlB,GACtB2F,IAAQR,GAAqBnI,EAAEgF,KAAQH,EAAEC,OAAnB,IAEV,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJpD,GAAIyD,EACJnG,IAAKwG,EACLzG,IAAKkH,EACLnH,IAAK4H,EACL9C,KAAMmD,IAKDW,EAAW,SAAgC9I,EAAM6E,GAW1D,MAVoB,CAChBC,YAAqBC,IAAb/E,EAAE8E,OAAuB9E,EAAE8E,OAASD,OAAIE,EAChD/B,QAAa+B,IAAT/E,EAAEgD,GAAmBhD,EAAEgD,GAAK6B,OAAIE,EACpChC,QAAagC,IAAT/E,EAAE+C,GAAmB/C,EAAE+C,GAAK8B,OAAIE,EACpCjC,QAAaiC,IAAT/E,EAAE8C,GAAmB9C,EAAE8C,GAAK+B,OAAIE,EACpC3E,SAAe2E,IAAV/E,EAAEI,IAAoBJ,EAAEI,IAAMyE,OAAIE,EACvC5E,SAAe4E,IAAV/E,EAAEG,IAAoBH,EAAEG,IAAM0E,OAAIE,EACvC7E,SAAe6E,IAAV/E,EAAEE,IAAoBF,EAAEE,IAAM2E,OAAIE,EACvCC,UAAiBD,IAAX/E,EAAEgF,KAAqBhF,EAAEgF,KAAOH,OAAIE,IAKrCgE,EAAM,SAAgC/I,EAAM6E,GAWrD,MAVoB,CAChBC,YAAqBC,IAAb/E,EAAE8E,OAAuB9E,EAAE8E,OAASD,OAAIE,EAChD/B,QAAa+B,IAAT/E,EAAEgD,GAAmBhD,EAAEgD,GAAK6B,OAAIE,EACpChC,QAAagC,IAAT/E,EAAE+C,GAAmB/C,EAAE+C,GAAK8B,OAAIE,EACpCjC,QAAaiC,IAAT/E,EAAE8C,GAAmB9C,EAAE8C,GAAK+B,OAAIE,EACpC3E,SAAe2E,IAAV/E,EAAEI,IAAoBJ,EAAEI,IAAMyE,OAAIE,EACvC5E,SAAe4E,IAAV/E,EAAEG,IAAoBH,EAAEG,IAAM0E,OAAIE,EACvC7E,SAAe6E,IAAV/E,EAAEE,IAAoBF,EAAEE,IAAM2E,OAAIE,EACvCC,UAAiBD,IAAX/E,EAAEgF,KAAqBhF,EAAEgF,KAAOH,OAAIE,IAKrCiE,EAAY,SAAgChJ,GAWrD,MAVoB,CAChB8E,OAAQ9E,EAAE8E,QAAU9E,EAAE8E,OACtB9B,GAAIhD,EAAEgD,IAAMhD,EAAEgD,GACdD,GAAI/C,EAAE+C,IAAM/C,EAAE+C,GACdD,GAAI9C,EAAE8C,IAAM9C,EAAE8C,GACd1C,IAAKJ,EAAEI,MAAQJ,EAAEI,IACjBD,IAAKH,EAAEG,MAAQH,EAAEG,IACjBD,IAAKF,EAAEE,MAAQF,EAAEE,IACjB8E,KAAMhF,EAAEgF,OAAShF,EAAEgF,OAKdiE,EAAO,SAAgCjJ,GAAsC,IAAhCkJ,EAA+B,uDAAd,EACnEC,EAAS,GAyDb,YAxDiBpE,IAAb/E,EAAE8E,SAEEqE,GADW,KAAXA,EACUnJ,EAAE8E,OAAOlB,QAAQsF,GAAU,GAE3BlJ,EAAE8E,QAAU,EAAI,MAAQ9E,EAAE8E,OAAOlB,QAAQsF,GAAe,MAAQtG,KAAKC,IAAI7C,EAAE8E,QAAQlB,QAAQsF,SAGhGnE,IAAT/E,EAAEgD,KAEEmG,GADW,KAAXA,EACUnJ,EAAEgD,GAAGY,QAAQsF,GAAU,KAEvBlJ,EAAEgD,IAAM,EAAI,MAAQhD,EAAEgD,GAAGY,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAEgD,IAAIY,QAAQsF,GAAU,WAGhGnE,IAAT/E,EAAE+C,KAEEoG,GADW,KAAXA,EACUnJ,EAAE+C,GAAGa,QAAQsF,GAAU,KAEvBlJ,EAAE+C,IAAM,EAAI,MAAQ/C,EAAE+C,GAAGa,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAE+C,IAAIa,QAAQsF,GAAU,WAGhGnE,IAAT/E,EAAE8C,KAEEqG,GADW,KAAXA,EACUnJ,EAAE8C,GAAGc,QAAQsF,GAAU,KAEvBlJ,EAAE8C,IAAM,EAAI,MAAQ9C,EAAE8C,GAAGc,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAE8C,IAAIc,QAAQsF,GAAU,WAG/FnE,IAAV/E,EAAEI,MAEE+I,GADW,KAAXA,EACUnJ,EAAEI,IAAIwD,QAAQsF,GAAU,MAExBlJ,EAAEI,KAAO,EAAI,MAAQJ,EAAEI,IAAIwD,QAAQsF,GAAU,MAAQ,MAAQtG,KAAKC,IAAI7C,EAAEI,KAAKwD,QAAQsF,GAAU,YAGnGnE,IAAV/E,EAAEG,MAEEgJ,GADW,KAAXA,EACUnJ,EAAEG,IAAIyD,QAAQsF,GAAU,MAExBlJ,EAAEG,KAAO,EAAI,MAAQH,EAAEG,IAAIyD,QAAQsF,GAAU,MAAQ,MAAQtG,KAAKC,IAAI7C,EAAEG,KAAKyD,QAAQsF,GAAU,YAGnGnE,IAAV/E,EAAEE,MAEEiJ,GADW,KAAXA,EACUnJ,EAAEE,IAAI0D,QAAQsF,GAAU,MAExBlJ,EAAEE,KAAO,EAAI,MAAQF,EAAEE,IAAI0D,QAAQsF,GAAU,MAAQ,MAAQtG,KAAKC,IAAI7C,EAAEE,KAAK0D,QAAQsF,GAAU,YAGlGnE,IAAX/E,EAAEgF,OAEEmE,GADW,KAAXA,EACUnJ,EAAEgF,KAAKpB,QAAQsF,GAAU,OAEzBlJ,EAAEgF,MAAQ,EAAI,MAAQhF,EAAEgF,KAAKpB,QAAQsF,GAAU,OAAS,MAAQtG,KAAKC,IAAI7C,EAAEgF,MAAMpB,QAAQsF,GAAU,QAG9GC,GAGEC,EAAoB,SAA+DpJ,EAAM6E,GAArE,OAC7BK,EAAK2D,EAAgB3D,EAAKlF,GAAIkF,EAAKL,MAE1BwE,EAAkB,SAA+DrJ,EAAM6E,GAArE,OAC3BM,EAAiBN,EAAGM,EAAiBnF,EAAGgJ,EAAUnE,MAEzCyE,EAAoB,SAA+DtJ,EAAM6E,GAArE,OAC7BiE,EAAS7D,EAAIE,EAAiBnF,EAAG6E,GAAIM,EAAiBN,EAAG7E,IAAK,KAErDuJ,EAAc,SAAgCvJ,GACvD,IACMwJ,EADKrE,EAAiBnF,EAAGA,GAClB8E,QAAU,EAIvB,GAAI0E,EAAI,EAAG,CACP,IAAMC,EAAQ7G,KAAK8G,KAAKF,GAAK5G,KAAK+G,KAAK/G,KAAKC,IAAI2G,IAChD,OAAO5E,EAAI,CAAEE,OAAQlC,KAAKgH,IAAIH,IAAUX,EAAS9I,EAAG4C,KAAKiH,IAAIJ,GAASA,IACnE,GAAID,EAAI,EAAG,CACd,IAAMC,EAAQ7G,KAAK8G,KAAKF,GAAK5G,KAAK+G,KAAK/G,KAAKC,IAAI2G,IAChD,OAAO5E,EAAI,CAAEE,OAAQlC,KAAKkH,KAAKL,IAAUX,EAAS9I,EAAG4C,KAAKmH,KAAKN,GAASA,IAExE,OAAO7E,EAAI,CAAEE,OAAQ,GAAK9E,K,qMCnuB3B,SAASgK,IACZ,OACI,gCACI,uCACA,gYAMA,0CACA,+BACI,6BAAI,cAAC,IAAD,CAAMC,GAAG,cAAT,0BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,aAAT,wCACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,OAAT,4CACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,gBAAT,4BACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,eAAT,2DCfb,SAASC,IACZ,OACI,gCACI,4CAEA,qDACA,gOAKA,+BACI,6BAAI,mBAAGC,KAAK,8EAAR,0CACJ,6BAAI,mBAAGA,KAAK,2FAAR,uEACJ,6BAAI,mBAAGA,KAAK,wFAAR,kCACJ,6BAAI,mBAAGA,KAAK,qFAAR,yCACJ,6BAAI,mBAAGA,KAAK,qFAAR,4DAGR,6BAAI,cAAC,IAAD,CAAMF,GAAG,aAAT,iD,iuBClBT,SAASG,aAOZ,OALAxI,sDAAU,WAENyI,KAAK,wDACN,IAGC,6EACI,uGACA,kSAMA,sFACA,gXAI2B,mFAJ3B,QAI+C,mFAJ/C,0GAQA,2DAAC,gDAAD,CAAiBC,WAAYC,+CACzBC,YAAY,EAAMC,gBAAgB,IAGtC,gGACA,sRAKA,iHACA,meAWA,2DAAC,gDAAD,CAAiBH,WAAYC,iDAE7B,2HACA,6cAWA,yXAQA,2DAAC,gDAAD,CAAiBD,WAAYC,iDAE7B,uFACA,kkBAaA,2DAAC,gDAAD,CAAiBD,WAAYC,iDAE7B,0FACA,6EACI,+IACA,4EACI,4EACI,yFADJ,qEAGA,4EACI,yFADJ,gHAIA,4EAAI,mFAAJ,kJAOR,qFAEA,iGACA,4NAIA,2DAAC,gDAAD,CAAiBD,WAAYC,iDAE7B,8gBAWA,oEAEA,iUAMA,2DAAC,gDAAD,CAAiBD,WAAYC,+CACzBC,YAAY,EAAMC,gBAAgB,IAGtC,0eAOA,+GAEA,wWAIU,gEAAGN,KAAK,kDAAR,6BAJV,gZAgBA,2DAAC,gDAAD,CAAiBG,WAAYC,+CACzBC,YAAY,EAAMC,gBAAgB,IAEtC,0SAOA,gGACA,+ZAUgD,mBAVhD,oBAUoF,gEAAGN,KAAK,iEAAR,uBAVpF,kFAWsE,WAXtE,YAW2F,WAX3F,+IAasC,kCAbtC,OAeA,qYAWA,mLAIA,2DAAC,gDAAD,CAAiBG,WAAYC,+CACzBC,YAAY,EAAMC,gBAAgB,IAGtC,mwBAoBA,2DAAC,gDAAD,CAAiBH,WAAYC,+CAAwBG,YAAa,CAACxG,OAAQ,OAE3E,0JAC8E,gEAAGiG,KAAK,2CAAR,yBAD9E,OAIA,gGACA,ueAIoB,kGAJpB,2DAKU,mGALV,QAK8C,4FAL9C,OAQA,2DAAC,gDAAD,CAAiBG,WAAYC,+CAA2BG,YAAa,CAACxG,OAAQ,OAE9E,sFACA,2EACI,4EACI,4EAAI,sGAAJ,uFACA,4EAAI,sGAAJ,6FACA,4EAAI,qIAAJ,yEACA,4EAAI,uFAAJ,iGACA,4EAAI,2HAAJ,2CAIR,yFACA,4WAKA,oEACA,0UAKA,0EAAI,2DAAC,gDAAD,CAAM+F,GAAG,OAAT,uD,+sBC3QT,SAASU,cAOZ,OALA/I,sDAAU,WAENyI,KAAK,wDACN,IAGC,6EACI,2FACA,ijBAYA,oEAEA,qnCAoBA,2GACA,yGACA,8YAKA,oEACA,mQAIA,qFACA,4YAQI,mFARJ,sBAQsC,mFARtC,QAQ0D,mFAR1D,OAWA,2DAAC,gDAAD,CAAiBC,WAAYC,gDACzBC,YAAY,EAAMC,gBAAgB,IAEtC,qaAOA,0FACA,uPAIA,ujBAOA,4hBAYA,2DAAC,gDAAD,CAAiBH,WAAYC,gDACzBC,YAAY,EAAMC,gBAAgB,IAEtC,qFACA,0eAYA,2DAAC,gDAAD,CAAiBH,WAAYC,gDACzBC,YAAY,EAAMC,gBAAgB,IAEtC,8bAIqE,+FAJrE,gKASA,2DAAC,gDAAD,CAAiBH,WAAYC,gDACzBC,YAAY,EAAMC,gBAAgB,IAEtC,mOAKA,kGACA,oXAMA,oEAEA,8ZASA,oMAE0B,gEAAGN,KAAK,sCAAR,4CAF1B,OAKA,6KAIA,2DAAC,gDAAD,CAAiBG,WAAYC,gDACzBC,YAAY,EAAMC,gBAAgB,IAEtC,oEAEA,mGACA,+hBAUA,2DAAC,gDAAD,CAAiBH,WAAYC,gDACzBC,YAAY,EAAMC,gBAAgB,IAEtC,2PAKA,qGACA,8UAKA,glBAYA,qOAKA,2DAAC,gDAAD,CAAiBH,WAAYC,gDACzBC,YAAY,EAAMC,gBAAgB,IAEtC,sFACA,2EACI,4EACI,4EAAI,kGAAJ,yCACA,4EAAI,+FAAJ,6CACA,4EAAI,2HAAJ,sDACA,4EAAI,mKAAJ,wCACA,4EAAI,mFAAJ,8CACA,4EAAI,6FAAJ,0DACA,4EAAI,wHAAJ,sFAIR,yFACA,oZAMA,oEACA,2ZAMA,0EAAI,2DAAC,gDAAD,CAAMR,GAAG,gBAAT,uC,urCC1OVW,qBAAkD,CACpD,WAAc,aACd,YAAa,2BACb,IAAO,+BACP,eAAgB,eAChB,cAAe,yCAGNC,kBAAoB,SAACC,GAC9B,IAAMC,EAAY,CAAC,qBACbC,EAAW,CAAC,IAEdC,EAAcH,EAC0B,MAAxCG,EAAYA,EAAYzJ,OAAS,KACjCyJ,EAAcA,EAAYC,OAAO,EAAGD,EAAYzJ,OAAS,IAK7D,IAFA,IAAI2J,EAAYF,EAAYC,OAAO,GAAGE,MAAM,KAErCD,EAAU3J,OAAS,GAAG,CACzB,IAAM6J,EAAcF,EAAU,GAG9BJ,EAAUpJ,KAAKiJ,qBAAqBS,GAAeT,qBAAqBS,GAAeA,GAGvFL,EAASrJ,KAAT,UAAiBqJ,EAASA,EAASxJ,OAAS,GAA5C,YAAkD2J,EAAU,KAG5DA,EAAUG,OAAO,EAAG,GAMxB,OAFAN,EAAS,GAAK,IAEPD,EAAUpH,KAAI,SAAC4H,EAAM/H,GACxB,MAAO,CAAE+H,KAAMA,EAAMC,IAAKR,EAASxH,QAI3C,SAASiI,WACL,OAAO,wFAGX,SAASC,eACL,IAAMC,EAAWC,0DAEXC,EAAc1K,oDAAQ,WAGxB,OAFe0J,kBAAkBc,EAASG,UAGrCnI,KAAI,SAAAoI,GAAC,OAAI,2DAAC,gDAAD,CAAM9B,GAAI8B,EAAEP,IAAZ,SAAkBO,EAAER,UAC7BS,QAAO,SAAC3H,EAAGlC,GAAJ,OAAU,mIAAIkC,EAAJ,MAAalC,EAAb,aACvB,CAACwJ,IAEJ,OACI,+HACI,mEAAKM,UAAU,0BAAf,UACI,kEAAKA,UAAU,wEACf,mEACIA,UAAU,0GADd,UAEI,kEAAKA,UAAU,uCAAf,SACKJ,IAEL,4DAAC,gDAAD,WACI,2DAAC,gDAAD,CAAOf,KAAK,cAAZ,SACI,2DAAC,sCAAD,MAEJ,2DAAC,gDAAD,CAAOA,KAAK,aAAZ,SACI,2DAAC,sCAAD,MAEJ,2DAAC,gDAAD,CAAOA,KAAK,OAAZ,SACI,2DAAC,sCAAD,MAEJ,2DAAC,gDAAD,CAAOA,KAAK,gBAAZ,SACI,2DAAC,2DAAD,MAEJ,2DAAC,gDAAD,CAAOoB,OAAK,EAACpB,KAAK,IAAlB,SACI,2DAAC,sCAAD,MAEJ,2DAAC,gDAAD,CAAOoB,OAAK,EAACpB,KAAK,eAAlB,SACI,2DAAC,iDAAD,MAEJ,2DAAC,gDAAD,CAAOA,KAAK,IAAZ,SACI,2DAACW,SAAD,eAKhB,qEAAQQ,UAAU,8BAAlB,SACI,kEAAKA,UAAU,gCAAf,SACI,iEAAIA,UAAU,sCAQlC,SAASE,MAsBL,OArBAvK,sDAAU,WAEN,IAAMwK,IAAMC,OACZD,IAAIE,GAAKA,uCACTF,IAAIG,KAAOA,wCACXH,IAAIvK,IAAMA,wCACVuK,IAAII,IAAMA,uCACVJ,IAAIK,YAAc,SAAC3I,EAAkB4I,GACjCC,iDAASC,OAAOJ,iDAAc,CAAE1I,MAAOA,IAAU4I,IAIrDrC,KAAK,gMAON,IAGC,2DAAC,gDAAD,UACI,2DAACqB,aAAD,MAKGS,2B,gCC5Gf,8lBAAO,IAAMvH,EAAM,SAA+D5E,EAAM6E,GAOpF,MANoB,CAChBC,YAAsBC,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,QAAyB9E,EAAE8E,QAAU,IAAMD,EAAEC,QAAU,QAAKC,EACjG/B,QAAc+B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,IAAqBhD,EAAEgD,IAAM,IAAM6B,EAAE7B,IAAM,QAAK+B,EAC7EhC,QAAcgC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,IAAqB/C,EAAE+C,IAAM,IAAM8B,EAAE9B,IAAM,QAAKgC,EAC7E3E,SAAgB2E,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KAAsBJ,EAAEI,KAAO,IAAMyE,EAAEzE,KAAO,QAAK2E,IAK7EE,EAAM,SAA+DjF,EAAM6E,GAOpF,MANoB,CAChBC,YAAsBC,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,QAAyB9E,EAAE8E,QAAU,IAAMD,EAAEC,QAAU,QAAKC,EACjG/B,QAAc+B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,IAAqBhD,EAAEgD,IAAM,IAAM6B,EAAE7B,IAAM,QAAK+B,EAC7EhC,QAAcgC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,IAAqB/C,EAAE+C,IAAM,IAAM8B,EAAE9B,IAAM,QAAKgC,EAC7E3E,SAAgB2E,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KAAsBJ,EAAEI,KAAO,IAAMyE,EAAEzE,KAAO,QAAK2E,IAY7EG,EAAO,SAAgClF,GAOhD,MANoB,CAChB8E,YAAkBC,IAAV/E,EAAEI,IAAoB,EAAMJ,EAAEI,SAAM2E,EAC5C/B,QAAa+B,IAAT/E,EAAE+C,GAAmB,EAAM/C,EAAE+C,QAAKgC,EACtChC,QAAagC,IAAT/E,EAAEgD,IAAoB,EAAMhD,EAAEgD,QAAK+B,EACvC3E,SAAkB2E,IAAb/E,EAAE8E,OAAuB,EAAM9E,EAAE8E,YAASC,IA+B1CI,EAAmB,SAA+DnF,EAAM6E,GACjG,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACvCQ,OAAoBP,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,GACnCuC,OAAoBR,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,GACnCyC,OAAqBT,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KACtCiF,GAAYC,GAAYC,GAAYC,KACpCJ,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,GAC1BQ,IAAUF,GAAuBpF,EAAEgD,GAAM6B,EAAE7B,GAAjB,GAC1BuC,IAAUH,GAAuBpF,EAAE+C,GAAM8B,EAAE9B,GAAjB,GAC1ByC,IAAUJ,GAAwBpF,EAAEI,IAAOyE,EAAEzE,KAAlB,IAEnC,IAAIqF,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,OAC/Bc,OAAgBb,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAEzE,IAC/ByF,OAAiBd,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE9B,IAClC2C,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,GAClBc,IAAMH,GAAoBzF,EAAE+C,GAAM8B,EAAEzE,KAAjB,GACnByF,IAAMJ,GAAmBzF,EAAEI,IAAOyE,EAAE9B,GAAlB,IAE1B,IAAImD,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAEzE,IAC/BiG,OAAgBtB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,OAC/BwB,OAAiBvB,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE7B,IAClCmD,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAEgD,GAAM6B,EAAEzE,IAAjB,GAClBiG,IAAMH,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,GAClBwB,IAAMJ,GAAoBlG,EAAEI,IAAOyE,EAAE7B,IAAlB,IAE3B,IAAI4D,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE9B,GAChCgE,OAAiBhC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE7B,GAChCgE,OAAkBjC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,OAcvC,OAbI+B,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAEgD,GAAM6B,EAAE9B,GAAjB,GACpBgE,IAAOH,GAAqB5G,EAAE+C,GAAM8B,EAAE7B,IAAjB,GACrBgE,IAAOJ,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,IAER,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJ9F,IAAKwG,IA6BAgC,EAAe,SAA+D5I,EAAM6E,GAC7F,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACvCQ,OAAoBP,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,GACnCuC,OAAoBR,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,GACnCyC,OAAqBT,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KACtCiF,GAAYC,GAAYC,GAAYC,KACpCJ,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,GAC1BQ,IAAUF,GAAuBpF,EAAEgD,GAAM6B,EAAE7B,GAAjB,GAC1BuC,IAAUH,GAAuBpF,EAAE+C,GAAM8B,EAAE9B,GAAjB,GAC1ByC,IAAUJ,GAAwBpF,EAAEI,IAAOyE,EAAEzE,KAAlB,IAEnC,IAAIqF,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,OAC/Bc,OAAgBb,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAEzE,IAC/ByF,OAAiBd,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE9B,IAClC2C,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,GAClBc,IAAMH,GAAoBzF,EAAE+C,GAAM8B,EAAEzE,KAAjB,GACnByF,IAAMJ,GAAmBzF,EAAEI,IAAOyE,EAAE9B,GAAlB,IAE1B,IAAImD,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAEzE,IAC/BiG,OAAgBtB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,OAC/BwB,OAAiBvB,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE7B,IAClCmD,GAAQC,GAAQC,GAAQC,KACxBJ,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAEgD,GAAM6B,EAAEzE,IAAjB,GAClBiG,IAAMH,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,GAClBwB,IAAMJ,GAAoBlG,EAAEI,IAAOyE,EAAE7B,IAAlB,IAE3B,IAAI4D,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAkB/B,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,OAYvC,OAXI+B,GAASC,KACTF,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,IAER,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJ9F,IAAKwG,IAwBAiC,EAAkB,SAA+D7I,EAAM6E,GAChG,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACzCO,IACAD,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,IAElC,IAAIW,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,QACjCY,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,IAE1B,IAAIoB,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,QACjCqB,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,IAE1B,IAAI8B,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE9B,GAChCgE,OAAiBhC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE7B,GAChCgE,OAAkBjC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,OAcvC,OAbI+B,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAEgD,GAAM6B,EAAE9B,GAAjB,GACpBgE,IAAOH,GAAqB5G,EAAE+C,GAAM8B,EAAE7B,IAAjB,GACrBgE,IAAOJ,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,IAER,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJ9F,IAAKwG,IAKAkC,EAAW,SAAgC9I,EAAM6E,GAO1D,MANoB,CAChBC,YAAqBC,IAAb/E,EAAE8E,OAAuB9E,EAAE8E,OAASD,OAAIE,EAChD/B,QAAa+B,IAAT/E,EAAEgD,GAAmBhD,EAAEgD,GAAK6B,OAAIE,EACpChC,QAAagC,IAAT/E,EAAE+C,GAAmB/C,EAAE+C,GAAK8B,OAAIE,EACpC3E,SAAe2E,IAAV/E,EAAEI,IAAoBJ,EAAEI,IAAMyE,OAAIE,IAKlCgE,EAAM,SAAgC/I,EAAM6E,GAOrD,MANoB,CAChBC,YAAqBC,IAAb/E,EAAE8E,OAAuB9E,EAAE8E,OAASD,OAAIE,EAChD/B,QAAa+B,IAAT/E,EAAEgD,GAAmBhD,EAAEgD,GAAK6B,OAAIE,EACpChC,QAAagC,IAAT/E,EAAE+C,GAAmB/C,EAAE+C,GAAK8B,OAAIE,EACpC3E,SAAe2E,IAAV/E,EAAEI,IAAoBJ,EAAEI,IAAMyE,OAAIE,IAKlCiE,EAAY,SAAgChJ,GAOrD,MANoB,CAChB8E,OAAQ9E,EAAE8E,QAAU9E,EAAE8E,OACtB9B,GAAIhD,EAAEgD,IAAMhD,EAAEgD,GACdD,GAAI/C,EAAE+C,IAAM/C,EAAE+C,GACd3C,IAAKJ,EAAEI,MAAQJ,EAAEI,MAKZ6I,EAAO,SAAgCjJ,GAAsC,IAAhCkJ,EAA+B,uDAAd,EACnEC,EAAS,GA6Bb,YA5BiBpE,IAAb/E,EAAE8E,SAEEqE,GADW,KAAXA,EACUnJ,EAAE8E,OAAOlB,QAAQsF,GAAU,GAE3BlJ,EAAE8E,QAAU,EAAI,MAAQ9E,EAAE8E,OAAOlB,QAAQsF,GAAe,MAAQtG,KAAKC,IAAI7C,EAAE8E,QAAQlB,QAAQsF,SAGhGnE,IAAT/E,EAAEgD,KAEEmG,GADW,KAAXA,EACUnJ,EAAEgD,GAAGY,QAAQsF,GAAU,KAEvBlJ,EAAEgD,IAAM,EAAI,MAAQhD,EAAEgD,GAAGY,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAEgD,IAAIY,QAAQsF,GAAU,WAGhGnE,IAAT/E,EAAE+C,KAEEoG,GADW,KAAXA,EACUnJ,EAAE+C,GAAGa,QAAQsF,GAAU,KAEvBlJ,EAAE+C,IAAM,EAAI,MAAQ/C,EAAE+C,GAAGa,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAE+C,IAAIa,QAAQsF,GAAU,WAG/FnE,IAAV/E,EAAEI,MAEE+I,GADW,KAAXA,EACUnJ,EAAEI,IAAIwD,QAAQsF,GAAU,MAExBlJ,EAAEI,KAAO,EAAI,MAAQJ,EAAEI,IAAIwD,QAAQsF,GAAU,MAAQ,MAAQtG,KAAKC,IAAI7C,EAAEI,KAAKwD,QAAQsF,GAAU,OAG1GC,GAGEC,EAAoB,SAA+DpJ,EAAM6E,GAArE,OAC7BK,EAAK2D,EAAgB3D,EAAKlF,GAAIkF,EAAKL,MAE1BwE,EAAkB,SAA+DrJ,EAAM6E,GAArE,OAC3BM,EAAiBN,EAAGM,EAAiBnF,EAAGgJ,EAAUnE,MAEzCyE,EAAoB,SAA+DtJ,EAAM6E,GAArE,OAC7BiE,EAAS7D,EAAIE,EAAiBnF,EAAG6E,GAAIM,EAAiBN,EAAG7E,IAAK,KAErDuJ,EAAc,SAAgCvJ,GACvD,IACMwJ,EADKrE,EAAiBnF,EAAGA,GAClB8E,QAAU,EAIvB,GAAI0E,EAAI,EAAG,CACP,IAAMC,EAAQ7G,KAAK8G,KAAKF,GAAK5G,KAAK+G,KAAK/G,KAAKC,IAAI2G,IAChD,OAAO5E,EAAI,CAAEE,OAAQlC,KAAKgH,IAAIH,IAAUX,EAAS9I,EAAG4C,KAAKiH,IAAIJ,GAASA,IACnE,GAAID,EAAI,EAAG,CACd,IAAMC,EAAQ7G,KAAK8G,KAAKF,GAAK5G,KAAK+G,KAAK/G,KAAKC,IAAI2G,IAChD,OAAO5E,EAAI,CAAEE,OAAQlC,KAAKkH,KAAKL,IAAUX,EAAS9I,EAAG4C,KAAKmH,KAAKN,GAASA,IAExE,OAAO7E,EAAI,CAAEE,OAAQ,GAAK9E,K,gCCzUlC,8lBAAO,IAAM4E,EAAM,SAA+D5E,EAAM6E,GAWpF,MAVoB,CAChBC,YAAsBC,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,QAAyB9E,EAAE8E,QAAU,IAAMD,EAAEC,QAAU,QAAKC,EACjG/B,QAAc+B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,IAAqBhD,EAAEgD,IAAM,IAAM6B,EAAE7B,IAAM,QAAK+B,EAC7EhC,QAAcgC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,IAAqB/C,EAAE+C,IAAM,IAAM8B,EAAE9B,IAAM,QAAKgC,EAC7EjC,QAAciC,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,IAAqB9C,EAAE8C,IAAM,IAAM+B,EAAE/B,IAAM,QAAKiC,EAC7E3E,SAAgB2E,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KAAsBJ,EAAEI,KAAO,IAAMyE,EAAEzE,KAAO,QAAK2E,EAClF5E,SAAgB4E,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE1E,KAAsBH,EAAEG,KAAO,IAAM0E,EAAE1E,KAAO,QAAK4E,EAClF7E,SAAgB6E,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,KAAsBF,EAAEE,KAAO,IAAM2E,EAAE3E,KAAO,QAAK6E,EAClFC,UAAkBD,IAAX/E,EAAEgF,WAAiCD,IAAXF,EAAEG,MAAuBhF,EAAEgF,MAAQ,IAAMH,EAAEG,MAAQ,QAAKD,IAKlFE,EAAM,SAA+DjF,EAAM6E,GAWpF,MAVoB,CAChBC,YAAsBC,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,QAAyB9E,EAAE8E,QAAU,IAAMD,EAAEC,QAAU,QAAKC,EACjG/B,QAAc+B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,IAAqBhD,EAAEgD,IAAM,IAAM6B,EAAE7B,IAAM,QAAK+B,EAC7EhC,QAAcgC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,IAAqB/C,EAAE+C,IAAM,IAAM8B,EAAE9B,IAAM,QAAKgC,EAC7EjC,QAAciC,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,IAAqB9C,EAAE8C,IAAM,IAAM+B,EAAE/B,IAAM,QAAKiC,EAC7E3E,SAAgB2E,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,KAAsBJ,EAAEI,KAAO,IAAMyE,EAAEzE,KAAO,QAAK2E,EAClF5E,SAAgB4E,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE1E,KAAsBH,EAAEG,KAAO,IAAM0E,EAAE1E,KAAO,QAAK4E,EAClF7E,SAAgB6E,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,KAAsBF,EAAEE,KAAO,IAAM2E,EAAE3E,KAAO,QAAK6E,EAClFC,UAAkBD,IAAX/E,EAAEgF,WAAiCD,IAAXF,EAAEG,MAAuBhF,EAAEgF,MAAQ,IAAMH,EAAEG,MAAQ,QAAKD,IAgBlFG,EAAO,SAAgClF,GAWhD,MAVoB,CAChB8E,YAAmBC,IAAX/E,EAAEgF,KAAqB,EAAMhF,EAAEgF,UAAOD,EAC9C/B,QAAc+B,IAAV/E,EAAEE,IAAoB,EAAMF,EAAEE,SAAM6E,EACxChC,QAAcgC,IAAV/E,EAAEG,KAAqB,EAAMH,EAAEG,SAAM4E,EACzCjC,QAAciC,IAAV/E,EAAEI,IAAoB,EAAMJ,EAAEI,SAAM2E,EACxC3E,SAAc2E,IAAT/E,EAAE8C,GAAmB,EAAM9C,EAAE8C,QAAKiC,EACvC5E,SAAc4E,IAAT/E,EAAE+C,IAAoB,EAAM/C,EAAE+C,QAAKgC,EACxC7E,SAAc6E,IAAT/E,EAAEgD,GAAmB,EAAMhD,EAAEgD,QAAK+B,EACvCC,UAAmBD,IAAb/E,EAAE8E,OAAuB,EAAM9E,EAAE8E,YAASC,IAuF3CI,EAAmB,SAA+DnF,EAAM6E,GACjG,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACvCQ,OAAoBP,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,GACnCuC,OAAoBR,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,GACnCyC,OAAoBT,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,GACnC+J,OAAqB9H,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,IACpC0M,OAAqB/H,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE1E,IACpC4M,OAAqBhI,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,IACpC8M,OAAsBjI,IAAX/E,EAAEgF,WAAiCD,IAAXF,EAAEG,MACvCK,GAAYC,GAAYC,GAAYC,GAAYqH,GAAYC,GAAYC,GAAYC,KACpF5H,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,GAC1BQ,IAAUF,GAAuBpF,EAAEgD,GAAM6B,EAAE7B,GAAjB,GAC1BuC,IAAUH,GAAuBpF,EAAE+C,GAAM8B,EAAE9B,GAAjB,GAC1ByC,IAAUJ,GAAuBpF,EAAE8C,GAAM+B,EAAE/B,GAAjB,GAC1B+J,IAAUzH,GAAwBpF,EAAEI,IAAOyE,EAAEzE,KAAlB,GAC3B0M,IAAU1H,GAAwBpF,EAAEG,IAAO0E,EAAE1E,KAAlB,GAC3B4M,IAAU3H,GAAwBpF,EAAEE,IAAO2E,EAAE3E,KAAlB,GAC3B8M,IAAU5H,GAAwBpF,EAAEgF,KAAQH,EAAEG,MAAnB,IAEnC,IAAIS,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,OAC/Bc,OAAgBb,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAEzE,IAC/ByF,OAAgBd,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE1E,IAC/B2F,OAAiBf,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE9B,GAChCgD,OAAiBhB,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE/B,GAChCkD,OAAiBjB,IAAV/E,EAAEE,UAAgC6E,IAAXF,EAAEG,KAChCiB,OAAkBlB,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAE3E,KACnCwF,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,KACxDR,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,GAClBc,IAAMH,GAAoBzF,EAAE+C,GAAM8B,EAAEzE,KAAjB,GACnByF,IAAMJ,GAAoBzF,EAAE8C,GAAM+B,EAAE1E,KAAjB,GACnB2F,IAAML,GAAmBzF,EAAEI,IAAOyE,EAAE9B,GAAlB,GAClBgD,IAAMN,GAAmBzF,EAAEG,IAAO0E,EAAE/B,GAAlB,GAClBkD,IAAMP,GAAoBzF,EAAEE,IAAO2E,EAAEG,MAAlB,GACnBiB,IAAMR,GAAoBzF,EAAEgF,KAAQH,EAAE3E,KAAnB,IAE3B,IAAIgG,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAEzE,IAC/BiG,OAAgBtB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,OAC/BwB,OAAgBvB,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE3E,IAC/B+M,OAAiBlI,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE7B,GAChCkK,OAAiBnI,IAAV/E,EAAEG,UAAgC4E,IAAXF,EAAEG,KAChCmI,OAAiBpI,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE/B,GAChCsK,OAAkBrI,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAE1E,KACnCgG,GAAQC,GAAQC,GAAQC,GAAQ2G,GAAQC,GAAQC,GAAQC,KACxDlH,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAEgD,GAAM6B,EAAEzE,IAAjB,GAClBiG,IAAMH,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,GAClBwB,IAAMJ,GAAoBlG,EAAE8C,GAAM+B,EAAE3E,KAAjB,GACnB+M,IAAM/G,GAAoBlG,EAAEI,IAAOyE,EAAE7B,IAAlB,GACnBkK,IAAMhH,GAAmBlG,EAAEG,IAAO0E,EAAEG,KAAlB,GAClBmI,IAAMjH,GAAmBlG,EAAEE,IAAO2E,EAAE/B,GAAlB,GAClBsK,IAAMlH,GAAmBlG,EAAEgF,KAAQH,EAAE1E,IAAnB,IAE1B,IAAIoG,OAAWxB,EACTyB,OAAoBzB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE/B,GACnC2D,OAAgB1B,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAE1E,IAC/BuG,OAAgB3B,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE3E,IAC/ByG,OAAgB5B,IAAT/E,EAAE8C,SAAiCiC,IAAbF,EAAEC,OAC/BuI,OAAiBtI,IAAV/E,EAAEI,UAAgC2E,IAAXF,EAAEG,KAChCsI,OAAiBvI,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE7B,GAChCuK,OAAiBxI,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE9B,GAChCyK,OAAkBzI,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAEzE,KACnCoG,GAAQC,GAAQC,GAAQC,GAAQ0G,GAAQC,GAAQC,GAAQC,KACxDjH,EAAW,EACPC,IAAMD,GAAmBvG,EAAE8E,OAAUD,EAAE/B,GAArB,GAClB2D,IAAMF,GAAmBvG,EAAEgD,GAAM6B,EAAE1E,IAAjB,GAClBuG,IAAMH,GAAmBvG,EAAE+C,GAAM8B,EAAE3E,IAAjB,GAClByG,IAAMJ,GAAmBvG,EAAE8C,GAAM+B,EAAEC,OAAjB,GAClBuI,IAAM9G,GAAoBvG,EAAEI,IAAOyE,EAAEG,MAAlB,GACnBsI,IAAM/G,GAAoBvG,EAAEG,IAAO0E,EAAE7B,IAAlB,GACnBuK,IAAMhH,GAAoBvG,EAAEE,IAAO2E,EAAE9B,IAAlB,GACnByK,IAAMjH,GAAoBvG,EAAEgF,KAAQH,EAAEzE,KAAnB,IAE3B,IAAIwG,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE9B,GAChCgE,OAAiBhC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE7B,GAChCgE,OAAiBjC,IAAT/E,EAAE8C,SAA+BiC,IAAXF,EAAEG,KAChCiC,OAAkBlC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,OACjCoC,OAAkBnC,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE3E,IACjCiH,OAAkBpC,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE1E,IACjCiH,OAAmBrC,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE/B,IACpC+D,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,KAC/DR,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAEgD,GAAM6B,EAAE9B,GAAjB,GACpBgE,IAAOH,GAAqB5G,EAAE+C,GAAM8B,EAAE7B,IAAjB,GACrBgE,IAAOJ,GAAoB5G,EAAE8C,GAAM+B,EAAEG,KAAjB,GACpBiC,IAAOL,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,GACpBoC,IAAON,GAAqB5G,EAAEG,IAAO0E,EAAE3E,KAAlB,GACrBiH,IAAOP,GAAoB5G,EAAEE,IAAO2E,EAAE1E,IAAlB,GACpBiH,IAAOR,GAAoB5G,EAAEgF,KAAQH,EAAE/B,GAAnB,IAE5B,IAAIuE,OAAYtC,EACVuC,OAAqBvC,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE1E,IACpCoH,OAAiBxC,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE/B,GAChC0E,OAAiBzC,IAAT/E,EAAE+C,SAA+BgC,IAAXF,EAAEG,KAChCyC,OAAiB1C,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE7B,GAChC0E,OAAkB3C,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAE3E,IACjCyH,OAAkB5C,IAAV/E,EAAEG,UAAkC4E,IAAbF,EAAEC,OACjC8C,QAAkB7C,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAEzE,IACjCyH,QAAmB9C,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE9B,IACpCuE,GAASC,GAASC,GAASC,GAASC,GAASC,GAASC,IAASC,MAC/DR,EAAY,EACRC,IAAOD,GAAoBrH,EAAE8E,OAAUD,EAAE1E,IAArB,GACpBoH,IAAOF,GAAoBrH,EAAEgD,GAAM6B,EAAE/B,GAAjB,GACpB0E,IAAOH,GAAqBrH,EAAE+C,GAAM8B,EAAEG,MAAjB,GACrByC,IAAOJ,GAAqBrH,EAAE8C,GAAM+B,EAAE7B,IAAjB,GACrB0E,IAAOL,GAAoBrH,EAAEI,IAAOyE,EAAE3E,IAAlB,GACpByH,IAAON,GAAoBrH,EAAEG,IAAO0E,EAAEC,OAAlB,GACpB8C,KAAOP,GAAqBrH,EAAEE,IAAO2E,EAAEzE,KAAlB,GACrByH,KAAOR,GAAqBrH,EAAEgF,KAAQH,EAAE9B,IAAnB,IAE7B,IAAI+E,QAAY/C,EACVgD,QAAqBhD,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE3E,IACpC8H,QAAiBjD,IAAT/E,EAAEgD,SAA+B+B,IAAXF,EAAEG,KAChCiD,QAAiBlD,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE/B,GAChCoF,QAAiBnD,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE9B,GAChC0K,QAAkB1I,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAE1E,IACjCuN,QAAkB3I,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAEzE,IACjCuN,QAAkB5I,IAAV/E,EAAEE,UAAkC6E,IAAbF,EAAEC,OACjC8I,QAAmB7I,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE7B,IACpC+E,IAASC,IAASC,IAASC,IAASuF,IAASC,IAASC,IAASC,MAC/D9F,GAAY,EACRC,KAAOD,IAAoB9H,EAAE8E,OAAUD,EAAE3E,IAArB,GACpB8H,KAAOF,IAAoB9H,EAAEgD,GAAM6B,EAAEG,KAAjB,GACpBiD,KAAOH,IAAoB9H,EAAE+C,GAAM8B,EAAE/B,GAAjB,GACpBoF,KAAOJ,IAAqB9H,EAAE8C,GAAM+B,EAAE9B,IAAjB,GACrB0K,KAAO3F,IAAqB9H,EAAEI,IAAOyE,EAAE1E,KAAlB,GACrBuN,KAAO5F,IAAoB9H,EAAEG,IAAO0E,EAAEzE,IAAlB,GACpBuN,KAAO7F,IAAoB9H,EAAEE,IAAO2E,EAAEC,OAAlB,GACpB8I,KAAO9F,IAAoB9H,EAAEgF,KAAQH,EAAE7B,GAAnB,IAE5B,IAAImF,QAAapD,EACXqD,QAAsBrD,IAAb/E,EAAE8E,aAAmCC,IAAXF,EAAEG,KACrCqD,QAAkBtD,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAE3E,IACjCoI,QAAkBvD,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE1E,IACjCoI,QAAkBxD,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAEzE,IACjCoI,QAAmBzD,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE/B,GAClC2F,QAAmB1D,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE9B,GAClC2F,QAAmB3D,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE7B,GAClC2F,QAAoB5D,IAAX/E,EAAEgF,WAAmCD,IAAbF,EAAEC,OAsBzC,OArBIsD,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,MACtER,GAAa,EACTC,KAAQD,IAAqBnI,EAAE8E,OAAUD,EAAEG,KAArB,GACtBqD,KAAQF,IAAqBnI,EAAEgD,GAAM6B,EAAE3E,IAAjB,GACtBoI,KAAQH,IAAsBnI,EAAE+C,GAAM8B,EAAE1E,KAAjB,GACvBoI,KAAQJ,IAAqBnI,EAAE8C,GAAM+B,EAAEzE,IAAjB,GACtBoI,KAAQL,IAAqBnI,EAAEI,IAAOyE,EAAE/B,GAAlB,GACtB2F,KAAQN,IAAsBnI,EAAEG,IAAO0E,EAAE9B,IAAlB,GACvB2F,KAAQP,IAAqBnI,EAAEE,IAAO2E,EAAE7B,GAAlB,GACtB2F,KAAQR,IAAqBnI,EAAEgF,KAAQH,EAAEC,OAAnB,IAEV,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJpD,GAAIyD,EACJnG,IAAKwG,EACLzG,IAAKkH,EACLnH,IAAK4H,GACL9C,KAAMmD,KAqEDS,EAAe,SAA+D5I,EAAM6E,GAC7F,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACvCQ,OAAoBP,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE7B,GACnCuC,OAAoBR,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE9B,GACnCyC,OAAoBT,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE/B,GACnC+J,OAAqB9H,IAAV/E,EAAEI,UAA+B2E,IAAVF,EAAEzE,IACpC0M,OAAqB/H,IAAV/E,EAAEG,UAA+B4E,IAAVF,EAAE1E,IACpC4M,OAAqBhI,IAAV/E,EAAEE,UAA+B6E,IAAVF,EAAE3E,IACpC8M,OAAsBjI,IAAX/E,EAAEgF,WAAiCD,IAAXF,EAAEG,MACvCK,GAAYC,GAAYC,GAAYC,GAAYqH,GAAYC,GAAYC,GAAYC,KACpF5H,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,GAC1BQ,IAAUF,GAAuBpF,EAAEgD,GAAM6B,EAAE7B,GAAjB,GAC1BuC,IAAUH,GAAuBpF,EAAE+C,GAAM8B,EAAE9B,GAAjB,GAC1ByC,IAAUJ,GAAuBpF,EAAE8C,GAAM+B,EAAE/B,GAAjB,GAC1B+J,IAAUzH,GAAwBpF,EAAEI,IAAOyE,EAAEzE,KAAlB,GAC3B0M,IAAU1H,GAAwBpF,EAAEG,IAAO0E,EAAE1E,KAAlB,GAC3B4M,IAAU3H,GAAwBpF,EAAEE,IAAO2E,EAAE3E,KAAlB,GAC3B8M,IAAU5H,GAAwBpF,EAAEgF,KAAQH,EAAEG,MAAnB,IAEnC,IAAIS,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,OAC/Bc,OAAgBb,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAEzE,IAC/ByF,OAAgBd,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE1E,IAC/B2F,OAAiBf,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE9B,GAChCgD,OAAiBhB,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE/B,GAChCkD,OAAiBjB,IAAV/E,EAAEE,UAAgC6E,IAAXF,EAAEG,KAChCiB,OAAkBlB,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAE3E,KACnCwF,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,GAAQC,KACxDR,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,GAClBc,IAAMH,GAAoBzF,EAAE+C,GAAM8B,EAAEzE,KAAjB,GACnByF,IAAMJ,GAAoBzF,EAAE8C,GAAM+B,EAAE1E,KAAjB,GACnB2F,IAAML,GAAmBzF,EAAEI,IAAOyE,EAAE9B,GAAlB,GAClBgD,IAAMN,GAAmBzF,EAAEG,IAAO0E,EAAE/B,GAAlB,GAClBkD,IAAMP,GAAoBzF,EAAEE,IAAO2E,EAAEG,MAAlB,GACnBiB,IAAMR,GAAoBzF,EAAEgF,KAAQH,EAAE3E,KAAnB,IAE3B,IAAIgG,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAEzE,IAC/BiG,OAAgBtB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,OAC/BwB,OAAgBvB,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAE3E,IAC/B+M,OAAiBlI,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE7B,GAChCkK,OAAiBnI,IAAV/E,EAAEG,UAAgC4E,IAAXF,EAAEG,KAChCmI,OAAiBpI,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE/B,GAChCsK,OAAkBrI,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAE1E,KACnCgG,GAAQC,GAAQC,GAAQC,GAAQ2G,GAAQC,GAAQC,GAAQC,KACxDlH,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAEgD,GAAM6B,EAAEzE,IAAjB,GAClBiG,IAAMH,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,GAClBwB,IAAMJ,GAAoBlG,EAAE8C,GAAM+B,EAAE3E,KAAjB,GACnB+M,IAAM/G,GAAoBlG,EAAEI,IAAOyE,EAAE7B,IAAlB,GACnBkK,IAAMhH,GAAmBlG,EAAEG,IAAO0E,EAAEG,KAAlB,GAClBmI,IAAMjH,GAAmBlG,EAAEE,IAAO2E,EAAE/B,GAAlB,GAClBsK,IAAMlH,GAAmBlG,EAAEgF,KAAQH,EAAE1E,IAAnB,IAE1B,IAAIoG,OAAWxB,EACTyB,OAAoBzB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE/B,GACnC2D,OAAgB1B,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAE1E,IAC/BuG,OAAgB3B,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE3E,IAC/ByG,OAAgB5B,IAAT/E,EAAE8C,SAAiCiC,IAAbF,EAAEC,OAC/BuI,OAAiBtI,IAAV/E,EAAEI,UAAgC2E,IAAXF,EAAEG,KAChCsI,OAAiBvI,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE7B,GAChCuK,OAAiBxI,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE9B,GAChCyK,OAAkBzI,IAAX/E,EAAEgF,WAAgCD,IAAVF,EAAEzE,KACnCoG,GAAQC,GAAQC,GAAQC,GAAQ0G,GAAQC,GAAQC,GAAQC,KACxDjH,EAAW,EACPC,IAAMD,GAAmBvG,EAAE8E,OAAUD,EAAE/B,GAArB,GAClB2D,IAAMF,GAAmBvG,EAAEgD,GAAM6B,EAAE1E,IAAjB,GAClBuG,IAAMH,GAAmBvG,EAAE+C,GAAM8B,EAAE3E,IAAjB,GAClByG,IAAMJ,GAAmBvG,EAAE8C,GAAM+B,EAAEC,OAAjB,GAClBuI,IAAM9G,GAAoBvG,EAAEI,IAAOyE,EAAEG,MAAlB,GACnBsI,IAAM/G,GAAoBvG,EAAEG,IAAO0E,EAAE7B,IAAlB,GACnBuK,IAAMhH,GAAoBvG,EAAEE,IAAO2E,EAAE9B,IAAlB,GACnByK,IAAMjH,GAAoBvG,EAAEgF,KAAQH,EAAEzE,KAAnB,IAE3B,IAAIwG,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAE8C,SAA+BiC,IAAXF,EAAEG,KAChC+B,OAAkBhC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,OACjCkC,OAAmBjC,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE/B,IACpC+D,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAE8C,GAAM+B,EAAEG,KAAjB,GACpB+B,IAAOH,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,GACpBkC,IAAOJ,GAAoB5G,EAAEgF,KAAQH,EAAE/B,GAAnB,IAE5B,IAAIuE,OAAYtC,EACVuC,OAAqBvC,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE1E,IACpCoH,OAAiBxC,IAAT/E,EAAE+C,SAA+BgC,IAAXF,EAAEG,KAChCwC,OAAkBzC,IAAV/E,EAAEG,UAAkC4E,IAAbF,EAAEC,OACjC2C,OAAmB1C,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE9B,IACpCuE,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoBrH,EAAE8E,OAAUD,EAAE1E,IAArB,GACpBoH,IAAOF,GAAqBrH,EAAE+C,GAAM8B,EAAEG,MAAjB,GACrBwC,IAAOH,GAAoBrH,EAAEG,IAAO0E,EAAEC,OAAlB,GACpB2C,IAAOJ,GAAqBrH,EAAEgF,KAAQH,EAAE9B,IAAnB,IAE7B,IAAI+E,OAAY/C,EACVgD,OAAqBhD,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE3E,IACpC8H,OAAiBjD,IAAT/E,EAAEgD,SAA+B+B,IAAXF,EAAEG,KAChCiD,OAAkBlD,IAAV/E,EAAEE,UAAkC6E,IAAbF,EAAEC,OACjCoD,OAAmBnD,IAAX/E,EAAEgF,WAA+BD,IAATF,EAAE7B,IACpC+E,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB9H,EAAE8E,OAAUD,EAAE3E,IAArB,GACpB8H,IAAOF,GAAoB9H,EAAEgD,GAAM6B,EAAEG,KAAjB,GACpBiD,IAAOH,GAAoB9H,EAAEE,IAAO2E,EAAEC,OAAlB,GACpBoD,IAAOJ,GAAoB9H,EAAEgF,KAAQH,EAAE7B,GAAnB,IAE5B,IAAImF,OAAapD,EACXqD,QAAsBrD,IAAb/E,EAAE8E,aAAmCC,IAAXF,EAAEG,KACrCqD,QAAoBtD,IAAX/E,EAAEgF,WAAmCD,IAAbF,EAAEC,OAgBzC,OAfIsD,IAAUC,MACVF,EAAa,EACTC,KAAQD,GAAqBnI,EAAE8E,OAAUD,EAAEG,KAArB,GACtBqD,KAAQF,GAAqBnI,EAAEgF,KAAQH,EAAEC,OAAnB,IAEV,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJpD,GAAIyD,EACJnG,IAAKwG,EACLzG,IAAKkH,EACLnH,IAAK4H,EACL9C,KAAMmD,IAkDDU,EAAkB,SAA+D7I,EAAM6E,GAChG,IAAIO,OAAeL,EACbM,OAAwBN,IAAb/E,EAAE8E,aAAqCC,IAAbF,EAAEC,OACzCO,IACAD,EAAe,EACXC,IAAUD,GAAuBpF,EAAE8E,OAAUD,EAAEC,OAArB,IAElC,IAAIW,OAAWV,EACTW,OAAoBX,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE7B,GACnC2C,OAAgBZ,IAAT/E,EAAEgD,SAAiC+B,IAAbF,EAAEC,QACjCY,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBzF,EAAE8E,OAAUD,EAAE7B,GAArB,GAClB2C,IAAMF,GAAmBzF,EAAEgD,GAAM6B,EAAEC,OAAjB,IAE1B,IAAIoB,OAAWnB,EACToB,OAAoBpB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE9B,GACnCqD,OAAgBrB,IAAT/E,EAAE+C,SAAiCgC,IAAbF,EAAEC,QACjCqB,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBlG,EAAE8E,OAAUD,EAAE9B,GAArB,GAClBqD,IAAMF,GAAmBlG,EAAE+C,GAAM8B,EAAEC,OAAjB,IAE1B,IAAIyB,OAAWxB,EACTyB,OAAoBzB,IAAb/E,EAAE8E,aAAiCC,IAATF,EAAE/B,GACnC2D,OAAgB1B,IAAT/E,EAAE8C,SAAiCiC,IAAbF,EAAEC,QACjC0B,GAAQC,KACRF,EAAW,EACPC,IAAMD,GAAmBvG,EAAE8E,OAAUD,EAAE/B,GAArB,GAClB2D,IAAMF,GAAmBvG,EAAE8C,GAAM+B,EAAEC,OAAjB,IAE1B,IAAI8B,OAAY7B,EACV8B,OAAqB9B,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAEzE,IACpC0G,OAAiB/B,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE9B,GAChCgE,OAAiBhC,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE7B,GAChCgE,OAAkBjC,IAAV/E,EAAEI,UAAkC2E,IAAbF,EAAEC,QACnC+B,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB5G,EAAE8E,OAAUD,EAAEzE,IAArB,GACpB0G,IAAOF,GAAoB5G,EAAEgD,GAAM6B,EAAE9B,GAAjB,GACpBgE,IAAOH,GAAqB5G,EAAE+C,GAAM8B,EAAE7B,IAAjB,GACrBgE,IAAOJ,GAAoB5G,EAAEI,IAAOyE,EAAEC,OAAlB,IAE5B,IAAIuC,OAAYtC,EACVuC,OAAqBvC,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE1E,IACpCoH,OAAiBxC,IAAT/E,EAAEgD,SAA6B+B,IAATF,EAAE/B,GAChC0E,OAAiBzC,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE7B,GAChCyE,OAAkB1C,IAAV/E,EAAEG,UAAkC4E,IAAbF,EAAEC,QACnCwC,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoBrH,EAAE8E,OAAUD,EAAE1E,IAArB,GACpBoH,IAAOF,GAAoBrH,EAAEgD,GAAM6B,EAAE/B,GAAjB,GACpB0E,IAAOH,GAAqBrH,EAAE8C,GAAM+B,EAAE7B,IAAjB,GACrByE,IAAOJ,GAAoBrH,EAAEG,IAAO0E,EAAEC,OAAlB,IAE5B,IAAIgD,OAAY/C,EACVgD,OAAqBhD,IAAb/E,EAAE8E,aAAkCC,IAAVF,EAAE3E,IACpC8H,OAAiBjD,IAAT/E,EAAE+C,SAA6BgC,IAATF,EAAE/B,GAChCmF,OAAiBlD,IAAT/E,EAAE8C,SAA6BiC,IAATF,EAAE9B,GAChCmF,OAAkBnD,IAAV/E,EAAEE,UAAkC6E,IAAbF,EAAEC,QACnCiD,GAASC,GAASC,GAASC,KAC3BJ,EAAY,EACRC,IAAOD,GAAoB9H,EAAE8E,OAAUD,EAAE3E,IAArB,GACpB8H,IAAOF,GAAoB9H,EAAE+C,GAAM8B,EAAE/B,GAAjB,GACpBmF,IAAOH,GAAqB9H,EAAE8C,GAAM+B,EAAE9B,IAAjB,GACrBmF,IAAOJ,GAAoB9H,EAAEE,IAAO2E,EAAEC,OAAlB,IAE5B,IAAIqD,OAAapD,EACXqD,OAAsBrD,IAAb/E,EAAE8E,aAAmCC,IAAXF,EAAEG,KACrCqD,OAAkBtD,IAAT/E,EAAEgD,SAA8B+B,IAAVF,EAAE3E,IACjCoI,OAAkBvD,IAAT/E,EAAE+C,SAA8BgC,IAAVF,EAAE1E,IACjCoI,OAAkBxD,IAAT/E,EAAE8C,SAA8BiC,IAAVF,EAAEzE,IACjCoI,OAAmBzD,IAAV/E,EAAEI,UAA8B2E,IAATF,EAAE/B,GAClC2F,OAAmB1D,IAAV/E,EAAEG,UAA8B4E,IAATF,EAAE9B,GAClC2F,OAAmB3D,IAAV/E,EAAEE,UAA8B6E,IAATF,EAAE7B,GAClC2F,OAAoB5D,IAAX/E,EAAEgF,WAAmCD,IAAbF,EAAEC,OAsBzC,OArBIsD,GAAUC,GAAUC,GAAUC,GAAUC,GAAUC,GAAUC,GAAUC,KACtER,EAAa,EACTC,IAAQD,GAAqBnI,EAAE8E,OAAUD,EAAEG,KAArB,GACtBqD,IAAQF,GAAqBnI,EAAEgD,GAAM6B,EAAE3E,IAAjB,GACtBoI,IAAQH,GAAsBnI,EAAE+C,GAAM8B,EAAE1E,KAAjB,GACvBoI,IAAQJ,GAAqBnI,EAAE8C,GAAM+B,EAAEzE,IAAjB,GACtBoI,IAAQL,GAAqBnI,EAAEI,IAAOyE,EAAE/B,GAAlB,GACtB2F,IAAQN,GAAsBnI,EAAEG,IAAO0E,EAAE9B,IAAlB,GACvB2F,IAAQP,GAAqBnI,EAAEE,IAAO2E,EAAE7B,GAAlB,GACtB2F,IAAQR,GAAqBnI,EAAEgF,KAAQH,EAAEC,OAAnB,IAEV,CAChBA,OAAQM,EACRpC,GAAIyC,EACJ1C,GAAImD,EACJpD,GAAIyD,EACJnG,IAAKwG,EACLzG,IAAKkH,EACLnH,IAAK4H,EACL9C,KAAMmD,IAKDW,EAAW,SAAgC9I,EAAM6E,GAW1D,MAVoB,CAChBC,YAAqBC,IAAb/E,EAAE8E,OAAuB9E,EAAE8E,OAASD,OAAIE,EAChD/B,QAAa+B,IAAT/E,EAAEgD,GAAmBhD,EAAEgD,GAAK6B,OAAIE,EACpChC,QAAagC,IAAT/E,EAAE+C,GAAmB/C,EAAE+C,GAAK8B,OAAIE,EACpCjC,QAAaiC,IAAT/E,EAAE8C,GAAmB9C,EAAE8C,GAAK+B,OAAIE,EACpC3E,SAAe2E,IAAV/E,EAAEI,IAAoBJ,EAAEI,IAAMyE,OAAIE,EACvC5E,SAAe4E,IAAV/E,EAAEG,IAAoBH,EAAEG,IAAM0E,OAAIE,EACvC7E,SAAe6E,IAAV/E,EAAEE,IAAoBF,EAAEE,IAAM2E,OAAIE,EACvCC,UAAiBD,IAAX/E,EAAEgF,KAAqBhF,EAAEgF,KAAOH,OAAIE,IAKrCgE,EAAM,SAAgC/I,EAAM6E,GAWrD,MAVoB,CAChBC,YAAqBC,IAAb/E,EAAE8E,OAAuB9E,EAAE8E,OAASD,OAAIE,EAChD/B,QAAa+B,IAAT/E,EAAEgD,GAAmBhD,EAAEgD,GAAK6B,OAAIE,EACpChC,QAAagC,IAAT/E,EAAE+C,GAAmB/C,EAAE+C,GAAK8B,OAAIE,EACpCjC,QAAaiC,IAAT/E,EAAE8C,GAAmB9C,EAAE8C,GAAK+B,OAAIE,EACpC3E,SAAe2E,IAAV/E,EAAEI,IAAoBJ,EAAEI,IAAMyE,OAAIE,EACvC5E,SAAe4E,IAAV/E,EAAEG,IAAoBH,EAAEG,IAAM0E,OAAIE,EACvC7E,SAAe6E,IAAV/E,EAAEE,IAAoBF,EAAEE,IAAM2E,OAAIE,EACvCC,UAAiBD,IAAX/E,EAAEgF,KAAqBhF,EAAEgF,KAAOH,OAAIE,IAKrCiE,EAAY,SAAgChJ,GAWrD,MAVoB,CAChB8E,OAAQ9E,EAAE8E,QAAU9E,EAAE8E,OACtB9B,GAAIhD,EAAEgD,IAAMhD,EAAEgD,GACdD,GAAI/C,EAAE+C,IAAM/C,EAAE+C,GACdD,GAAI9C,EAAE8C,IAAM9C,EAAE8C,GACd1C,IAAKJ,EAAEI,MAAQJ,EAAEI,IACjBD,IAAKH,EAAEG,MAAQH,EAAEG,IACjBD,IAAKF,EAAEE,MAAQF,EAAEE,IACjB8E,KAAMhF,EAAEgF,OAAShF,EAAEgF,OAKdiE,EAAO,SAAgCjJ,GAAsC,IAAhCkJ,EAA+B,uDAAd,EACnEC,EAAS,GAyDb,YAxDiBpE,IAAb/E,EAAE8E,SAEEqE,GADW,KAAXA,EACUnJ,EAAE8E,OAAOlB,QAAQsF,GAAU,GAE3BlJ,EAAE8E,QAAU,EAAI,MAAQ9E,EAAE8E,OAAOlB,QAAQsF,GAAe,MAAQtG,KAAKC,IAAI7C,EAAE8E,QAAQlB,QAAQsF,SAGhGnE,IAAT/E,EAAEgD,KAEEmG,GADW,KAAXA,EACUnJ,EAAEgD,GAAGY,QAAQsF,GAAU,KAEvBlJ,EAAEgD,IAAM,EAAI,MAAQhD,EAAEgD,GAAGY,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAEgD,IAAIY,QAAQsF,GAAU,WAGhGnE,IAAT/E,EAAE+C,KAEEoG,GADW,KAAXA,EACUnJ,EAAE+C,GAAGa,QAAQsF,GAAU,KAEvBlJ,EAAE+C,IAAM,EAAI,MAAQ/C,EAAE+C,GAAGa,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAE+C,IAAIa,QAAQsF,GAAU,WAGhGnE,IAAT/E,EAAE8C,KAEEqG,GADW,KAAXA,EACUnJ,EAAE8C,GAAGc,QAAQsF,GAAU,KAEvBlJ,EAAE8C,IAAM,EAAI,MAAQ9C,EAAE8C,GAAGc,QAAQsF,GAAU,KAAO,MAAQtG,KAAKC,IAAI7C,EAAE8C,IAAIc,QAAQsF,GAAU,WAG/FnE,IAAV/E,EAAEI,MAEE+I,GADW,KAAXA,EACUnJ,EAAEI,IAAIwD,QAAQsF,GAAU,MAExBlJ,EAAEI,KAAO,EAAI,MAAQJ,EAAEI,IAAIwD,QAAQsF,GAAU,MAAQ,MAAQtG,KAAKC,IAAI7C,EAAEI,KAAKwD,QAAQsF,GAAU,YAGnGnE,IAAV/E,EAAEG,MAEEgJ,GADW,KAAXA,EACUnJ,EAAEG,IAAIyD,QAAQsF,GAAU,MAExBlJ,EAAEG,KAAO,EAAI,MAAQH,EAAEG,IAAIyD,QAAQsF,GAAU,MAAQ,MAAQtG,KAAKC,IAAI7C,EAAEG,KAAKyD,QAAQsF,GAAU,YAGnGnE,IAAV/E,EAAEE,MAEEiJ,GADW,KAAXA,EACUnJ,EAAEE,IAAI0D,QAAQsF,GAAU,MAExBlJ,EAAEE,KAAO,EAAI,MAAQF,EAAEE,IAAI0D,QAAQsF,GAAU,MAAQ,MAAQtG,KAAKC,IAAI7C,EAAEE,KAAK0D,QAAQsF,GAAU,YAGlGnE,IAAX/E,EAAEgF,OAEEmE,GADW,KAAXA,EACUnJ,EAAEgF,KAAKpB,QAAQsF,GAAU,OAEzBlJ,EAAEgF,MAAQ,EAAI,MAAQhF,EAAEgF,KAAKpB,QAAQsF,GAAU,OAAS,MAAQtG,KAAKC,IAAI7C,EAAEgF,MAAMpB,QAAQsF,GAAU,QAG9GC,GAGEC,EAAoB,SAA+DpJ,EAAM6E,GAArE,OAC7BK,EAAK2D,EAAgB3D,EAAKlF,GAAIkF,EAAKL,MAE1BwE,EAAkB,SAA+DrJ,EAAM6E,GAArE,OAC3BM,EAAiBN,EAAGM,EAAiBnF,EAAGgJ,EAAUnE,MAEzCyE,EAAoB,SAA+DtJ,EAAM6E,GAArE,OAC7BiE,EAAS7D,EAAIE,EAAiBnF,EAAG6E,GAAIM,EAAiBN,EAAG7E,IAAK,KAErDuJ,EAAc,SAAgCvJ,GACvD,IACMwJ,EADKrE,EAAiBnF,EAAGA,GAClB8E,QAAU,EAIvB,GAAI0E,EAAI,EAAG,CACP,IAAMC,EAAQ7G,KAAK8G,KAAKF,GAAK5G,KAAK+G,KAAK/G,KAAKC,IAAI2G,IAChD,OAAO5E,EAAI,CAAEE,OAAQlC,KAAKgH,IAAIH,IAAUX,EAAS9I,EAAG4C,KAAKiH,IAAIJ,GAASA,IACnE,GAAID,EAAI,EAAG,CACd,IAAMC,EAAQ7G,KAAK8G,KAAKF,GAAK5G,KAAK+G,KAAK/G,KAAKC,IAAI2G,IAChD,OAAO5E,EAAI,CAAEE,OAAQlC,KAAKkH,KAAKL,IAAUX,EAAS9I,EAAG4C,KAAKmH,KAAKN,GAASA,IAExE,OAAO7E,EAAI,CAAEE,OAAQ,GAAK9E,K,ytDC1yB5B6N,aAAe,SAACC,GAClB,MAAsB,kBAARA,EACVA,EACmB,kBAARA,EACHA,EAAIC,WACJC,KAAKC,UAAUH,EAAK,KAAM,IAInC,SAASI,gBAAgB5N,OAA8B,IAEtDgK,WAEAhK,MAFAgK,WAAYI,YAEZpK,MAFYoK,YAAaF,WAEzBlK,MAFyBkK,WAAYC,eAErCnK,MAFqCmK,eAAgB0D,gBAErD7N,MAFqD6N,gBACrDC,YACA9N,MADA8N,YAAarK,MACbzD,MADayD,MAHwC,UAOjChD,oDAASuJ,YAPwB,kMAOlD+D,KAPkD,cAO5CC,QAP4C,yBAUvBvN,oDAAS,aAVc,mMAUlDwN,UAVkD,cAUvCC,aAVuC,cAanDC,IAAMlN,wDAAY,WACpB,IAAMmN,OAASC,QAAQC,IAEjBC,cAA0B,GAEhCF,QAAQC,IAAM,SAACE,GAA6C,IAAD,uBAA1BC,EAA0B,iCAA1BA,EAA0B,kBACvDF,cAAclN,WACGoD,IAAZ+J,EAAwBjB,aAAaiB,GAAW,IAAM,IACvDC,EAAepL,IAAIkK,cAAcxM,KAAK,MAE1CqN,OAAM,WAAN,GAAOI,GAAP,OAAmBC,KAGvB,IAAIC,UAAYX,KACV3B,aAAejC,gBAAkBwE,cAAcC,QAGjDxC,eACAsC,UAAY,2jDAqCRA,UArCQ,iHAsC+EtC,aAAayC,GAtC5F,uBA2ChBH,UAAY,yBAA2BA,UAEvC,IACI3E,KAAK2E,WACLR,aAAaK,cAAcxN,KAAK,OAClC,MAAO+N,GACLZ,aAAaY,EAAErB,YAGnBY,QAAQC,IAAMF,SACf,CAACL,KAAM5D,iBAIJ4E,SAAWlO,oDAAQ,WACrB,OAAQyB,KAAK0M,SAASvB,SAAS,IAAM,qBAAqBrM,MAAM,EAAG,MACpE,IAEGuN,cAAgBM,kDAAuB,MAE7C,OACI,mEAAKtD,UAAWuD,mEAAO,oBAAqBzL,MAAOA,MAAnD,UACI,kEAAKA,MAAO,CAAE0L,SAAU,WAAY/M,MAAO,QAA3C,SACI,qEAAQqB,MAAO,CAAE2L,OAAQ,EAAGC,WAAY,UAAWjL,MAAO,UAAW+K,SAAU,WAAYG,MAAO,GAAIC,IAAK,GAAItN,SAAU,GAAIuN,OAAQ,IAAMC,QAAStB,IAApJ,mBAEJ,mEAAK1K,MAAO,CAAEiM,QAAS,OAAQC,cAAe,SAAUC,aAAc,WAAtE,UACI,mEAAKnM,MAAO,CAAEiM,QAAS,OAAQC,cAAe,MAAOC,aAAc,UAAWC,SAAU,QAAxF,UACI,2DAAC,iDAAD,CAAWlE,UAAWxB,eAAiB+E,mEAAO,oCAAsCA,mEAAO,uCACvFzL,MAAK,uVAAO,CAAErB,WAAOqC,EAAWb,YAAQa,IAAgB2F,aACxD0F,KAAK,aAAaC,MAAM,UAAUC,MAAOjC,KAAMkC,SAAU,SAAAnB,GAAC,OAAId,QAAQc,IACtEoB,iBAAiB,IAGpB/F,gBACG,kEAAK0E,GAAE,WAAME,UAAYoB,IAAKxB,cAAehD,UAAWuD,mEAAO,wBAAyBzL,MAAOoK,gBAA/F,SACI,2DAAC,iDAAD,CAAWrK,MAAO,WAK5B0G,YACE,2DAAC,iDAAD,CAAWyB,UAAWuD,mEAAO,2BAA4BzL,MAAK,uVAAO,CAAErB,WAAOqC,EAAWb,YAAQa,IAAgBqJ,aAC7GgC,KAAK,aAAaC,MAAM,UAAUC,MAAO/B,UAAWmC,UAAU,EAC9DF,iBAAiB,Y,kFClJlC,SAASG,IACZ,OACI,8BACI,2E,kkBCFL,SAASC,YAOZ,OALAhP,sDAAU,WAENyI,KAAK,wDACN,IAGC,6EACI,2GACA,uuBAYI,qEAAOtG,MAAO,CAAErB,MAAO,OAAQmO,QAAS,MAAxC,UACI,4EACI,iEAAI9M,MAAO,CAAE+M,UAAW,QAAxB,kBACA,iEAAI/M,MAAO,CAAE+M,UAAW,QAAxB,qCACA,iEAAI/M,MAAO,CAAE+M,UAAW,QAAxB,qBACA,iEAAI/M,MAAO,CAAE+M,UAAW,QAAxB,uBAEJ,4EACI,0FACA,sFACA,oGACA,0FAEJ,4EACI,2GACA,sFACA,mFACA,uGAEJ,4EACI,0GACA,wFACA,0FACA,uGAEJ,4EACI,0EAAI,gEAAG3G,KAAK,8DAAR,uCACJ,sFACA,0FACA,wHAEJ,4EACI,0EAAI,gEAAGA,KAAK,0GAAR,yCACJ,sFACA,4FACA,2HA/CZ,ieA0DoE,gEAAGA,KAAK,+CAAR,6BA1DpE,2DA8DA,yHACA,6EACI,4LAIA,whBASJ,0GACA,6EACI,8oBAWI,qEAAOpG,MAAO,CAAErB,MAAO,OAAQmO,QAAS,MAAxC,UACI,4EACI,iEAAI9M,MAAO,CAAE+M,UAAW,QAAxB,kBACA,iEAAI/M,MAAO,CAAE+M,UAAW,QAAxB,mBAEJ,4EACI,0FACA,+GAEJ,4EACI,2GACA,qHAEJ,4EACI,0GACA,oHAAyC,EAAG,EAA5C,sCAEJ,4EACI,sGACA,sNAEJ,4EACI,wGACA,wLAlCZ,yIAyCA,sHACA,qnBAYA,sHACA,m5BAcA,wLAGA,qGACA,63BAgBJ,6GACA,qcAMA,yVAKA,+XAMA,wXAOA,6GACA,+FACmB,gEAAG3G,KAAK,+CAAR,mDADnB,isBAeA,4FACA,6EACI,6RAKA,iwBAQA,qIACA,mXAKA,8yFAwDA,2SAIA,2GACA,mGAIJ,yFACA,iZAKA,gVAIA,0EAAI,2DAAC,gDAAD,CAAMF,GAAG,eAAT,gE,+GClTI8G,QACW,cAA7B1E,OAAOV,SAASqF,UAEe,UAA7B3E,OAAOV,SAASqF,UAEhB3E,OAAOV,SAASqF,SAASC,MACvB,2DCZN,SAASC,IACL,OACI,cAAC,IAAMC,WAAP,UACI,cAAChF,EAAA,EAAD,MAKZ,IAAMiF,EAAcC,SAASC,eAAe,QACxCF,IACIA,EAAYG,gBACZC,kBAAQN,IAAUE,GAElBxE,iBAAOsE,IAAUE,IDwHnB,kBAAmBK,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrD,QAAQqD,MAAMA,EAAMlD,a,+BEjJ5B,oVAAO,IAAMmD,EAAe,kJAMfC,EAAsB,2KAMtBC,EAAmB,yJAMnBC,EAAe,sIAKfC,EAAkB,wGAKlBC,EAAuB,gPAavBC,EAAY,mUAcZC,EAAkB,odAmBlBC,EAAkB,0gBAsBlBC,EAAqB,yZ","file":"static/js/main.b80a992a.chunk.js","sourcesContent":["export const pgaPoints = `// Render a point at x: 40, y: 60\r\nrenderPointPGA({\r\n    e02: -40, // -e_0y = e_y0\r\n    e01: 60,\r\n    e12: 1\r\n}, \"lime\")\r\n\r\n// Render a point at x: 20, y: 30\r\n// Point coordinates divided by e_xy part\r\nrenderPointPGA({\r\n    e02: -40,\r\n    e01: 60,\r\n    e12: 2\r\n}, \"red\")`\r\n\r\nexport const translators = `var p = {\r\n    e02: -40,\r\n    e01: 60,\r\n    e12: 1\r\n}\r\n\r\n// Translator that moves by 80 along X.\r\n// Same as exp(d/2 e_0y).\r\nvar t = {\r\n    scalar: 1,\r\n    e01: 40\r\n}\r\n\r\nvar q = pga.sandwichProduct(p, t)\r\n\r\nrenderPointPGA(p, \"lime\")\r\nrenderPointPGA(q, \"red\")`\r\n\r\nexport const motors = `var p = {\r\n    e02: -40,\r\n    e01: 60,\r\n    e12: 1\r\n}\r\n\r\nvar t = pga.exponential({\r\n    e01: 40\r\n})\r\n\r\nvar r = pga.exponential({\r\n    // 90°/2; e_yx = -e_xy\r\n    e12: -Math.PI / 4\r\n})\r\n\r\nvar m = pga.geometricProduct(r, t)\r\n\r\nvar q = pga.sandwichProduct(p, m)\r\n\r\nrenderPointPGA(p, \"lime\")\r\nrenderPointPGA(q, \"red\")`\r\n\r\nexport const motorsBox = `var t = pga.exponential({\r\n    e01: 40\r\n})\r\n\r\nvar r = pga.exponential({\r\n    e12: -Math.PI / 8\r\n})\r\n\r\n// Translate -80 in X, then rotate 45° CCW\r\nvar m = pga.geometricProduct(r, t)\r\n\r\n// Identity motor to visualize the initial box\r\n// at the origin\r\nvar identity = { scalar: 1 }\r\n\r\nrenderBoxPGA(identity, \"lime\")\r\nrenderBoxPGA(m, \"red\")`\r\n\r\nexport const motorBlendingMotivation = `var a1 = {\r\n    e01: 40,\r\n    e02: 30\r\n}\r\n\r\nvar a2 = {\r\n    e01: -40,\r\n    e02: -10,\r\n    e12: -Math.PI / 6\r\n}\r\n\r\nvar m1 = pga.exponential(a1)\r\nvar m2 = pga.exponential(a2)\r\n\r\nrenderBoxPGA(m1, \"black\")\r\nrenderBoxPGA(m2, \"red\")`\r\n\r\nexport const motorBlending = `var a1 = {\r\n    e01: 40,\r\n    e02: 30\r\n}\r\n\r\nvar a2 = {\r\n    e01: -40,\r\n    e02: -10,\r\n    e12: -Math.PI / 6\r\n}\r\n\r\nfor (var alpha = 0; alpha <= 1; alpha += 0.1) {\r\n    var m = pga.exponential(pga.add(\r\n        pga.geometricProduct(a1, { scalar: 1 - alpha }),\r\n        pga.geometricProduct(a2, { scalar: alpha })\r\n    ))\r\n    var c = \"rgb(\" + (255 * alpha).toString() + \", 0, 0)\"\r\n    renderBoxPGA(m, c)\r\n}`\r\n\r\nexport const motorBlendingLog = `var m1 = { scalar: 1, e01: 20, e02: 40 }\r\nvar m2 = { scalar: 1, e01: -250, e12: -Math.PI * 1.3 }\r\n\r\nfunction motorLog(m) {\r\n    var divisor = Math.sqrt(\r\n        pga.geometricProduct(\r\n            m,\r\n            pga.reversion(m)\r\n        ).scalar\r\n    )\r\n    var allGrades = pga.div(m, divisor)\r\n    return {\r\n        e01: allGrades.e01,\r\n        e02: allGrades.e02,\r\n        e12: allGrades.e12\r\n    }\r\n}\r\n\r\nvar a1 = motorLog(m1)\r\nvar a2 = motorLog(m2)\r\nrenderInfo(\"a1: \" + pga.repr(a1))\r\nrenderInfo(\"a2: \" + pga.repr(a2))\r\n\r\nfor (var alpha = 0; alpha <= 1; alpha += 0.1) {\r\n    var m = pga.exponential(pga.add(\r\n        pga.geometricProduct(a1, { scalar: 1 - alpha }),\r\n        pga.geometricProduct(a2, { scalar: alpha })\r\n    ))\r\n    var c = \"rgb(\" + (255 * alpha).toString() + \", 0, 0)\"\r\n    renderBoxPGA(m, c)\r\n}`\r\n\r\nexport const visualizerExample = `// Render a point at x: 50, y: 10\r\nrenderPointPGA({\r\n    e02: -50,\r\n    e01: 10,\r\n    e12: 1\r\n}, \"lime\")\r\n\r\n// Render the line 2x + 1y - 10 = 0\r\nrenderLinePGA({\r\n    e0: -10,\r\n    e1: 2,\r\n    e2: 1\r\n}, \"orange\")`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"interactive-code\":\"InteractiveCode_interactive-code__1W_Ca\",\"interactive-code-editor-with-viz\":\"InteractiveCode_interactive-code-editor-with-viz__3vc2f\",\"interactive-code-editor-without-viz\":\"InteractiveCode_interactive-code-editor-without-viz__23QwE\",\"interactive-code-viz\":\"InteractiveCode_interactive-code-viz__1atqK\",\"interactive-code-output\":\"InteractiveCode_interactive-code-output__2M2TB\"};","import React, { useCallback, useState, useEffect, useMemo } from \"react\"\r\nimport * as pga from \"./ga_zpp\"\r\n\r\n\r\nexport const pointCoordinates = (a: pga.BiVector): [number, number] => {\r\n    const magInv = 1 / a.e12\r\n    return [-a.e02 * magInv, a.e01 * magInv]\r\n}\r\n\r\nexport type PointElementPGA2DProps = {\r\n    point: pga.BiVector\r\n    radius?: number\r\n    fill?: string\r\n    label?: string\r\n    trailCount?: number\r\n    trailStroke?: string\r\n}\r\n\r\nconst getPolyLinePoints = (points: [number, number][]): string =>\r\n    points.flat().join(\" \")\r\n\r\n\r\nexport function PointElementPGA2D(props: PointElementPGA2DProps) {\r\n    const { point, radius, fill, label, trailCount, trailStroke } = props\r\n\r\n    const x = -point.e02 / point.e12\r\n    const y = point.e01 / point.e12\r\n\r\n    const [trail, setTrail] = useState<[number, number][]>([])\r\n\r\n    const trailPolyPoints = useMemo(() => getPolyLinePoints(trail), [trail])\r\n\r\n    const updateTrail = useCallback(() => {\r\n        if (trailCount) {\r\n            if (trail.length === 0 || (trail[trail.length - 1][0] !== x || trail[trail.length - 1][1] !== y)) {\r\n                let newTrail = [...trail]\r\n                if (newTrail.length > trailCount) {\r\n                    newTrail = newTrail.slice(1)\r\n                }\r\n                newTrail.push([x, y])\r\n                setTrail(newTrail)\r\n            }\r\n        } else {\r\n            setTrail([])\r\n        }\r\n    }, [x, y, trail, trailCount])\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(updateTrail, [x, y])\r\n\r\n    return (\r\n        <g>\r\n            <title>{pga.repr(point)}</title>\r\n            {trail.length > 0 &&\r\n                <polyline fill=\"none\" stroke={trailStroke || \"#F37121\"}\r\n                    strokeWidth={0.5 * (radius || 1)}\r\n                    points={trailPolyPoints} />\r\n            }\r\n\r\n            <circle cx={x} cy={-y} r={radius || 1} fill={fill || \"#F37121\"} stroke=\"white\" />\r\n\r\n            {label &&\r\n                <text x={x} y={-y} dominantBaseline=\"middle\"\r\n                    fontWeight=\"800\"\r\n                    textAnchor=\"middle\" fontSize={radius || 1}>\r\n                    {label}\r\n                </text>\r\n            }\r\n        </g>\r\n    )\r\n}\r\n\r\nexport type LineElementPGA2DProps = {\r\n    line: pga.Vector\r\n    width?: number\r\n    stroke?: string\r\n    label?: string\r\n}\r\n\r\nexport function LineElementPGA2D(props: LineElementPGA2DProps) {\r\n    let { line, width, stroke, label } = props\r\n\r\n    const lineCoords = useMemo(() => {\r\n        if (Math.abs(line.e2) > Math.abs(line.e1)) {\r\n            const startX = -100\r\n            const endX = 100\r\n            const startY = -(line.e1 * startX + line.e0) / line.e2\r\n            const endY = -(line.e1 * endX + line.e0) / line.e2\r\n            return [startX, startY, endX, endY]\r\n        } else {\r\n            const startY = -100\r\n            const endY = 100\r\n            const startX = -(line.e2 * startY + line.e0) / line.e1\r\n            const endX = -(line.e2 * endY + line.e0) / line.e1\r\n            return [startX, startY, endX, endY]\r\n        }\r\n    }, [line])\r\n\r\n    return (\r\n        <g>\r\n            <title>{pga.repr(line)}</title>\r\n            <line x1={lineCoords[0]} y1={-lineCoords[1]} x2={lineCoords[2]} y2={-lineCoords[3]}\r\n                strokeWidth={width || 1} stroke={stroke || \"#F37121\"} />\r\n\r\n            {label &&\r\n                <text x={(lineCoords[0] + lineCoords[2]) / 2} y={-0.5 * (lineCoords[1] + lineCoords[3])}\r\n                    dominantBaseline=\"middle\" fontWeight=\"800\"\r\n                    textAnchor=\"middle\" fontSize={1}>\r\n                    {label}\r\n                </text>\r\n            }\r\n        </g>\r\n    )\r\n}\r\n\r\nexport type InfoElementProps = {\r\n    text: string\r\n    fontSize?: number\r\n    color?: string\r\n}\r\n\r\nexport type Scene = {\r\n    points?: PointElementPGA2DProps[]\r\n    lines?: LineElementPGA2DProps[]\r\n    infos?: InfoElementProps[]\r\n}\r\n\r\nexport type SceneViewProps = {\r\n    scene: Scene\r\n    style?: React.CSSProperties\r\n}\r\n\r\nfunction SVGGrid() {\r\n    const rows: number[] = []\r\n    const cols: number[] = []\r\n    for (let i = -10; i <= 10; i++) {\r\n        rows.push(i)\r\n        cols.push(i)\r\n    }\r\n\r\n    const getThickness = useCallback((index: number) => {\r\n        if (index === 0) {\r\n            return 1\r\n        } else if (index % 5 === 0) {\r\n            return 0.5\r\n        }\r\n\r\n        return 0.25\r\n    }, [])\r\n\r\n    return (\r\n        <g>\r\n            <g>\r\n                {cols.map(x =>\r\n                    <g key={x}>\r\n                        <line x1={x * 10} x2={x * 10} y1={100} y2={-100} stroke=\"#CCCCCC\" strokeWidth={getThickness(x)} />\r\n                        {x % 2 === 0 && x !== 0 && (\r\n                            <text x={10 * x} y={-2} fill=\"white\" fontSize={5} textAnchor=\"middle\">\r\n                                {`${(10 * x).toFixed(0)}`}\r\n                            </text>\r\n                        )}\r\n                    </g>\r\n                )}\r\n            </g>\r\n\r\n            <g>\r\n                {rows.map(y =>\r\n                    <g key={y}>\r\n                        <line x1={-100} x2={100} y1={-y * 10} y2={-y * 10} stroke=\"#CCCCCC\" strokeWidth={getThickness(y)} />\r\n                        {(y % 2 === 0) && (\r\n                            <text x={5} y={-(10 * y + 2)} fill=\"white\" fontSize={5} textAnchor=\"middle\">\r\n                                {`${(10 * y).toFixed(0)}`}\r\n                            </text>\r\n                        )}\r\n                    </g>\r\n                )}\r\n            </g>\r\n        </g>\r\n    )\r\n}\r\n\r\nexport function SceneView(props: SceneViewProps) {\r\n    const { scene, style } = props\r\n\r\n    return (\r\n        <svg viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMinYMin slice\" style={style}>\r\n            <rect fill=\"#111D6E\" width=\"100%\" height=\"100%\" />\r\n\r\n            <g transform=\"translate(50, 50) scale(0.5)\">\r\n                <SVGGrid />\r\n\r\n                {scene.lines && scene.lines.map((l, i) =>\r\n                    <LineElementPGA2D {...l} key={i} />\r\n                )}\r\n\r\n                {scene.points && scene.points.map((p, i) =>\r\n                    <PointElementPGA2D {...p} key={i} />\r\n                )}\r\n            </g>\r\n\r\n            {scene.infos && scene.infos.map((info, i) => {\r\n                return (\r\n                    <text key={i} fontWeight=\"100\" x={1} y={5 + 5 * i} fontSize={info.fontSize || 1} fill={info.color || \"white\"}>\r\n                        {info.text}\r\n                    </text>\r\n                )\r\n            })}\r\n        </svg>\r\n    )\r\n}","export type BladeScalar = { scalar: number }\r\nexport type BladeE0 = { e0: number }\r\nexport type BladeE1 = { e1: number }\r\nexport type BladeE2 = { e2: number }\r\nexport type BladeE01 = { e01: number }\r\nexport type BladeE02 = { e02: number }\r\nexport type BladeE12 = { e12: number }\r\nexport type BladeE012 = { e012: number }\r\n\r\nexport type Scalar = BladeScalar\r\nexport type Vector = BladeE0 & BladeE1 & BladeE2\r\nexport type BiVector = BladeE01 & BladeE02 & BladeE12\r\nexport type TriVector = BladeE012\r\nexport type PseudoTriVector = BladeScalar\r\nexport type PseudoBiVector = BladeE0 & BladeE1 & BladeE2\r\nexport type PseudoVector = BladeE01 & BladeE02 & BladeE12\r\nexport type PseudoScalar = BladeE012\r\nexport type Even = BladeScalar & BladeE01 & BladeE02 & BladeE12\r\nexport type Odd = BladeE0 & BladeE1 & BladeE2 & BladeE012\r\nexport type MultiVector = BladeScalar & BladeE0 & BladeE1 & BladeE2 & BladeE01 & BladeE02 & BladeE12 & BladeE012\r\n\r\nexport type OptionalMultiVector = {\r\n    scalar?: number\r\n    e0?: number\r\n    e1?: number\r\n    e2?: number\r\n    e01?: number\r\n    e02?: number\r\n    e12?: number\r\n    e012?: number\r\n}\r\n\r\nexport type AddResultType<A, B> = (\r\n    (A extends BladeScalar ? BladeScalar : {}) &\r\n    (B extends BladeScalar ? BladeScalar : {}) &\r\n    (A extends BladeE0 ? BladeE0 : {}) &\r\n    (B extends BladeE0 ? BladeE0 : {}) &\r\n    (A extends BladeE1 ? BladeE1 : {}) &\r\n    (B extends BladeE1 ? BladeE1 : {}) &\r\n    (A extends BladeE2 ? BladeE2 : {}) &\r\n    (B extends BladeE2 ? BladeE2 : {}) &\r\n    (A extends BladeE01 ? BladeE01 : {}) &\r\n    (B extends BladeE01 ? BladeE01 : {}) &\r\n    (A extends BladeE02 ? BladeE02 : {}) &\r\n    (B extends BladeE02 ? BladeE02 : {}) &\r\n    (A extends BladeE12 ? BladeE12 : {}) &\r\n    (B extends BladeE12 ? BladeE12 : {}) &\r\n    (A extends BladeE012 ? BladeE012 : {}) &\r\n    (B extends BladeE012 ? BladeE012 : {})\r\n)\r\n\r\nexport const add = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): AddResultType<A, B> => {\r\n    const result: any = {\r\n        scalar: (a.scalar !== undefined || b.scalar !== undefined) ? (a.scalar || 0) + (b.scalar || 0) : undefined,\r\n        e0: (a.e0 !== undefined || b.e0 !== undefined) ? (a.e0 || 0) + (b.e0 || 0) : undefined,\r\n        e1: (a.e1 !== undefined || b.e1 !== undefined) ? (a.e1 || 0) + (b.e1 || 0) : undefined,\r\n        e2: (a.e2 !== undefined || b.e2 !== undefined) ? (a.e2 || 0) + (b.e2 || 0) : undefined,\r\n        e01: (a.e01 !== undefined || b.e01 !== undefined) ? (a.e01 || 0) + (b.e01 || 0) : undefined,\r\n        e02: (a.e02 !== undefined || b.e02 !== undefined) ? (a.e02 || 0) + (b.e02 || 0) : undefined,\r\n        e12: (a.e12 !== undefined || b.e12 !== undefined) ? (a.e12 || 0) + (b.e12 || 0) : undefined,\r\n        e012: (a.e012 !== undefined || b.e012 !== undefined) ? (a.e012 || 0) + (b.e012 || 0) : undefined,\r\n    }\r\n    return result as AddResultType<A, B>\r\n}\r\n\r\nexport const sub = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): AddResultType<A, B> => {\r\n    const result: any = {\r\n        scalar: (a.scalar !== undefined || b.scalar !== undefined) ? (a.scalar || 0) - (b.scalar || 0) : undefined,\r\n        e0: (a.e0 !== undefined || b.e0 !== undefined) ? (a.e0 || 0) - (b.e0 || 0) : undefined,\r\n        e1: (a.e1 !== undefined || b.e1 !== undefined) ? (a.e1 || 0) - (b.e1 || 0) : undefined,\r\n        e2: (a.e2 !== undefined || b.e2 !== undefined) ? (a.e2 || 0) - (b.e2 || 0) : undefined,\r\n        e01: (a.e01 !== undefined || b.e01 !== undefined) ? (a.e01 || 0) - (b.e01 || 0) : undefined,\r\n        e02: (a.e02 !== undefined || b.e02 !== undefined) ? (a.e02 || 0) - (b.e02 || 0) : undefined,\r\n        e12: (a.e12 !== undefined || b.e12 !== undefined) ? (a.e12 || 0) - (b.e12 || 0) : undefined,\r\n        e012: (a.e012 !== undefined || b.e012 !== undefined) ? (a.e012 || 0) - (b.e012 || 0) : undefined,\r\n    }\r\n    return result as AddResultType<A, B>\r\n}\r\n\r\nexport type DualResultType<A> = (\r\n    (A extends BladeScalar ? BladeE012 : {}) &\r\n    (A extends BladeE0 ? BladeE12 : {}) &\r\n    (A extends BladeE1 ? BladeE02 : {}) &\r\n    (A extends BladeE2 ? BladeE01 : {}) &\r\n    (A extends BladeE01 ? BladeE2 : {}) &\r\n    (A extends BladeE02 ? BladeE1 : {}) &\r\n    (A extends BladeE12 ? BladeE0 : {}) &\r\n    (A extends BladeE012 ? BladeScalar : {})\r\n)\r\n\r\nexport const dual = <A extends OptionalMultiVector>(a: A): DualResultType<A> => {\r\n    const result: any = {\r\n        scalar: a.e012 !== undefined ? 1.0 * a.e012 : undefined,\r\n        e0: a.e12 !== undefined ? 1.0 * a.e12 : undefined,\r\n        e1: a.e02 !== undefined ? -1.0 * a.e02 : undefined,\r\n        e2: a.e01 !== undefined ? 1.0 * a.e01 : undefined,\r\n        e01: a.e2 !== undefined ? 1.0 * a.e2 : undefined,\r\n        e02: a.e1 !== undefined ? -1.0 * a.e1 : undefined,\r\n        e12: a.e0 !== undefined ? 1.0 * a.e0 : undefined,\r\n        e012: a.scalar !== undefined ? 1.0 * a.scalar : undefined,\r\n    }\r\n    return result as DualResultType<A>\r\n}\r\n\r\nexport type GeometricProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE2 ? BladeE2 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {}) &\r\n        (B extends BladeE02 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE12 : {}) &\r\n        (B extends BladeE012 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE0 ? BladeE01 : {}) &\r\n        (B extends BladeE1 ? BladeScalar : {}) &\r\n        (B extends BladeE2 ? BladeE12 : {}) &\r\n        (B extends BladeE01 ? BladeE0 : {}) &\r\n        (B extends BladeE02 ? BladeE012 : {}) &\r\n        (B extends BladeE12 ? BladeE2 : {}) &\r\n        (B extends BladeE012 ? BladeE02 : {})\r\n    ) : {}) &\r\n    (A extends BladeE2 ? (\r\n        (B extends BladeScalar ? BladeE2 : {}) &\r\n        (B extends BladeE0 ? BladeE02 : {}) &\r\n        (B extends BladeE1 ? BladeE12 : {}) &\r\n        (B extends BladeE2 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE012 : {}) &\r\n        (B extends BladeE02 ? BladeE0 : {}) &\r\n        (B extends BladeE12 ? BladeE1 : {}) &\r\n        (B extends BladeE012 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE1 ? BladeE0 : {}) &\r\n        (B extends BladeE2 ? BladeE012 : {}) &\r\n        (B extends BladeE12 ? BladeE02 : {})\r\n    ) : {}) &\r\n    (A extends BladeE02 ? (\r\n        (B extends BladeScalar ? BladeE02 : {}) &\r\n        (B extends BladeE1 ? BladeE012 : {}) &\r\n        (B extends BladeE2 ? BladeE0 : {}) &\r\n        (B extends BladeE12 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE12 ? (\r\n        (B extends BladeScalar ? BladeE12 : {}) &\r\n        (B extends BladeE0 ? BladeE012 : {}) &\r\n        (B extends BladeE1 ? BladeE2 : {}) &\r\n        (B extends BladeE2 ? BladeE1 : {}) &\r\n        (B extends BladeE01 ? BladeE02 : {}) &\r\n        (B extends BladeE02 ? BladeE01 : {}) &\r\n        (B extends BladeE12 ? BladeScalar : {}) &\r\n        (B extends BladeE012 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE012 ? (\r\n        (B extends BladeScalar ? BladeE012 : {}) &\r\n        (B extends BladeE1 ? BladeE02 : {}) &\r\n        (B extends BladeE2 ? BladeE01 : {}) &\r\n        (B extends BladeE12 ? BladeE0 : {})\r\n    ) : {})\r\n\r\nexport const geometricProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): GeometricProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    const scalar_1 = a.e1 !== undefined && b.e1 !== undefined\r\n    const scalar_2 = a.e2 !== undefined && b.e2 !== undefined\r\n    const scalar_3 = a.e12 !== undefined && b.e12 !== undefined\r\n    if (scalar_0 || scalar_1 || scalar_2 || scalar_3) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n        if (scalar_1) resultScalar += 1.0 * (a.e1! * b.e1!)\r\n        if (scalar_2) resultScalar += 1.0 * (a.e2! * b.e2!)\r\n        if (scalar_3) resultScalar += -1.0 * (a.e12! * b.e12!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    const e0_2 = a.e1 !== undefined && b.e01 !== undefined\r\n    const e0_3 = a.e2 !== undefined && b.e02 !== undefined\r\n    const e0_4 = a.e01 !== undefined && b.e1 !== undefined\r\n    const e0_5 = a.e02 !== undefined && b.e2 !== undefined\r\n    const e0_6 = a.e12 !== undefined && b.e012 !== undefined\r\n    const e0_7 = a.e012 !== undefined && b.e12 !== undefined\r\n    if (e0_0 || e0_1 || e0_2 || e0_3 || e0_4 || e0_5 || e0_6 || e0_7) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n        if (e0_2) resultE0 += -1.0 * (a.e1! * b.e01!)\r\n        if (e0_3) resultE0 += -1.0 * (a.e2! * b.e02!)\r\n        if (e0_4) resultE0 += 1.0 * (a.e01! * b.e1!)\r\n        if (e0_5) resultE0 += 1.0 * (a.e02! * b.e2!)\r\n        if (e0_6) resultE0 += -1.0 * (a.e12! * b.e012!)\r\n        if (e0_7) resultE0 += -1.0 * (a.e012! * b.e12!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e1 !== undefined && b.scalar !== undefined\r\n    const e1_2 = a.e2 !== undefined && b.e12 !== undefined\r\n    const e1_3 = a.e12 !== undefined && b.e2 !== undefined\r\n    if (e1_0 || e1_1 || e1_2 || e1_3) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n        if (e1_2) resultE1 += -1.0 * (a.e2! * b.e12!)\r\n        if (e1_3) resultE1 += 1.0 * (a.e12! * b.e2!)\r\n    }\r\n    let resultE2 = undefined\r\n    const e2_0 = a.scalar !== undefined && b.e2 !== undefined\r\n    const e2_1 = a.e1 !== undefined && b.e12 !== undefined\r\n    const e2_2 = a.e2 !== undefined && b.scalar !== undefined\r\n    const e2_3 = a.e12 !== undefined && b.e1 !== undefined\r\n    if (e2_0 || e2_1 || e2_2 || e2_3) {\r\n        resultE2 = 0\r\n        if (e2_0) resultE2 += 1.0 * (a.scalar! * b.e2!)\r\n        if (e2_1) resultE2 += 1.0 * (a.e1! * b.e12!)\r\n        if (e2_2) resultE2 += 1.0 * (a.e2! * b.scalar!)\r\n        if (e2_3) resultE2 += -1.0 * (a.e12! * b.e1!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e0 !== undefined && b.e1 !== undefined\r\n    const e01_2 = a.e1 !== undefined && b.e0 !== undefined\r\n    const e01_3 = a.e2 !== undefined && b.e012 !== undefined\r\n    const e01_4 = a.e01 !== undefined && b.scalar !== undefined\r\n    const e01_5 = a.e02 !== undefined && b.e12 !== undefined\r\n    const e01_6 = a.e12 !== undefined && b.e02 !== undefined\r\n    const e01_7 = a.e012 !== undefined && b.e2 !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3 || e01_4 || e01_5 || e01_6 || e01_7) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e0! * b.e1!)\r\n        if (e01_2) resultE01 += -1.0 * (a.e1! * b.e0!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e2! * b.e012!)\r\n        if (e01_4) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n        if (e01_5) resultE01 += -1.0 * (a.e02! * b.e12!)\r\n        if (e01_6) resultE01 += 1.0 * (a.e12! * b.e02!)\r\n        if (e01_7) resultE01 += 1.0 * (a.e012! * b.e2!)\r\n    }\r\n    let resultE02 = undefined\r\n    const e02_0 = a.scalar !== undefined && b.e02 !== undefined\r\n    const e02_1 = a.e0 !== undefined && b.e2 !== undefined\r\n    const e02_2 = a.e1 !== undefined && b.e012 !== undefined\r\n    const e02_3 = a.e2 !== undefined && b.e0 !== undefined\r\n    const e02_4 = a.e01 !== undefined && b.e12 !== undefined\r\n    const e02_5 = a.e02 !== undefined && b.scalar !== undefined\r\n    const e02_6 = a.e12 !== undefined && b.e01 !== undefined\r\n    const e02_7 = a.e012 !== undefined && b.e1 !== undefined\r\n    if (e02_0 || e02_1 || e02_2 || e02_3 || e02_4 || e02_5 || e02_6 || e02_7) {\r\n        resultE02 = 0\r\n        if (e02_0) resultE02 += 1.0 * (a.scalar! * b.e02!)\r\n        if (e02_1) resultE02 += 1.0 * (a.e0! * b.e2!)\r\n        if (e02_2) resultE02 += -1.0 * (a.e1! * b.e012!)\r\n        if (e02_3) resultE02 += -1.0 * (a.e2! * b.e0!)\r\n        if (e02_4) resultE02 += 1.0 * (a.e01! * b.e12!)\r\n        if (e02_5) resultE02 += 1.0 * (a.e02! * b.scalar!)\r\n        if (e02_6) resultE02 += -1.0 * (a.e12! * b.e01!)\r\n        if (e02_7) resultE02 += -1.0 * (a.e012! * b.e1!)\r\n    }\r\n    let resultE12 = undefined\r\n    const e12_0 = a.scalar !== undefined && b.e12 !== undefined\r\n    const e12_1 = a.e1 !== undefined && b.e2 !== undefined\r\n    const e12_2 = a.e2 !== undefined && b.e1 !== undefined\r\n    const e12_3 = a.e12 !== undefined && b.scalar !== undefined\r\n    if (e12_0 || e12_1 || e12_2 || e12_3) {\r\n        resultE12 = 0\r\n        if (e12_0) resultE12 += 1.0 * (a.scalar! * b.e12!)\r\n        if (e12_1) resultE12 += 1.0 * (a.e1! * b.e2!)\r\n        if (e12_2) resultE12 += -1.0 * (a.e2! * b.e1!)\r\n        if (e12_3) resultE12 += 1.0 * (a.e12! * b.scalar!)\r\n    }\r\n    let resultE012 = undefined\r\n    const e012_0 = a.scalar !== undefined && b.e012 !== undefined\r\n    const e012_1 = a.e0 !== undefined && b.e12 !== undefined\r\n    const e012_2 = a.e1 !== undefined && b.e02 !== undefined\r\n    const e012_3 = a.e2 !== undefined && b.e01 !== undefined\r\n    const e012_4 = a.e01 !== undefined && b.e2 !== undefined\r\n    const e012_5 = a.e02 !== undefined && b.e1 !== undefined\r\n    const e012_6 = a.e12 !== undefined && b.e0 !== undefined\r\n    const e012_7 = a.e012 !== undefined && b.scalar !== undefined\r\n    if (e012_0 || e012_1 || e012_2 || e012_3 || e012_4 || e012_5 || e012_6 || e012_7) {\r\n        resultE012 = 0\r\n        if (e012_0) resultE012 += 1.0 * (a.scalar! * b.e012!)\r\n        if (e012_1) resultE012 += 1.0 * (a.e0! * b.e12!)\r\n        if (e012_2) resultE012 += -1.0 * (a.e1! * b.e02!)\r\n        if (e012_3) resultE012 += 1.0 * (a.e2! * b.e01!)\r\n        if (e012_4) resultE012 += 1.0 * (a.e01! * b.e2!)\r\n        if (e012_5) resultE012 += -1.0 * (a.e02! * b.e1!)\r\n        if (e012_6) resultE012 += 1.0 * (a.e12! * b.e0!)\r\n        if (e012_7) resultE012 += 1.0 * (a.e012! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e2: resultE2,\r\n        e01: resultE01,\r\n        e02: resultE02,\r\n        e12: resultE12,\r\n        e012: resultE012,\r\n    }\r\n    return result as GeometricProductResultType<A, B>\r\n}\r\n\r\nexport type InnerProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE2 ? BladeE2 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {}) &\r\n        (B extends BladeE02 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE12 : {}) &\r\n        (B extends BladeE012 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE1 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE0 : {}) &\r\n        (B extends BladeE12 ? BladeE2 : {}) &\r\n        (B extends BladeE012 ? BladeE02 : {})\r\n    ) : {}) &\r\n    (A extends BladeE2 ? (\r\n        (B extends BladeScalar ? BladeE2 : {}) &\r\n        (B extends BladeE2 ? BladeScalar : {}) &\r\n        (B extends BladeE02 ? BladeE0 : {}) &\r\n        (B extends BladeE12 ? BladeE1 : {}) &\r\n        (B extends BladeE012 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE1 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE02 ? (\r\n        (B extends BladeScalar ? BladeE02 : {}) &\r\n        (B extends BladeE2 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE12 ? (\r\n        (B extends BladeScalar ? BladeE12 : {}) &\r\n        (B extends BladeE1 ? BladeE2 : {}) &\r\n        (B extends BladeE2 ? BladeE1 : {}) &\r\n        (B extends BladeE12 ? BladeScalar : {}) &\r\n        (B extends BladeE012 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE012 ? (\r\n        (B extends BladeScalar ? BladeE012 : {}) &\r\n        (B extends BladeE1 ? BladeE02 : {}) &\r\n        (B extends BladeE2 ? BladeE01 : {}) &\r\n        (B extends BladeE12 ? BladeE0 : {})\r\n    ) : {})\r\n\r\nexport const innerProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): InnerProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    const scalar_1 = a.e1 !== undefined && b.e1 !== undefined\r\n    const scalar_2 = a.e2 !== undefined && b.e2 !== undefined\r\n    const scalar_3 = a.e12 !== undefined && b.e12 !== undefined\r\n    if (scalar_0 || scalar_1 || scalar_2 || scalar_3) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n        if (scalar_1) resultScalar += 1.0 * (a.e1! * b.e1!)\r\n        if (scalar_2) resultScalar += 1.0 * (a.e2! * b.e2!)\r\n        if (scalar_3) resultScalar += -1.0 * (a.e12! * b.e12!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    const e0_2 = a.e1 !== undefined && b.e01 !== undefined\r\n    const e0_3 = a.e2 !== undefined && b.e02 !== undefined\r\n    const e0_4 = a.e01 !== undefined && b.e1 !== undefined\r\n    const e0_5 = a.e02 !== undefined && b.e2 !== undefined\r\n    const e0_6 = a.e12 !== undefined && b.e012 !== undefined\r\n    const e0_7 = a.e012 !== undefined && b.e12 !== undefined\r\n    if (e0_0 || e0_1 || e0_2 || e0_3 || e0_4 || e0_5 || e0_6 || e0_7) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n        if (e0_2) resultE0 += -1.0 * (a.e1! * b.e01!)\r\n        if (e0_3) resultE0 += -1.0 * (a.e2! * b.e02!)\r\n        if (e0_4) resultE0 += 1.0 * (a.e01! * b.e1!)\r\n        if (e0_5) resultE0 += 1.0 * (a.e02! * b.e2!)\r\n        if (e0_6) resultE0 += -1.0 * (a.e12! * b.e012!)\r\n        if (e0_7) resultE0 += -1.0 * (a.e012! * b.e12!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e1 !== undefined && b.scalar !== undefined\r\n    const e1_2 = a.e2 !== undefined && b.e12 !== undefined\r\n    const e1_3 = a.e12 !== undefined && b.e2 !== undefined\r\n    if (e1_0 || e1_1 || e1_2 || e1_3) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n        if (e1_2) resultE1 += -1.0 * (a.e2! * b.e12!)\r\n        if (e1_3) resultE1 += 1.0 * (a.e12! * b.e2!)\r\n    }\r\n    let resultE2 = undefined\r\n    const e2_0 = a.scalar !== undefined && b.e2 !== undefined\r\n    const e2_1 = a.e1 !== undefined && b.e12 !== undefined\r\n    const e2_2 = a.e2 !== undefined && b.scalar !== undefined\r\n    const e2_3 = a.e12 !== undefined && b.e1 !== undefined\r\n    if (e2_0 || e2_1 || e2_2 || e2_3) {\r\n        resultE2 = 0\r\n        if (e2_0) resultE2 += 1.0 * (a.scalar! * b.e2!)\r\n        if (e2_1) resultE2 += 1.0 * (a.e1! * b.e12!)\r\n        if (e2_2) resultE2 += 1.0 * (a.e2! * b.scalar!)\r\n        if (e2_3) resultE2 += -1.0 * (a.e12! * b.e1!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e2 !== undefined && b.e012 !== undefined\r\n    const e01_2 = a.e01 !== undefined && b.scalar !== undefined\r\n    const e01_3 = a.e012 !== undefined && b.e2 !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e2! * b.e012!)\r\n        if (e01_2) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e012! * b.e2!)\r\n    }\r\n    let resultE02 = undefined\r\n    const e02_0 = a.scalar !== undefined && b.e02 !== undefined\r\n    const e02_1 = a.e1 !== undefined && b.e012 !== undefined\r\n    const e02_2 = a.e02 !== undefined && b.scalar !== undefined\r\n    const e02_3 = a.e012 !== undefined && b.e1 !== undefined\r\n    if (e02_0 || e02_1 || e02_2 || e02_3) {\r\n        resultE02 = 0\r\n        if (e02_0) resultE02 += 1.0 * (a.scalar! * b.e02!)\r\n        if (e02_1) resultE02 += -1.0 * (a.e1! * b.e012!)\r\n        if (e02_2) resultE02 += 1.0 * (a.e02! * b.scalar!)\r\n        if (e02_3) resultE02 += -1.0 * (a.e012! * b.e1!)\r\n    }\r\n    let resultE12 = undefined\r\n    const e12_0 = a.scalar !== undefined && b.e12 !== undefined\r\n    const e12_1 = a.e12 !== undefined && b.scalar !== undefined\r\n    if (e12_0 || e12_1) {\r\n        resultE12 = 0\r\n        if (e12_0) resultE12 += 1.0 * (a.scalar! * b.e12!)\r\n        if (e12_1) resultE12 += 1.0 * (a.e12! * b.scalar!)\r\n    }\r\n    let resultE012 = undefined\r\n    const e012_0 = a.scalar !== undefined && b.e012 !== undefined\r\n    const e012_1 = a.e012 !== undefined && b.scalar !== undefined\r\n    if (e012_0 || e012_1) {\r\n        resultE012 = 0\r\n        if (e012_0) resultE012 += 1.0 * (a.scalar! * b.e012!)\r\n        if (e012_1) resultE012 += 1.0 * (a.e012! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e2: resultE2,\r\n        e01: resultE01,\r\n        e02: resultE02,\r\n        e12: resultE12,\r\n        e012: resultE012,\r\n    }\r\n    return result as InnerProductResultType<A, B>\r\n}\r\n\r\nexport type ExteriorProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE2 ? BladeE2 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {}) &\r\n        (B extends BladeE02 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE12 : {}) &\r\n        (B extends BladeE012 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE0 ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE12 : {}) &\r\n        (B extends BladeE02 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE2 ? (\r\n        (B extends BladeScalar ? BladeE2 : {}) &\r\n        (B extends BladeE0 ? BladeE02 : {}) &\r\n        (B extends BladeE1 ? BladeE12 : {}) &\r\n        (B extends BladeE01 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE02 ? (\r\n        (B extends BladeScalar ? BladeE02 : {}) &\r\n        (B extends BladeE1 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE12 ? (\r\n        (B extends BladeScalar ? BladeE12 : {}) &\r\n        (B extends BladeE0 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE012 ? (\r\n        (B extends BladeScalar ? BladeE012 : {})\r\n    ) : {})\r\n\r\nexport const exteriorProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): ExteriorProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    if (scalar_0) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    if (e0_0 || e0_1) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e1 !== undefined && b.scalar !== undefined\r\n    if (e1_0 || e1_1) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n    }\r\n    let resultE2 = undefined\r\n    const e2_0 = a.scalar !== undefined && b.e2 !== undefined\r\n    const e2_1 = a.e2 !== undefined && b.scalar !== undefined\r\n    if (e2_0 || e2_1) {\r\n        resultE2 = 0\r\n        if (e2_0) resultE2 += 1.0 * (a.scalar! * b.e2!)\r\n        if (e2_1) resultE2 += 1.0 * (a.e2! * b.scalar!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e0 !== undefined && b.e1 !== undefined\r\n    const e01_2 = a.e1 !== undefined && b.e0 !== undefined\r\n    const e01_3 = a.e01 !== undefined && b.scalar !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e0! * b.e1!)\r\n        if (e01_2) resultE01 += -1.0 * (a.e1! * b.e0!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n    }\r\n    let resultE02 = undefined\r\n    const e02_0 = a.scalar !== undefined && b.e02 !== undefined\r\n    const e02_1 = a.e0 !== undefined && b.e2 !== undefined\r\n    const e02_2 = a.e2 !== undefined && b.e0 !== undefined\r\n    const e02_3 = a.e02 !== undefined && b.scalar !== undefined\r\n    if (e02_0 || e02_1 || e02_2 || e02_3) {\r\n        resultE02 = 0\r\n        if (e02_0) resultE02 += 1.0 * (a.scalar! * b.e02!)\r\n        if (e02_1) resultE02 += 1.0 * (a.e0! * b.e2!)\r\n        if (e02_2) resultE02 += -1.0 * (a.e2! * b.e0!)\r\n        if (e02_3) resultE02 += 1.0 * (a.e02! * b.scalar!)\r\n    }\r\n    let resultE12 = undefined\r\n    const e12_0 = a.scalar !== undefined && b.e12 !== undefined\r\n    const e12_1 = a.e1 !== undefined && b.e2 !== undefined\r\n    const e12_2 = a.e2 !== undefined && b.e1 !== undefined\r\n    const e12_3 = a.e12 !== undefined && b.scalar !== undefined\r\n    if (e12_0 || e12_1 || e12_2 || e12_3) {\r\n        resultE12 = 0\r\n        if (e12_0) resultE12 += 1.0 * (a.scalar! * b.e12!)\r\n        if (e12_1) resultE12 += 1.0 * (a.e1! * b.e2!)\r\n        if (e12_2) resultE12 += -1.0 * (a.e2! * b.e1!)\r\n        if (e12_3) resultE12 += 1.0 * (a.e12! * b.scalar!)\r\n    }\r\n    let resultE012 = undefined\r\n    const e012_0 = a.scalar !== undefined && b.e012 !== undefined\r\n    const e012_1 = a.e0 !== undefined && b.e12 !== undefined\r\n    const e012_2 = a.e1 !== undefined && b.e02 !== undefined\r\n    const e012_3 = a.e2 !== undefined && b.e01 !== undefined\r\n    const e012_4 = a.e01 !== undefined && b.e2 !== undefined\r\n    const e012_5 = a.e02 !== undefined && b.e1 !== undefined\r\n    const e012_6 = a.e12 !== undefined && b.e0 !== undefined\r\n    const e012_7 = a.e012 !== undefined && b.scalar !== undefined\r\n    if (e012_0 || e012_1 || e012_2 || e012_3 || e012_4 || e012_5 || e012_6 || e012_7) {\r\n        resultE012 = 0\r\n        if (e012_0) resultE012 += 1.0 * (a.scalar! * b.e012!)\r\n        if (e012_1) resultE012 += 1.0 * (a.e0! * b.e12!)\r\n        if (e012_2) resultE012 += -1.0 * (a.e1! * b.e02!)\r\n        if (e012_3) resultE012 += 1.0 * (a.e2! * b.e01!)\r\n        if (e012_4) resultE012 += 1.0 * (a.e01! * b.e2!)\r\n        if (e012_5) resultE012 += -1.0 * (a.e02! * b.e1!)\r\n        if (e012_6) resultE012 += 1.0 * (a.e12! * b.e0!)\r\n        if (e012_7) resultE012 += 1.0 * (a.e012! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e2: resultE2,\r\n        e01: resultE01,\r\n        e02: resultE02,\r\n        e12: resultE12,\r\n        e012: resultE012,\r\n    }\r\n    return result as ExteriorProductResultType<A, B>\r\n}\r\n\r\nexport const multiply = <A extends OptionalMultiVector>(a: A, b: number): A => {\r\n    const result: any = {\r\n        scalar: a.scalar !== undefined ? a.scalar * b : undefined,\r\n        e0: a.e0 !== undefined ? a.e0 * b : undefined,\r\n        e1: a.e1 !== undefined ? a.e1 * b : undefined,\r\n        e2: a.e2 !== undefined ? a.e2 * b : undefined,\r\n        e01: a.e01 !== undefined ? a.e01 * b : undefined,\r\n        e02: a.e02 !== undefined ? a.e02 * b : undefined,\r\n        e12: a.e12 !== undefined ? a.e12 * b : undefined,\r\n        e012: a.e012 !== undefined ? a.e012 * b : undefined,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const div = <A extends OptionalMultiVector>(a: A, b: number): A => {\r\n    const result: any = {\r\n        scalar: a.scalar !== undefined ? a.scalar / b : undefined,\r\n        e0: a.e0 !== undefined ? a.e0 / b : undefined,\r\n        e1: a.e1 !== undefined ? a.e1 / b : undefined,\r\n        e2: a.e2 !== undefined ? a.e2 / b : undefined,\r\n        e01: a.e01 !== undefined ? a.e01 / b : undefined,\r\n        e02: a.e02 !== undefined ? a.e02 / b : undefined,\r\n        e12: a.e12 !== undefined ? a.e12 / b : undefined,\r\n        e012: a.e012 !== undefined ? a.e012 / b : undefined,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const reversion = <A extends OptionalMultiVector>(a: A): A => {\r\n    const result: any = {\r\n        scalar: a.scalar && a.scalar,\r\n        e0: a.e0 && a.e0,\r\n        e1: a.e1 && a.e1,\r\n        e2: a.e2 && a.e2,\r\n        e01: a.e01 && -a.e01,\r\n        e02: a.e02 && -a.e02,\r\n        e12: a.e12 && -a.e12,\r\n        e012: a.e012 && -a.e012,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const repr = <A extends OptionalMultiVector>(a: A, digits: number = 3): string => {\r\n    let result = \"\"\r\n    if (a.scalar !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.scalar.toFixed(digits) + \"\"\r\n        } else {\r\n            result += a.scalar >= 0 ? \" + \" + a.scalar.toFixed(digits) + \"\" : \" - \" + Math.abs(a.scalar).toFixed(digits) + \"\"\r\n        }\r\n    }\r\n    if (a.e0 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e0.toFixed(digits) + \"e0\"\r\n        } else {\r\n            result += a.e0 >= 0 ? \" + \" + a.e0.toFixed(digits) + \"e0\" : \" - \" + Math.abs(a.e0).toFixed(digits) + \"e0\"\r\n        }\r\n    }\r\n    if (a.e1 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e1.toFixed(digits) + \"e1\"\r\n        } else {\r\n            result += a.e1 >= 0 ? \" + \" + a.e1.toFixed(digits) + \"e1\" : \" - \" + Math.abs(a.e1).toFixed(digits) + \"e1\"\r\n        }\r\n    }\r\n    if (a.e2 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e2.toFixed(digits) + \"e2\"\r\n        } else {\r\n            result += a.e2 >= 0 ? \" + \" + a.e2.toFixed(digits) + \"e2\" : \" - \" + Math.abs(a.e2).toFixed(digits) + \"e2\"\r\n        }\r\n    }\r\n    if (a.e01 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e01.toFixed(digits) + \"e01\"\r\n        } else {\r\n            result += a.e01 >= 0 ? \" + \" + a.e01.toFixed(digits) + \"e01\" : \" - \" + Math.abs(a.e01).toFixed(digits) + \"e01\"\r\n        }\r\n    }\r\n    if (a.e02 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e02.toFixed(digits) + \"e02\"\r\n        } else {\r\n            result += a.e02 >= 0 ? \" + \" + a.e02.toFixed(digits) + \"e02\" : \" - \" + Math.abs(a.e02).toFixed(digits) + \"e02\"\r\n        }\r\n    }\r\n    if (a.e12 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e12.toFixed(digits) + \"e12\"\r\n        } else {\r\n            result += a.e12 >= 0 ? \" + \" + a.e12.toFixed(digits) + \"e12\" : \" - \" + Math.abs(a.e12).toFixed(digits) + \"e12\"\r\n        }\r\n    }\r\n    if (a.e012 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e012.toFixed(digits) + \"e012\"\r\n        } else {\r\n            result += a.e012 >= 0 ? \" + \" + a.e012.toFixed(digits) + \"e012\" : \" - \" + Math.abs(a.e012).toFixed(digits) + \"e012\"\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport const regressiveProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    dual(exteriorProduct(dual(a), dual(b)))\r\n\r\nexport const sandwichProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    geometricProduct(b, geometricProduct(a, reversion(b)))\r\n\r\nexport const commutatorProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    multiply(sub(geometricProduct(a, b), geometricProduct(b, a)), 0.5)\r\n\r\nexport const exponential = <A extends OptionalMultiVector>(a: A) => {\r\n    const gp = geometricProduct(a, a) as any\r\n    const s = gp.scalar || 0\r\n\r\n    // TODO: Check if non-scalar parts are non-zero\r\n\r\n    if (s < 0) {\r\n        const rootS = Math.sign(s) * Math.sqrt(Math.abs(s))\r\n        return add({ scalar: Math.cos(rootS) }, multiply(a, Math.sin(rootS) / rootS))\r\n    } else if (s > 0) {\r\n        const rootS = Math.sign(s) * Math.sqrt(Math.abs(s))\r\n        return add({ scalar: Math.cosh(rootS) }, multiply(a, Math.sinh(rootS) / rootS))\r\n    } else {\r\n        return add({ scalar: 1 }, a)\r\n    }\r\n}","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport function TutorialIndex() {\r\n    return (\r\n        <div>\r\n            <h3>Index</h3>\r\n            <div>\r\n                This tutorial tries to teach Geometric Algebra (GA) in an interactive way with runnable code and visualizations.\r\n                It is not meant to be an entirely bottom-up way where we try to derive every single result.\r\n                Instead the focus is on trying to create an understanding for GA and gradually introduce new things while\r\n                directly applying the learnt concepts.\r\n            </div>\r\n            <h4>Sections</h4>\r\n            <ol>\r\n                <li><Link to=\"/motivation\">Motivation</Link></li>\r\n                <li><Link to=\"/ga-basics\">Geometric Algebra Basics</Link></li>\r\n                <li><Link to=\"/pga\">Projective Geometric Algebra</Link></li>\r\n                <li><Link to=\"/pga-geometry\">PGA Geometry</Link></li>\r\n                <li><Link to=\"/ga-design-1\">Design of Geometric Algebras - Part 1</Link></li>\r\n            </ol>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\nexport function Motivation() {\r\n    return (\r\n        <div>\r\n            <h3>Motivation</h3>\r\n\r\n            <h5>CoffeeShop Examples</h5>\r\n            <div>\r\n                The CoffeeShop is a website containing many examples making use of Geometric Algebra.\r\n                Below I listed some interesting ones. After completing this tutorial we will be able\r\n                to reproduce them.\r\n            </div>\r\n            <ul>\r\n                <li><a href=\"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga3d_skinning\">Skinning (smooth blending)</a></li>\r\n                <li><a href=\"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga3d_physics_symmetric_top\">Rigidbody physics with unified rotation and translation</a></li>\r\n                <li><a href=\"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga2d_inverse_kinematics\">Inverse kinematics</a></li>\r\n                <li><a href=\"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga2d_differentiation\">Automatic differentiation</a></li>\r\n                <li><a href=\"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#ga3d_rotor_estimation\">Rotor estimation between two point clouds</a></li>\r\n            </ul>\r\n\r\n            <h4><Link to=\"/ga-basics\">Next: Geometric Algebra Basics</Link></h4>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { InteractiveCode } from \"./InteractiveCode\"\r\nimport * as cnt from \"./CodeGATutorial\"\r\n\r\nexport function GATutorial() {\r\n    // Need to retrigger equation typesetting as it's only done once on startup\r\n    useEffect(() => {\r\n        // eslint-disable-next-line no-eval\r\n        eval(\"if (MathJax && MathJax.typeset) MathJax.typeset();\")\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Geometric Algebra Basics</h3>\r\n            <div>\r\n                Usually introductions to GA begin by defining various rules and going over derivations\r\n                before doing anything useful with them. I will also define some rules but try to\r\n                get to the interesting stuff more quickly.\r\n            </div>\r\n\r\n            <h4>Vectors</h4>\r\n            <div>\r\n                Like for the standard 2D vector algebra in GA we have two basis vectors $e_x, e_y$\r\n                using which arbitrary vectors $v = x e_x + y e_y$ can be formed. Below is some runnable and editable\r\n                code that forms such vectors and then displays them as points. The basis vectors\r\n                $e_x, e_y$ are labeled <code>e0</code> and <code>e1</code> in the code. We specify the non-zero\r\n                coefficients for each basis vector when creating a new vector.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.codeRenderPoint}\r\n                hideOutput={true} withVisualizer={true}\r\n            />\r\n\r\n            <h4>Geometric Product</h4>\r\n            <div>\r\n                The product which defines Geometric Algebra and is its most important aspect is called the\r\n                Geometric Product. There are two useful rules for using the geometric product which will now\r\n                be introduced.\r\n            </div>\r\n            <h5>Rule 1: Basis vectors square to +1</h5>\r\n            <div>\r\n                 Multiplying two same basis vectors together with the geometric product\r\n                will result in $+1$ (for now...) if they are the same.\r\n\r\n                {`\\\\begin{equation}\r\n                e_x e_x = 1, e_y e_y = 1\r\n                \\\\end{equation}`}\r\n\r\n                This is similar to how the dot product in standard vector algebra works.\r\n                Let's verify these results with the code again, this time just logging some text instead of visualizing.\r\n            </div>\r\n            <InteractiveCode sourceCode={cnt.codeSquareBasisVectors} />\r\n\r\n            <h5>Rule 2: Different basis vectors anti-commute</h5>\r\n            <div>\r\n                What is new is that we can also multiply two different basis vectors and the result will not be zero,\r\n                but instead can't be simplified further.\r\n\r\n                {`\\\\begin{equation}\r\n                e_x e_y = e_{xy}\r\n                \\\\end{equation}`}\r\n\r\n                {`$e_{xy}$`} here is just shorthand for the two basis vectors multiplied together.\r\n                Such elements made up of two basis vectors are called bivectors.\r\n            </div>\r\n            <div>\r\n                Importantly the order of the product matters. A rule is that when you swap the factors\r\n                of a product of basis vectors you pick up a minus sign. We say that the basis vectors anti-commute.\r\n\r\n                {`\\\\begin{equation}\r\n                e_{xy} = e_x e_y = -e_y e_x = -e_{yx}\r\n                \\\\end{equation}`}\r\n            </div>\r\n            <InteractiveCode sourceCode={cnt.codeExteriorProduct} />\r\n\r\n            <h5>Practice</h5>\r\n            <div>\r\n                Let's now use these two basic rules we just learnt and see what some results are when we use them:\r\n\r\n                {`\\\\begin{aligned}\r\n                e_x e_y e_x & = & \\\\text{(Rewrite as shorthand)} \\\\\\\\\r\n                e_{xyx} & = & \\\\text{(Swap neighbours on the right, pick up minus sign)} \\\\\\\\\r\n                -e_{xxy} & = & \\\\text{(Multiplying same basis vectors results in 1, e_xx = e_x e_x = 1)} \\\\\\\\\r\n                -e_y &\r\n                \\\\end{aligned}`}\r\n\r\n                We can verify these results with the code:\r\n            </div>\r\n            \r\n            <InteractiveCode sourceCode={cnt.codeAntiCommute} />\r\n\r\n            <h5>Terminology</h5>\r\n            <div>\r\n                <div>Here's a list of some more terminology that is often used in GA</div>\r\n                <ul>\r\n                    <li>\r\n                        <b>Multivector</b>: any element of the algebra (eg. {`$1 + 2 e_x + 5 e_{xy}$`})\r\n                        </li>\r\n                    <li>\r\n                        <b>Basis blade</b>: basis vectors and any combination of them\r\n                        (eg. in 2D we have four in total: {`$1, e_x, e_y, e_{xy}$`})\r\n                    </li>\r\n                    <li><b>Grade</b>: the degree of a multivector\r\n                        (eg. $1$ is grade $0$, $e_x$ is grade $1$,\r\n                        $e_x + 5 e_y$ it also grade $1$, {`$e_{xy}$`} is grade $2$)\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <h3>Rotors</h3>\r\n\r\n            <h4>Squaring bivectors</h4>\r\n            <div>\r\n                Now for something more interesting, let's see what happens if we square the bivector {`$e_{xy}$`},\r\n                that is, multiplying it with itself:\r\n            </div>\r\n            <InteractiveCode sourceCode={cnt.codeSquareBivector} />\r\n\r\n            <div>\r\n                {`\\\\begin{equation}\r\n                e_{xy}^2 = e_{xy} e_{xy} = e_{xyxy} = -e_{xyyx} = -e_{xx} = -1\r\n                \\\\end{equation}`}\r\n\r\n                We can see the square of the bivector {`$e_{xy}$`} is $-1$. This shows that such a bivector is\r\n                very similar to the imaginary unit $i$ of complex numbers which was specifically introduced to\r\n                square to $-1$. Here we didn't have to introduce anything new and we automatically had such\r\n                an element in our algebra.\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div>\r\n                There is still one caveat. While {`$e_{xy}$`} squares to $-1$, so does {`$e_{yx}$`}.\r\n                So which one do we use? Let's try to visualize what multiplying a vector does for both of them\r\n                using {`$v' = e_{xy} v$`} and {`$v' = e_{yx} v$`}.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.codeRotate2DOrientation}\r\n                hideOutput={true} withVisualizer={true}\r\n            />\r\n\r\n            <div>\r\n                We can see that {`$e_{xy}$`} produces a clockwise (CW) rotation by 90° and {`$e_{yx}$`} produces a counter-clockwise (CCW)\r\n                rotation by 90°. We will stick with the CCW version using {`$e_{yx}$`}. Instead of that to make a CCW\r\n                rotation we could have also swapped the order of the product ({`$v' = v e_{xy}$`}) but using {`$e_{yx}$`} instead will allow us to\r\n                follow the usual conventions later.\r\n            </div>\r\n\r\n            <h4>Rotating 2D vectors using rotors</h4>\r\n\r\n            <div>\r\n                As mentioned before {`$e_{yx}$`} can be identified as the imaginary unit $i$ of complex numbers hence\r\n                we can represent complex numbers as {`$a + b e_{yx}$`} and a CCW rotation in the XY plane\r\n                by an arbitrary angle $\\phi$ can be performed just like with complex numbers\r\n                using <a href=\"https://en.wikipedia.org/wiki/Euler%27s_formula\">Euler's formula</a>\r\n\r\n                {`\\\\begin{equation}\r\n                R(\\\\phi) = e^{\\\\phi e_{yx}} = cos(\\\\phi) + e_{yx} sin(\\\\phi)\r\n                \\\\end{equation}`}\r\n\r\n                The object $R$ you get after exponentiating is called a rotor\r\n                (because it rotates when you multiply with it).\r\n\r\n                Unlike with complex numbers now however, we can multiply a vector by a rotor directly instead of\r\n                having to treat vectors as if they were complex numbers.\r\n            </div>\r\n            <InteractiveCode sourceCode={cnt.codeRotate2D}\r\n                hideOutput={true} withVisualizer={true}\r\n            />\r\n            <div>\r\n                {`\\\\begin{equation}\r\n                R(\\\\phi) v = (cos(\\\\phi) + e_{yx} sin(\\\\phi)) (x e_x + y e_y) =\r\n                e_x (x cos(\\\\phi) - y sin(\\\\phi)) + e_y (x sin(\\\\phi) + y cos(\\\\phi))\r\n                \\\\end{equation}`}\r\n            </div>\r\n\r\n            <h4>Higher dimensions</h4>\r\n            <div>\r\n                It turns out that the two dimensional rotor application formula $v' = R v$ was slightly special.\r\n                In the general case it is necessary to use a two sided product\r\n                \r\n                {`\r\n                \\\\begin{equation}\r\n                v' = R v \\\\widetilde{R}\r\n                \\\\end{equation}\r\n                `}\r\n                \r\n                which is also called the sandwich product. {\"$\\\\widetilde{R}$\"} here stands for <a href=\"https://en.wikipedia.org/wiki/Paravector#Reversion_conjugation\">reversion</a> of $R$ which\r\n                just means reversing the order of all basis vectors. For example {\"$e_{yx}$\"} becomes {\"$e_{xy}$\"}.\r\n                As we already know from the second rule of the geometric product, such a change of order just produces a\r\n                minus sign for the bivectors, so {\"$\\\\widetilde{e_{yx}} = -e_{xy}$\"}.\r\n            </div>\r\n            <div>    \r\n                Another thing that changes with the sandwich product\r\n                is that we multiply with the rotor twice, so our rotor will only need to contain half of the rotation angle.\r\n\r\n                {`\r\n                \\\\begin{equation}\r\n                R(\\\\phi) = e^{e_{yx} \\\\frac{\\\\phi}{2}}\r\n                \\\\end{equation}\r\n                `}\r\n            </div>\r\n\r\n            <div>\r\n                We can now verify that this will indeed give the same results in 2D as the simple one-sided product\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.codeGeneralRotor2D}\r\n                hideOutput={true} withVisualizer={true}\r\n            />\r\n\r\n            <div>\r\n                In the three dimensional case, if we wanted to create\r\n                a rotor that rotates in the XZ plane by $\\phi$ CCW our rotor would look like this:\r\n\r\n                {`\r\n                \\\\begin{equation}\r\n                R(\\\\phi) = e^{e_{zx} \\\\frac{\\\\phi}{2}}\r\n                \\\\end{equation}\r\n                `}\r\n\r\n                We can then also combine rotations in different planes into a single rotor by multiplying them. A rotor that rotates by $\\phi$ CCW in the\r\n                XZ plane followed by a rotation of $\\theta$ CCW in the XY plane looks like this\r\n\r\n                {`\r\n                \\\\begin{equation}\r\n                R(\\\\phi, \\\\theta) = e^{e_{yx} \\\\frac{\\\\theta}{2}} e^{e_{zx} \\\\frac{\\\\phi}{2}}\r\n                \\\\end{equation}\r\n                `}\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.codeGeneralRotor3D} editorStyle={{height: 350}} />\r\n\r\n            <div>\r\n                These elements that are like the 3D version of complex numbers are called <a href=\"https://en.wikipedia.org/wiki/Quaternion\">quaternions</a>.\r\n            </div>\r\n\r\n            <h4>More on reversion</h4>\r\n            <div>\r\n                Applying the reversion operation on a rotor reverses its effect, for example applying the reversion operation to a rotor that rotates\r\n                by 90° CCW will make it rotate by 90° CW (ie. -90° CCW). A result of this is that a rotor multiplied by its reversal produces the\r\n                identity {`$R \\\\widetilde{R} = 1$`} which does nothing when applied as demonstrated in the code below. Here we also\r\n                make use of the <code>sandwichProduct()</code> function instead of writing the sandwich product\r\n                using <code>geometricProduct()</code> and <code>reversion()</code>.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.codeReversionIdentity} editorStyle={{height: 300}} />\r\n\r\n            <h3>Summary</h3>\r\n            <div>\r\n                <ul>\r\n                    <li><b>Geometric product rule 1</b>: basis vectors square to +1 ({`$e_x e_x = e_{xx} = 1, e_y e_y = e_{yy} = 1$`})</li>\r\n                    <li><b>Geometric product rule 2</b>: different basis vectors anti-commute ({`$e_x e_y = e_{xy} =  -e_{yx} = -e_y e_x$`})</li>\r\n                    <li><b>Rotor in XY plane rotating by $\\phi$ counter-clockwise</b>: {`$R(\\\\phi) = e^{\\\\phi e_{yx}} = cos(\\\\phi) + e_{yx} sin(\\\\phi)$`}</li>\r\n                    <li><b>Reversion</b>: reverse order of basis vectors (eg. {`$e_{xyz} = e_{zyx} = -e_{xyz}$`}), inverts rotors</li>\r\n                    <li><b>Apply Rotor $R$ to $x$ using sandwich product</b>: {`$x' = R x \\\\widetilde{{R}}$`}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <h3>Conclusion</h3>\r\n            <div>\r\n                In this section we introduced Geometric Algebra. We learnt the basic rules of the Geometric Product and how to work with them.\r\n                We also learnt about rotors which generalize the rotations created by complex numbers to any dimension and also puts them\r\n                directly in the context of vectors.\r\n            </div>\r\n            <br />\r\n            <div>\r\n                In the next section we will learn how we can introduce translation in the rotors so we can do both translation and rotation\r\n                using the same rotor and just one sandwich product. This will prove to have many advantages allow even further generalization.\r\n            </div>\r\n\r\n            <h4><Link to=\"/pga\">Next: Projective Geometric Algebra</Link></h4>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\"\r\nimport { InteractiveCode } from \"./InteractiveCode\"\r\nimport * as cnt from \"./CodePGATutorial\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport function PGATutorial() {\r\n    // Need to retrigger equation typesetting as it's only done once on startup\r\n    useEffect(() => {\r\n        // eslint-disable-next-line no-eval\r\n        eval(\"if (MathJax && MathJax.typeset) MathJax.typeset();\")\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Translations</h3>\r\n            <div>\r\n                So far we learnt how to do rotations using rotors. Another important operation is translation. Naively we could\r\n                just use vector addition to achieve translation using some offset vector $d = d_x e_x + d_y e_y$\r\n\r\n                {`\\\\begin{equation}\r\n                v' = v + d\r\n                \\\\end{equation}`}\r\n\r\n                If we have two translation vectors $a$ and $b$ we can combine their action by adding them to get a single translation vector $d = a + b$.\r\n                This all seems very obvious and straightforward.\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div>\r\n                What if we wanted to do both translation and rotation? Using vector addition for translation and rotors for rotation our operation\r\n                would look like this\r\n\r\n                {`\\\\begin{equation}\r\n                v' = R v \\\\widetilde{R} + d\r\n                \\\\end{equation}`}\r\n\r\n                Now if we wanted to compose two translations and rotations, we would have two rotors $R_1$ and $R_2$ and two translation vectors $d_1$ and $d_2$.\r\n                First we would apply $R_1$ and $d_1$ according to the formula above. Then we would apply $R_2$ and $d_2$ on the result of the previous operation.\r\n\r\n                {`\\\\begin{aligned}\r\n                v' & = R_1 v \\\\widetilde{R_1} + d_1 \\\\\\\\\r\n                v'' & = R_2 v' \\\\widetilde{R_2} + d_2 = R_2 (R_1 v \\\\widetilde{R_1} + d_1) \\\\widetilde{R_2} + d_2\r\n                \\\\end{aligned}`}\r\n\r\n                We could multiply this out but we will get a lot of terms and the operations don't compose as nicely as they did when we had only rotations or translations.\r\n                Is there a way we can do both rotation and translation with a single rotor? Projective Geometric Algebra (PGA) sets out to do this.\r\n            </div>\r\n\r\n            <h3>Projective Geometric Algebra</h3>\r\n            <h5>A new kind of basis vector</h5>\r\n            <div>\r\n                PGA starts with the familiar basis vectors that square to $+1$ and also adds another basis vector $e_0$ one that squares to $0$.\r\n                In two dimensional PGA we thus have basis vectors $e_x$, $e_y$ and $e_0$. As a result there will also be three bivectors {`$e_{0x}, e_{0y}, e_{xy}$`} and one\r\n                trivector {`$e_{0xy}$`}.\r\n            </div>\r\n            <br />\r\n            <div>\r\n                We will see that this strange additional basis vector allows us to encode both rotations and translations in a single rotor and\r\n                also many more things we couldn't easily do before.\r\n            </div>\r\n            <h5>Points</h5>\r\n            <div>\r\n                Another peculiarity of PGA is that points are not encoded as vectors $x e_x + y e_y$ anymore but as\r\n\r\n                {`\\\\begin{equation}\r\n                P = x e_{y0} + y e_{0x} + e_{xy}\r\n                \\\\end{equation}`}\r\n\r\n                In the code below we display some points like before but this time using 2D PGA. The vector $e_0$ is denoted by\r\n                <code>e0</code> and $e_x, e_y$ as <code>e1</code> and <code>e2</code>.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.pgaPoints}\r\n                hideOutput={true} withVisualizer={true} />\r\n\r\n            <div>\r\n                In the code we can also see that the rendered point coordinate gets divided by\r\n                the {`$e_{xy}$`} part of the multivector. Multiplying the multivector by a scalar thus\r\n                won't have any effect on which point the multivector encodes as the final position gets\r\n                divided by the {`$e_{xy}$`} part again which was also scaled by the same amount.\r\n            </div>\r\n\r\n            <h5>Translators</h5>\r\n            <div>\r\n                As promised this weird setup will allow us to perform translations using rotors. Rotors that only do\r\n                translation are also called translators and we denote them by $T$.\r\n            </div>\r\n            <div>\r\n                Just like with the rotors we use the exponential function to generate translators from our algebra.\r\n                A translator that moves by $d$ in the X direction is given by {`$T = e^{\\\\frac{d}{2} e_{0x}}$`}.\r\n                If we compare this to the point encoding we will notice that {`$e_{0x}$`} is the bivector related to the\r\n                Y coordinate, so here the translators perform a translation that is orthogonal to the bivector's direction.\r\n                As previously we will apply the translator using the sandwich product.\r\n            </div>\r\n            <div>\r\n                This time to calculate the result of the exponential we can not make use of Euler's formula as it only applies to\r\n                elements that square to $-1$ and the bivector {`$e_{0x}$`} squares to $0$. The equivalent of Euler's formula for\r\n                elements squaring to $0$ is fortunately very simple\r\n\r\n                {`\\\\begin{equation}\r\n                T = e^{\\\\frac{d}{2} e_{0x}} = 1 + \\\\frac{d}{2} e_{0x}\r\n                \\\\end{equation}`}\r\n\r\n                so all we picked up was the additional scalar $1$.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.translators}\r\n                hideOutput={true} withVisualizer={true} />\r\n\r\n            <h5>Motors</h5>\r\n            <div>\r\n                We can also compose rotors and translators using multiplications. We call the resulting elements motors and denote them\r\n                by $m$. For example a motor\r\n\r\n                {`\\\\begin{equation}\r\n                m = e^{\\\\frac{\\\\phi}{2} e_{yx}} e^{\\\\frac{d}{2} e_{0x}}\r\n                \\\\end{equation}`}\r\n\r\n                will first perform the translation of the previous example followed by a rotation around the origin in the\r\n                XY plane by $\\phi$ CCW.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.motors}\r\n                hideOutput={true} withVisualizer={true} />\r\n\r\n            <div>\r\n                So far we have only been visualizing single points. With points we can not observe the effect that\r\n                rotation has besides how it affects the position of the points. To visualize the rotation we will\r\n                look at how a set of points gets transformed instead, such as a box. When applying a rotor that rotates\r\n                we would expect the box to also rotate. We will use the provided <code>renderBoxPGA()</code> function\r\n                for this purpose. The way it works is that it takes four points that are offset relative to the origin\r\n                and transforms them with the given motor.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.motorsBox}\r\n                hideOutput={true} withVisualizer={true} />\r\n\r\n            <div>\r\n                Our motor here produces a CCW rotation of {`$\\\\frac{\\\\pi}{4}$`} (twice the amount written in the code) which\r\n                indeed rotated our box by 45°.\r\n            </div>\r\n\r\n            <h3>Motor interpolation</h3>\r\n            <div>\r\n                A very useful property of PGA is its ability to smoothly interpolate between motors. Previously if we had separate\r\n                translation and rotation (eg. when using vector addition for translation and rotors for rotation) it was not clear how one would\r\n                interpolate between two of such transformations.\r\n            </div>\r\n\r\n            <br />\r\n\r\n            <div>\r\n                Interpolating translations and vectors is easy, for example with linear\r\n                interpolation. If we are given two vectors $v_1, v_2$ and a blending factor $\\alpha$\r\n                the interpolated vector $v(\\alpha)$ is given by\r\n\r\n                {`\\\\begin{equation}\r\n                v(v_1, v_2, \\\\alpha) = (1 - \\\\alpha) v_1 + \\\\alpha v_2\r\n                \\\\end{equation}`}\r\n            </div>\r\n            <div>\r\n                Interpolating rotations and rotors is a bit trickier but still relatively common, for example\r\n                using quaternions and <a href=\"https://en.wikipedia.org/wiki/Slerp\">spherical linear interpolation</a>.\r\n            </div>\r\n\r\n            <div>\r\n                So how do we interpolate between two motors $m_1$ and $m_2$ such as in the following example?\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.motorBlendingMotivation}\r\n                hideOutput={true} withVisualizer={true} />\r\n\r\n            <br />\r\n\r\n            <h5>With known exponents</h5>\r\n            <div>\r\n                Thankfully our hard work of learning about motors will pay off here. Imagine we are given the exponents of two\r\n                motors $m_1$ and $m_2$ which we denote by $a_1$ and $a_2$ (ie. {`$m_1 = e^{a_1}, m_2 = e^{a_2}$`}). To get the interpolated\r\n                motor $m(\\alpha)$ all we have to do is linearly interpolate between the exponents and then exponentiate\r\n\r\n                {`\\\\begin{equation}\r\n                m(\\\\alpha) = e^{(1 - \\\\alpha) a_1 + \\\\alpha a_2}\r\n                \\\\end{equation}`}\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.motorBlending}\r\n                hideOutput={true} withVisualizer={true} />\r\n\r\n            <div>\r\n                We can see the interpolation produces a curve. If we interpolated translation and rotation separately using\r\n                linear interpolation we would have just gotten a straight line.\r\n            </div>\r\n\r\n            <h5>With unknown exponents</h5>\r\n            <div>\r\n                What if we don't know the exponents of the motors? This would happen for example when we keep composing motors.\r\n                A very practical example where that occurs is if we used a motor to describe the position and rotation\r\n                of a rigidbody in a physics simulation.\r\n            </div>\r\n            <div>\r\n                Just like in usual algebra, we can take the logarithm of an exponential to get its exponent. The logarithm of a\r\n                motor in 2D PGA is given by\r\n\r\n                {`\\\\begin{equation}\r\n                log(m) = \\\\langle \\\\frac{m}{||m||} \\\\rangle_2\r\n                \\\\end{equation}`}\r\n\r\n                where $||m||$ stands for the norm of the motor and $\\langle ... \\rangle_2$ stands for only keeping the\r\n                grade $2$ parts (ie. all bivectors) of the result. $||m||$ can easily be calculated\r\n                as {`$\\\\sqrt{m \\\\widetilde{m}}$`} which results in a scalar.\r\n            </div>\r\n            <div>\r\n                In the code we just take the previous example but instead of given exponents $a_1, a_2$ we will calculate\r\n                them from given motors using the logarithm.\r\n            </div>\r\n\r\n            <InteractiveCode sourceCode={cnt.motorBlendingLog}\r\n                hideOutput={true} withVisualizer={true} />\r\n\r\n            <h3>Summary</h3>\r\n            <div>\r\n                <ul>\r\n                    <li><b>2D PGA basis vectors</b>: $e_0^2 = 0, e_x^2 = 1, e_y^2 = 1$</li>\r\n                    <li><b>Point at $(x, y)$</b>: {`$P = x e_{y0} + y e_{0x} + e_{xy}$`}</li>\r\n                    <li><b>Point coordinates $(x, y)$ from PGA point $P$</b>: {`$(X, Y) = \\\\frac{(P_{y0}, P_{x0})}{P_{xy}}$`}</li>\r\n                    <li><b>Translator by $d$ orthogonal to Y direction {`$e_{0x}$`} (ie. along X direction)</b>: {`$T = e^{\\\\frac{d}{2} e_{0x}}$`}</li>\r\n                    <li><b>Motor</b>: Rotor that both rotates and translates</li>\r\n                    <li><b>Motor logarithm</b>: {`$log(m) = \\\\langle \\\\frac{m}{||m||} \\\\rangle_2$`}</li>\r\n                    <li><b>Interpolate between motors $m_1$ and $m_2$</b>: {`$m(m_1, m_2, \\\\alpha) = e^{(1 - \\\\alpha) log(m_1) + \\\\alpha log(m_2)}$`}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <h3>Conclusion</h3>\r\n            <div>\r\n                In this section we learnt about PGA where we have a new basis vector $e_0$ which squares to $0$ and\r\n                also a different encoding for our points. This enabled us to perform translations using rotors.\r\n                A rotor which does rotation and translation is also called a motor. This also enabled\r\n                us to interpolate smoothly between motors.\r\n            </div>\r\n            <br />\r\n            <div>\r\n                In the next section we will take a look at how PGA allows us to represent \"flat\" geometric objects such as\r\n                lines and planes, and how it allows us to easily do many operations that would classically look very distinct.\r\n                We will also learn about the concept of duality and how the geometric product decomposes into two separate parts.\r\n            </div>\r\n\r\n            <h4><Link to=\"/pga-geometry\">Next: PGA Geometry</Link></h4>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useMemo } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router, Switch, Route, useLocation, Link } from \"react-router-dom\"\nimport { TutorialIndex, GATutorial, PGATutorial, Motivation } from \"./pages\"\nimport * as ga from \"./ga/ga_pp\"\nimport * as ga3d from \"./ga/ga_ppp\"\nimport * as pga from \"./ga/ga_zpp\"\nimport * as viz from \"./ga/viz2d\"\nimport { PGAGeometryTutorial } from \"./pages/PGAGeometryTutorial\"\nimport { GADesign1 } from \"./pages/GADesign1\"\n\n// Dictionary of path elements to replace with full names\n// in the breadcrumbs.\nconst breadcrumbPathToName: { [key: string]: string } = {\n    \"motivation\": \"Motivation\",\n    \"ga-basics\": \"Geometric Algebra Basics\",\n    \"pga\": \"Projective Geometric Algebra\",\n    \"pga-geometry\": \"PGA Geometry\",\n    \"ga-design-1\": \"Designing Geometric Algebras - Part 1\",\n}\n\nexport const pathToBreadcrumbs = (path: string) => {\n    const pathNames = [\"Geometric Algebra\"]\n    const pathUrls = [\"\"]\n\n    let cleanedPath = path\n    if (cleanedPath[cleanedPath.length - 1] === \"/\") {\n        cleanedPath = cleanedPath.substr(0, cleanedPath.length - 1)\n    }\n\n    let pathSplit = cleanedPath.substr(1).split(\"/\")\n\n    while (pathSplit.length > 0) {\n        const pathElement = pathSplit[0]\n\n        // Add name\n        pathNames.push(breadcrumbPathToName[pathElement] ? breadcrumbPathToName[pathElement] : pathElement)\n\n        // Add url by taking the previous url and concatenating the new path element\n        pathUrls.push(`${pathUrls[pathUrls.length - 1]}/${pathSplit[0]}`)\n\n        // Remove the element we just processed\n        pathSplit.splice(0, 1)\n    }\n\n    // Make the first breadcrumb url a slash.\n    pathUrls[0] = \"/\"\n\n    return pathNames.map((name, i) => {\n        return { name: name, url: pathUrls[i] }\n    })\n}\n\nfunction NotFound() {\n    return <h3>Not Found</h3>\n}\n\nfunction TutorialSite() {\n    const location = useLocation()\n\n    const breadcrumbs = useMemo(() => {\n        const crumbs = pathToBreadcrumbs(location.pathname)\n\n        return crumbs\n            .map(c => <Link to={c.url}>{c.name}</Link>)\n            .reduce((l, r) => <> {l} &gt; {r}  </>)\n    }, [location])\n\n    return (\n        <>\n            <div className=\"demo-container mdl-grid\">\n                <div className=\"mdl-cell mdl-cell--2-col mdl-cell--hide-tablet mdl-cell--hide-phone\"></div>\n                <div\n                    className=\"demo-content mdl-color--white mdl-shadow--4dp content mdl-color-text--grey-800 mdl-cell mdl-cell--8-col\">\n                    <div className=\"demo-crumbs mdl-color-text--grey-500\">\n                        {breadcrumbs}\n                    </div>\n                    <Switch>\n                        <Route path=\"/motivation\">\n                            <Motivation />\n                        </Route>\n                        <Route path=\"/ga-basics\">\n                            <GATutorial />\n                        </Route>\n                        <Route path=\"/pga\">\n                            <PGATutorial />\n                        </Route>\n                        <Route path=\"/pga-geometry\">\n                            <PGAGeometryTutorial />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <TutorialIndex />\n                        </Route>\n                        <Route exact path=\"/ga-design-1\">\n                            <GADesign1 />\n                        </Route>\n                        <Route path=\"*\">\n                            <NotFound />\n                        </Route>\n                    </Switch>\n                </div>\n            </div>\n            <footer className=\"demo-footer mdl-mini-footer\">\n                <div className=\"mdl-mini-footer--left-section\">\n                    <ul className=\"mdl-mini-footer--link-list\">\n                    </ul>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nfunction App() {\n    useEffect(() => {\n        // Set variables on window so we can use it in interactive code\n        const wnd = window as any\n        wnd.ga = ga\n        wnd.ga3d = ga3d\n        wnd.pga = pga\n        wnd.viz = viz\n        wnd.renderScene = (scene: viz.Scene, renderTarget: HTMLElement) => {\n            ReactDOM.render(viz.SceneView({ scene: scene }), renderTarget)\n        }\n\n        // eslint-disable-next-line no-eval\n        eval(`\n            var ga = wnd.ga;\n            var ga3d = wnd.ga3d;\n            var pga = wnd.pga;\n            var viz = wnd.viz;\n            var renderScene = wnd.renderScene;\n        `)\n    }, [])\n\n    return (\n        <Router>\n            <TutorialSite />\n        </Router>\n    )\n}\n\nexport default App\n","export type BladeScalar = { scalar: number }\r\nexport type BladeE0 = { e0: number }\r\nexport type BladeE1 = { e1: number }\r\nexport type BladeE01 = { e01: number }\r\n\r\nexport type Scalar = BladeScalar\r\nexport type Vector = BladeE0 & BladeE1\r\nexport type BiVector = BladeE01\r\nexport type PseudoBiVector = BladeScalar\r\nexport type PseudoVector = BladeE0 & BladeE1\r\nexport type PseudoScalar = BladeE01\r\nexport type Even = BladeScalar & BladeE01\r\nexport type Odd = BladeE0 & BladeE1\r\nexport type MultiVector = BladeScalar & BladeE0 & BladeE1 & BladeE01\r\n\r\nexport type OptionalMultiVector = {\r\n    scalar?: number\r\n    e0?: number\r\n    e1?: number\r\n    e01?: number\r\n}\r\n\r\nexport type AddResultType<A, B> = (\r\n    (A extends BladeScalar ? BladeScalar : {}) &\r\n    (B extends BladeScalar ? BladeScalar : {}) &\r\n    (A extends BladeE0 ? BladeE0 : {}) &\r\n    (B extends BladeE0 ? BladeE0 : {}) &\r\n    (A extends BladeE1 ? BladeE1 : {}) &\r\n    (B extends BladeE1 ? BladeE1 : {}) &\r\n    (A extends BladeE01 ? BladeE01 : {}) &\r\n    (B extends BladeE01 ? BladeE01 : {})\r\n)\r\n\r\nexport const add = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): AddResultType<A, B> => {\r\n    const result: any = {\r\n        scalar: (a.scalar !== undefined || b.scalar !== undefined) ? (a.scalar || 0) + (b.scalar || 0) : undefined,\r\n        e0: (a.e0 !== undefined || b.e0 !== undefined) ? (a.e0 || 0) + (b.e0 || 0) : undefined,\r\n        e1: (a.e1 !== undefined || b.e1 !== undefined) ? (a.e1 || 0) + (b.e1 || 0) : undefined,\r\n        e01: (a.e01 !== undefined || b.e01 !== undefined) ? (a.e01 || 0) + (b.e01 || 0) : undefined,\r\n    }\r\n    return result as AddResultType<A, B>\r\n}\r\n\r\nexport const sub = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): AddResultType<A, B> => {\r\n    const result: any = {\r\n        scalar: (a.scalar !== undefined || b.scalar !== undefined) ? (a.scalar || 0) - (b.scalar || 0) : undefined,\r\n        e0: (a.e0 !== undefined || b.e0 !== undefined) ? (a.e0 || 0) - (b.e0 || 0) : undefined,\r\n        e1: (a.e1 !== undefined || b.e1 !== undefined) ? (a.e1 || 0) - (b.e1 || 0) : undefined,\r\n        e01: (a.e01 !== undefined || b.e01 !== undefined) ? (a.e01 || 0) - (b.e01 || 0) : undefined,\r\n    }\r\n    return result as AddResultType<A, B>\r\n}\r\n\r\nexport type DualResultType<A> = (\r\n    (A extends BladeScalar ? BladeE01 : {}) &\r\n    (A extends BladeE0 ? BladeE1 : {}) &\r\n    (A extends BladeE1 ? BladeE0 : {}) &\r\n    (A extends BladeE01 ? BladeScalar : {})\r\n)\r\n\r\nexport const dual = <A extends OptionalMultiVector>(a: A): DualResultType<A> => {\r\n    const result: any = {\r\n        scalar: a.e01 !== undefined ? 1.0 * a.e01 : undefined,\r\n        e0: a.e1 !== undefined ? 1.0 * a.e1 : undefined,\r\n        e1: a.e0 !== undefined ? -1.0 * a.e0 : undefined,\r\n        e01: a.scalar !== undefined ? 1.0 * a.scalar : undefined,\r\n    }\r\n    return result as DualResultType<A>\r\n}\r\n\r\nexport type GeometricProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE0 ? BladeScalar : {}) &\r\n        (B extends BladeE1 ? BladeE01 : {}) &\r\n        (B extends BladeE01 ? BladeE1 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE0 ? BladeE01 : {}) &\r\n        (B extends BladeE1 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE0 ? BladeE1 : {}) &\r\n        (B extends BladeE1 ? BladeE0 : {}) &\r\n        (B extends BladeE01 ? BladeScalar : {})\r\n    ) : {})\r\n\r\nexport const geometricProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): GeometricProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    const scalar_1 = a.e0 !== undefined && b.e0 !== undefined\r\n    const scalar_2 = a.e1 !== undefined && b.e1 !== undefined\r\n    const scalar_3 = a.e01 !== undefined && b.e01 !== undefined\r\n    if (scalar_0 || scalar_1 || scalar_2 || scalar_3) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n        if (scalar_1) resultScalar += 1.0 * (a.e0! * b.e0!)\r\n        if (scalar_2) resultScalar += 1.0 * (a.e1! * b.e1!)\r\n        if (scalar_3) resultScalar += -1.0 * (a.e01! * b.e01!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    const e0_2 = a.e1 !== undefined && b.e01 !== undefined\r\n    const e0_3 = a.e01 !== undefined && b.e1 !== undefined\r\n    if (e0_0 || e0_1 || e0_2 || e0_3) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n        if (e0_2) resultE0 += -1.0 * (a.e1! * b.e01!)\r\n        if (e0_3) resultE0 += 1.0 * (a.e01! * b.e1!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e0 !== undefined && b.e01 !== undefined\r\n    const e1_2 = a.e1 !== undefined && b.scalar !== undefined\r\n    const e1_3 = a.e01 !== undefined && b.e0 !== undefined\r\n    if (e1_0 || e1_1 || e1_2 || e1_3) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e0! * b.e01!)\r\n        if (e1_2) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n        if (e1_3) resultE1 += -1.0 * (a.e01! * b.e0!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e0 !== undefined && b.e1 !== undefined\r\n    const e01_2 = a.e1 !== undefined && b.e0 !== undefined\r\n    const e01_3 = a.e01 !== undefined && b.scalar !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e0! * b.e1!)\r\n        if (e01_2) resultE01 += -1.0 * (a.e1! * b.e0!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e01: resultE01,\r\n    }\r\n    return result as GeometricProductResultType<A, B>\r\n}\r\n\r\nexport type InnerProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE0 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE1 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE1 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE0 ? BladeE1 : {}) &\r\n        (B extends BladeE1 ? BladeE0 : {}) &\r\n        (B extends BladeE01 ? BladeScalar : {})\r\n    ) : {})\r\n\r\nexport const innerProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): InnerProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    const scalar_1 = a.e0 !== undefined && b.e0 !== undefined\r\n    const scalar_2 = a.e1 !== undefined && b.e1 !== undefined\r\n    const scalar_3 = a.e01 !== undefined && b.e01 !== undefined\r\n    if (scalar_0 || scalar_1 || scalar_2 || scalar_3) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n        if (scalar_1) resultScalar += 1.0 * (a.e0! * b.e0!)\r\n        if (scalar_2) resultScalar += 1.0 * (a.e1! * b.e1!)\r\n        if (scalar_3) resultScalar += -1.0 * (a.e01! * b.e01!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    const e0_2 = a.e1 !== undefined && b.e01 !== undefined\r\n    const e0_3 = a.e01 !== undefined && b.e1 !== undefined\r\n    if (e0_0 || e0_1 || e0_2 || e0_3) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n        if (e0_2) resultE0 += -1.0 * (a.e1! * b.e01!)\r\n        if (e0_3) resultE0 += 1.0 * (a.e01! * b.e1!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e0 !== undefined && b.e01 !== undefined\r\n    const e1_2 = a.e1 !== undefined && b.scalar !== undefined\r\n    const e1_3 = a.e01 !== undefined && b.e0 !== undefined\r\n    if (e1_0 || e1_1 || e1_2 || e1_3) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e0! * b.e01!)\r\n        if (e1_2) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n        if (e1_3) resultE1 += -1.0 * (a.e01! * b.e0!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e01 !== undefined && b.scalar !== undefined\r\n    if (e01_0 || e01_1) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e01: resultE01,\r\n    }\r\n    return result as InnerProductResultType<A, B>\r\n}\r\n\r\nexport type ExteriorProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE0 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {})\r\n    ) : {})\r\n\r\nexport const exteriorProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): ExteriorProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    if (scalar_0) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    if (e0_0 || e0_1) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e1 !== undefined && b.scalar !== undefined\r\n    if (e1_0 || e1_1) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e0 !== undefined && b.e1 !== undefined\r\n    const e01_2 = a.e1 !== undefined && b.e0 !== undefined\r\n    const e01_3 = a.e01 !== undefined && b.scalar !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e0! * b.e1!)\r\n        if (e01_2) resultE01 += -1.0 * (a.e1! * b.e0!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e01: resultE01,\r\n    }\r\n    return result as ExteriorProductResultType<A, B>\r\n}\r\n\r\nexport const multiply = <A extends OptionalMultiVector>(a: A, b: number): A => {\r\n    const result: any = {\r\n        scalar: a.scalar !== undefined ? a.scalar * b : undefined,\r\n        e0: a.e0 !== undefined ? a.e0 * b : undefined,\r\n        e1: a.e1 !== undefined ? a.e1 * b : undefined,\r\n        e01: a.e01 !== undefined ? a.e01 * b : undefined,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const div = <A extends OptionalMultiVector>(a: A, b: number): A => {\r\n    const result: any = {\r\n        scalar: a.scalar !== undefined ? a.scalar / b : undefined,\r\n        e0: a.e0 !== undefined ? a.e0 / b : undefined,\r\n        e1: a.e1 !== undefined ? a.e1 / b : undefined,\r\n        e01: a.e01 !== undefined ? a.e01 / b : undefined,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const reversion = <A extends OptionalMultiVector>(a: A): A => {\r\n    const result: any = {\r\n        scalar: a.scalar && a.scalar,\r\n        e0: a.e0 && a.e0,\r\n        e1: a.e1 && a.e1,\r\n        e01: a.e01 && -a.e01,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const repr = <A extends OptionalMultiVector>(a: A, digits: number = 3): string => {\r\n    let result = \"\"\r\n    if (a.scalar !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.scalar.toFixed(digits) + \"\"\r\n        } else {\r\n            result += a.scalar >= 0 ? \" + \" + a.scalar.toFixed(digits) + \"\" : \" - \" + Math.abs(a.scalar).toFixed(digits) + \"\"\r\n        }\r\n    }\r\n    if (a.e0 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e0.toFixed(digits) + \"e0\"\r\n        } else {\r\n            result += a.e0 >= 0 ? \" + \" + a.e0.toFixed(digits) + \"e0\" : \" - \" + Math.abs(a.e0).toFixed(digits) + \"e0\"\r\n        }\r\n    }\r\n    if (a.e1 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e1.toFixed(digits) + \"e1\"\r\n        } else {\r\n            result += a.e1 >= 0 ? \" + \" + a.e1.toFixed(digits) + \"e1\" : \" - \" + Math.abs(a.e1).toFixed(digits) + \"e1\"\r\n        }\r\n    }\r\n    if (a.e01 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e01.toFixed(digits) + \"e01\"\r\n        } else {\r\n            result += a.e01 >= 0 ? \" + \" + a.e01.toFixed(digits) + \"e01\" : \" - \" + Math.abs(a.e01).toFixed(digits) + \"e01\"\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport const regressiveProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    dual(exteriorProduct(dual(a), dual(b)))\r\n\r\nexport const sandwichProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    geometricProduct(b, geometricProduct(a, reversion(b)))\r\n\r\nexport const commutatorProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    multiply(sub(geometricProduct(a, b), geometricProduct(b, a)), 0.5)\r\n\r\nexport const exponential = <A extends OptionalMultiVector>(a: A) => {\r\n    const gp = geometricProduct(a, a) as any\r\n    const s = gp.scalar || 0\r\n\r\n    // TODO: Check if non-scalar parts are non-zero\r\n\r\n    if (s < 0) {\r\n        const rootS = Math.sign(s) * Math.sqrt(Math.abs(s))\r\n        return add({ scalar: Math.cos(rootS) }, multiply(a, Math.sin(rootS) / rootS))\r\n    } else if (s > 0) {\r\n        const rootS = Math.sign(s) * Math.sqrt(Math.abs(s))\r\n        return add({ scalar: Math.cosh(rootS) }, multiply(a, Math.sinh(rootS) / rootS))\r\n    } else {\r\n        return add({ scalar: 1 }, a)\r\n    }\r\n}","export type BladeScalar = { scalar: number }\r\nexport type BladeE0 = { e0: number }\r\nexport type BladeE1 = { e1: number }\r\nexport type BladeE2 = { e2: number }\r\nexport type BladeE01 = { e01: number }\r\nexport type BladeE02 = { e02: number }\r\nexport type BladeE12 = { e12: number }\r\nexport type BladeE012 = { e012: number }\r\n\r\nexport type Scalar = BladeScalar\r\nexport type Vector = BladeE0 & BladeE1 & BladeE2\r\nexport type BiVector = BladeE01 & BladeE02 & BladeE12\r\nexport type TriVector = BladeE012\r\nexport type PseudoTriVector = BladeScalar\r\nexport type PseudoBiVector = BladeE0 & BladeE1 & BladeE2\r\nexport type PseudoVector = BladeE01 & BladeE02 & BladeE12\r\nexport type PseudoScalar = BladeE012\r\nexport type Even = BladeScalar & BladeE01 & BladeE02 & BladeE12\r\nexport type Odd = BladeE0 & BladeE1 & BladeE2 & BladeE012\r\nexport type MultiVector = BladeScalar & BladeE0 & BladeE1 & BladeE2 & BladeE01 & BladeE02 & BladeE12 & BladeE012\r\n\r\nexport type OptionalMultiVector = {\r\n    scalar?: number\r\n    e0?: number\r\n    e1?: number\r\n    e2?: number\r\n    e01?: number\r\n    e02?: number\r\n    e12?: number\r\n    e012?: number\r\n}\r\n\r\nexport type AddResultType<A, B> = (\r\n    (A extends BladeScalar ? BladeScalar : {}) &\r\n    (B extends BladeScalar ? BladeScalar : {}) &\r\n    (A extends BladeE0 ? BladeE0 : {}) &\r\n    (B extends BladeE0 ? BladeE0 : {}) &\r\n    (A extends BladeE1 ? BladeE1 : {}) &\r\n    (B extends BladeE1 ? BladeE1 : {}) &\r\n    (A extends BladeE2 ? BladeE2 : {}) &\r\n    (B extends BladeE2 ? BladeE2 : {}) &\r\n    (A extends BladeE01 ? BladeE01 : {}) &\r\n    (B extends BladeE01 ? BladeE01 : {}) &\r\n    (A extends BladeE02 ? BladeE02 : {}) &\r\n    (B extends BladeE02 ? BladeE02 : {}) &\r\n    (A extends BladeE12 ? BladeE12 : {}) &\r\n    (B extends BladeE12 ? BladeE12 : {}) &\r\n    (A extends BladeE012 ? BladeE012 : {}) &\r\n    (B extends BladeE012 ? BladeE012 : {})\r\n)\r\n\r\nexport const add = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): AddResultType<A, B> => {\r\n    const result: any = {\r\n        scalar: (a.scalar !== undefined || b.scalar !== undefined) ? (a.scalar || 0) + (b.scalar || 0) : undefined,\r\n        e0: (a.e0 !== undefined || b.e0 !== undefined) ? (a.e0 || 0) + (b.e0 || 0) : undefined,\r\n        e1: (a.e1 !== undefined || b.e1 !== undefined) ? (a.e1 || 0) + (b.e1 || 0) : undefined,\r\n        e2: (a.e2 !== undefined || b.e2 !== undefined) ? (a.e2 || 0) + (b.e2 || 0) : undefined,\r\n        e01: (a.e01 !== undefined || b.e01 !== undefined) ? (a.e01 || 0) + (b.e01 || 0) : undefined,\r\n        e02: (a.e02 !== undefined || b.e02 !== undefined) ? (a.e02 || 0) + (b.e02 || 0) : undefined,\r\n        e12: (a.e12 !== undefined || b.e12 !== undefined) ? (a.e12 || 0) + (b.e12 || 0) : undefined,\r\n        e012: (a.e012 !== undefined || b.e012 !== undefined) ? (a.e012 || 0) + (b.e012 || 0) : undefined,\r\n    }\r\n    return result as AddResultType<A, B>\r\n}\r\n\r\nexport const sub = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): AddResultType<A, B> => {\r\n    const result: any = {\r\n        scalar: (a.scalar !== undefined || b.scalar !== undefined) ? (a.scalar || 0) - (b.scalar || 0) : undefined,\r\n        e0: (a.e0 !== undefined || b.e0 !== undefined) ? (a.e0 || 0) - (b.e0 || 0) : undefined,\r\n        e1: (a.e1 !== undefined || b.e1 !== undefined) ? (a.e1 || 0) - (b.e1 || 0) : undefined,\r\n        e2: (a.e2 !== undefined || b.e2 !== undefined) ? (a.e2 || 0) - (b.e2 || 0) : undefined,\r\n        e01: (a.e01 !== undefined || b.e01 !== undefined) ? (a.e01 || 0) - (b.e01 || 0) : undefined,\r\n        e02: (a.e02 !== undefined || b.e02 !== undefined) ? (a.e02 || 0) - (b.e02 || 0) : undefined,\r\n        e12: (a.e12 !== undefined || b.e12 !== undefined) ? (a.e12 || 0) - (b.e12 || 0) : undefined,\r\n        e012: (a.e012 !== undefined || b.e012 !== undefined) ? (a.e012 || 0) - (b.e012 || 0) : undefined,\r\n    }\r\n    return result as AddResultType<A, B>\r\n}\r\n\r\nexport type DualResultType<A> = (\r\n    (A extends BladeScalar ? BladeE012 : {}) &\r\n    (A extends BladeE0 ? BladeE12 : {}) &\r\n    (A extends BladeE1 ? BladeE02 : {}) &\r\n    (A extends BladeE2 ? BladeE01 : {}) &\r\n    (A extends BladeE01 ? BladeE2 : {}) &\r\n    (A extends BladeE02 ? BladeE1 : {}) &\r\n    (A extends BladeE12 ? BladeE0 : {}) &\r\n    (A extends BladeE012 ? BladeScalar : {})\r\n)\r\n\r\nexport const dual = <A extends OptionalMultiVector>(a: A): DualResultType<A> => {\r\n    const result: any = {\r\n        scalar: a.e012 !== undefined ? 1.0 * a.e012 : undefined,\r\n        e0: a.e12 !== undefined ? 1.0 * a.e12 : undefined,\r\n        e1: a.e02 !== undefined ? -1.0 * a.e02 : undefined,\r\n        e2: a.e01 !== undefined ? 1.0 * a.e01 : undefined,\r\n        e01: a.e2 !== undefined ? 1.0 * a.e2 : undefined,\r\n        e02: a.e1 !== undefined ? -1.0 * a.e1 : undefined,\r\n        e12: a.e0 !== undefined ? 1.0 * a.e0 : undefined,\r\n        e012: a.scalar !== undefined ? 1.0 * a.scalar : undefined,\r\n    }\r\n    return result as DualResultType<A>\r\n}\r\n\r\nexport type GeometricProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE2 ? BladeE2 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {}) &\r\n        (B extends BladeE02 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE12 : {}) &\r\n        (B extends BladeE012 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE0 ? BladeScalar : {}) &\r\n        (B extends BladeE1 ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE02 : {}) &\r\n        (B extends BladeE01 ? BladeE1 : {}) &\r\n        (B extends BladeE02 ? BladeE2 : {}) &\r\n        (B extends BladeE12 ? BladeE012 : {}) &\r\n        (B extends BladeE012 ? BladeE12 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE0 ? BladeE01 : {}) &\r\n        (B extends BladeE1 ? BladeScalar : {}) &\r\n        (B extends BladeE2 ? BladeE12 : {}) &\r\n        (B extends BladeE01 ? BladeE0 : {}) &\r\n        (B extends BladeE02 ? BladeE012 : {}) &\r\n        (B extends BladeE12 ? BladeE2 : {}) &\r\n        (B extends BladeE012 ? BladeE02 : {})\r\n    ) : {}) &\r\n    (A extends BladeE2 ? (\r\n        (B extends BladeScalar ? BladeE2 : {}) &\r\n        (B extends BladeE0 ? BladeE02 : {}) &\r\n        (B extends BladeE1 ? BladeE12 : {}) &\r\n        (B extends BladeE2 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE012 : {}) &\r\n        (B extends BladeE02 ? BladeE0 : {}) &\r\n        (B extends BladeE12 ? BladeE1 : {}) &\r\n        (B extends BladeE012 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE0 ? BladeE1 : {}) &\r\n        (B extends BladeE1 ? BladeE0 : {}) &\r\n        (B extends BladeE2 ? BladeE012 : {}) &\r\n        (B extends BladeE01 ? BladeScalar : {}) &\r\n        (B extends BladeE02 ? BladeE12 : {}) &\r\n        (B extends BladeE12 ? BladeE02 : {}) &\r\n        (B extends BladeE012 ? BladeE2 : {})\r\n    ) : {}) &\r\n    (A extends BladeE02 ? (\r\n        (B extends BladeScalar ? BladeE02 : {}) &\r\n        (B extends BladeE0 ? BladeE2 : {}) &\r\n        (B extends BladeE1 ? BladeE012 : {}) &\r\n        (B extends BladeE2 ? BladeE0 : {}) &\r\n        (B extends BladeE01 ? BladeE12 : {}) &\r\n        (B extends BladeE02 ? BladeScalar : {}) &\r\n        (B extends BladeE12 ? BladeE01 : {}) &\r\n        (B extends BladeE012 ? BladeE1 : {})\r\n    ) : {}) &\r\n    (A extends BladeE12 ? (\r\n        (B extends BladeScalar ? BladeE12 : {}) &\r\n        (B extends BladeE0 ? BladeE012 : {}) &\r\n        (B extends BladeE1 ? BladeE2 : {}) &\r\n        (B extends BladeE2 ? BladeE1 : {}) &\r\n        (B extends BladeE01 ? BladeE02 : {}) &\r\n        (B extends BladeE02 ? BladeE01 : {}) &\r\n        (B extends BladeE12 ? BladeScalar : {}) &\r\n        (B extends BladeE012 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE012 ? (\r\n        (B extends BladeScalar ? BladeE012 : {}) &\r\n        (B extends BladeE0 ? BladeE12 : {}) &\r\n        (B extends BladeE1 ? BladeE02 : {}) &\r\n        (B extends BladeE2 ? BladeE01 : {}) &\r\n        (B extends BladeE01 ? BladeE2 : {}) &\r\n        (B extends BladeE02 ? BladeE1 : {}) &\r\n        (B extends BladeE12 ? BladeE0 : {}) &\r\n        (B extends BladeE012 ? BladeScalar : {})\r\n    ) : {})\r\n\r\nexport const geometricProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): GeometricProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    const scalar_1 = a.e0 !== undefined && b.e0 !== undefined\r\n    const scalar_2 = a.e1 !== undefined && b.e1 !== undefined\r\n    const scalar_3 = a.e2 !== undefined && b.e2 !== undefined\r\n    const scalar_4 = a.e01 !== undefined && b.e01 !== undefined\r\n    const scalar_5 = a.e02 !== undefined && b.e02 !== undefined\r\n    const scalar_6 = a.e12 !== undefined && b.e12 !== undefined\r\n    const scalar_7 = a.e012 !== undefined && b.e012 !== undefined\r\n    if (scalar_0 || scalar_1 || scalar_2 || scalar_3 || scalar_4 || scalar_5 || scalar_6 || scalar_7) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n        if (scalar_1) resultScalar += 1.0 * (a.e0! * b.e0!)\r\n        if (scalar_2) resultScalar += 1.0 * (a.e1! * b.e1!)\r\n        if (scalar_3) resultScalar += 1.0 * (a.e2! * b.e2!)\r\n        if (scalar_4) resultScalar += -1.0 * (a.e01! * b.e01!)\r\n        if (scalar_5) resultScalar += -1.0 * (a.e02! * b.e02!)\r\n        if (scalar_6) resultScalar += -1.0 * (a.e12! * b.e12!)\r\n        if (scalar_7) resultScalar += -1.0 * (a.e012! * b.e012!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    const e0_2 = a.e1 !== undefined && b.e01 !== undefined\r\n    const e0_3 = a.e2 !== undefined && b.e02 !== undefined\r\n    const e0_4 = a.e01 !== undefined && b.e1 !== undefined\r\n    const e0_5 = a.e02 !== undefined && b.e2 !== undefined\r\n    const e0_6 = a.e12 !== undefined && b.e012 !== undefined\r\n    const e0_7 = a.e012 !== undefined && b.e12 !== undefined\r\n    if (e0_0 || e0_1 || e0_2 || e0_3 || e0_4 || e0_5 || e0_6 || e0_7) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n        if (e0_2) resultE0 += -1.0 * (a.e1! * b.e01!)\r\n        if (e0_3) resultE0 += -1.0 * (a.e2! * b.e02!)\r\n        if (e0_4) resultE0 += 1.0 * (a.e01! * b.e1!)\r\n        if (e0_5) resultE0 += 1.0 * (a.e02! * b.e2!)\r\n        if (e0_6) resultE0 += -1.0 * (a.e12! * b.e012!)\r\n        if (e0_7) resultE0 += -1.0 * (a.e012! * b.e12!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e0 !== undefined && b.e01 !== undefined\r\n    const e1_2 = a.e1 !== undefined && b.scalar !== undefined\r\n    const e1_3 = a.e2 !== undefined && b.e12 !== undefined\r\n    const e1_4 = a.e01 !== undefined && b.e0 !== undefined\r\n    const e1_5 = a.e02 !== undefined && b.e012 !== undefined\r\n    const e1_6 = a.e12 !== undefined && b.e2 !== undefined\r\n    const e1_7 = a.e012 !== undefined && b.e02 !== undefined\r\n    if (e1_0 || e1_1 || e1_2 || e1_3 || e1_4 || e1_5 || e1_6 || e1_7) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e0! * b.e01!)\r\n        if (e1_2) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n        if (e1_3) resultE1 += -1.0 * (a.e2! * b.e12!)\r\n        if (e1_4) resultE1 += -1.0 * (a.e01! * b.e0!)\r\n        if (e1_5) resultE1 += 1.0 * (a.e02! * b.e012!)\r\n        if (e1_6) resultE1 += 1.0 * (a.e12! * b.e2!)\r\n        if (e1_7) resultE1 += 1.0 * (a.e012! * b.e02!)\r\n    }\r\n    let resultE2 = undefined\r\n    const e2_0 = a.scalar !== undefined && b.e2 !== undefined\r\n    const e2_1 = a.e0 !== undefined && b.e02 !== undefined\r\n    const e2_2 = a.e1 !== undefined && b.e12 !== undefined\r\n    const e2_3 = a.e2 !== undefined && b.scalar !== undefined\r\n    const e2_4 = a.e01 !== undefined && b.e012 !== undefined\r\n    const e2_5 = a.e02 !== undefined && b.e0 !== undefined\r\n    const e2_6 = a.e12 !== undefined && b.e1 !== undefined\r\n    const e2_7 = a.e012 !== undefined && b.e01 !== undefined\r\n    if (e2_0 || e2_1 || e2_2 || e2_3 || e2_4 || e2_5 || e2_6 || e2_7) {\r\n        resultE2 = 0\r\n        if (e2_0) resultE2 += 1.0 * (a.scalar! * b.e2!)\r\n        if (e2_1) resultE2 += 1.0 * (a.e0! * b.e02!)\r\n        if (e2_2) resultE2 += 1.0 * (a.e1! * b.e12!)\r\n        if (e2_3) resultE2 += 1.0 * (a.e2! * b.scalar!)\r\n        if (e2_4) resultE2 += -1.0 * (a.e01! * b.e012!)\r\n        if (e2_5) resultE2 += -1.0 * (a.e02! * b.e0!)\r\n        if (e2_6) resultE2 += -1.0 * (a.e12! * b.e1!)\r\n        if (e2_7) resultE2 += -1.0 * (a.e012! * b.e01!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e0 !== undefined && b.e1 !== undefined\r\n    const e01_2 = a.e1 !== undefined && b.e0 !== undefined\r\n    const e01_3 = a.e2 !== undefined && b.e012 !== undefined\r\n    const e01_4 = a.e01 !== undefined && b.scalar !== undefined\r\n    const e01_5 = a.e02 !== undefined && b.e12 !== undefined\r\n    const e01_6 = a.e12 !== undefined && b.e02 !== undefined\r\n    const e01_7 = a.e012 !== undefined && b.e2 !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3 || e01_4 || e01_5 || e01_6 || e01_7) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e0! * b.e1!)\r\n        if (e01_2) resultE01 += -1.0 * (a.e1! * b.e0!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e2! * b.e012!)\r\n        if (e01_4) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n        if (e01_5) resultE01 += -1.0 * (a.e02! * b.e12!)\r\n        if (e01_6) resultE01 += 1.0 * (a.e12! * b.e02!)\r\n        if (e01_7) resultE01 += 1.0 * (a.e012! * b.e2!)\r\n    }\r\n    let resultE02 = undefined\r\n    const e02_0 = a.scalar !== undefined && b.e02 !== undefined\r\n    const e02_1 = a.e0 !== undefined && b.e2 !== undefined\r\n    const e02_2 = a.e1 !== undefined && b.e012 !== undefined\r\n    const e02_3 = a.e2 !== undefined && b.e0 !== undefined\r\n    const e02_4 = a.e01 !== undefined && b.e12 !== undefined\r\n    const e02_5 = a.e02 !== undefined && b.scalar !== undefined\r\n    const e02_6 = a.e12 !== undefined && b.e01 !== undefined\r\n    const e02_7 = a.e012 !== undefined && b.e1 !== undefined\r\n    if (e02_0 || e02_1 || e02_2 || e02_3 || e02_4 || e02_5 || e02_6 || e02_7) {\r\n        resultE02 = 0\r\n        if (e02_0) resultE02 += 1.0 * (a.scalar! * b.e02!)\r\n        if (e02_1) resultE02 += 1.0 * (a.e0! * b.e2!)\r\n        if (e02_2) resultE02 += -1.0 * (a.e1! * b.e012!)\r\n        if (e02_3) resultE02 += -1.0 * (a.e2! * b.e0!)\r\n        if (e02_4) resultE02 += 1.0 * (a.e01! * b.e12!)\r\n        if (e02_5) resultE02 += 1.0 * (a.e02! * b.scalar!)\r\n        if (e02_6) resultE02 += -1.0 * (a.e12! * b.e01!)\r\n        if (e02_7) resultE02 += -1.0 * (a.e012! * b.e1!)\r\n    }\r\n    let resultE12 = undefined\r\n    const e12_0 = a.scalar !== undefined && b.e12 !== undefined\r\n    const e12_1 = a.e0 !== undefined && b.e012 !== undefined\r\n    const e12_2 = a.e1 !== undefined && b.e2 !== undefined\r\n    const e12_3 = a.e2 !== undefined && b.e1 !== undefined\r\n    const e12_4 = a.e01 !== undefined && b.e02 !== undefined\r\n    const e12_5 = a.e02 !== undefined && b.e01 !== undefined\r\n    const e12_6 = a.e12 !== undefined && b.scalar !== undefined\r\n    const e12_7 = a.e012 !== undefined && b.e0 !== undefined\r\n    if (e12_0 || e12_1 || e12_2 || e12_3 || e12_4 || e12_5 || e12_6 || e12_7) {\r\n        resultE12 = 0\r\n        if (e12_0) resultE12 += 1.0 * (a.scalar! * b.e12!)\r\n        if (e12_1) resultE12 += 1.0 * (a.e0! * b.e012!)\r\n        if (e12_2) resultE12 += 1.0 * (a.e1! * b.e2!)\r\n        if (e12_3) resultE12 += -1.0 * (a.e2! * b.e1!)\r\n        if (e12_4) resultE12 += -1.0 * (a.e01! * b.e02!)\r\n        if (e12_5) resultE12 += 1.0 * (a.e02! * b.e01!)\r\n        if (e12_6) resultE12 += 1.0 * (a.e12! * b.scalar!)\r\n        if (e12_7) resultE12 += 1.0 * (a.e012! * b.e0!)\r\n    }\r\n    let resultE012 = undefined\r\n    const e012_0 = a.scalar !== undefined && b.e012 !== undefined\r\n    const e012_1 = a.e0 !== undefined && b.e12 !== undefined\r\n    const e012_2 = a.e1 !== undefined && b.e02 !== undefined\r\n    const e012_3 = a.e2 !== undefined && b.e01 !== undefined\r\n    const e012_4 = a.e01 !== undefined && b.e2 !== undefined\r\n    const e012_5 = a.e02 !== undefined && b.e1 !== undefined\r\n    const e012_6 = a.e12 !== undefined && b.e0 !== undefined\r\n    const e012_7 = a.e012 !== undefined && b.scalar !== undefined\r\n    if (e012_0 || e012_1 || e012_2 || e012_3 || e012_4 || e012_5 || e012_6 || e012_7) {\r\n        resultE012 = 0\r\n        if (e012_0) resultE012 += 1.0 * (a.scalar! * b.e012!)\r\n        if (e012_1) resultE012 += 1.0 * (a.e0! * b.e12!)\r\n        if (e012_2) resultE012 += -1.0 * (a.e1! * b.e02!)\r\n        if (e012_3) resultE012 += 1.0 * (a.e2! * b.e01!)\r\n        if (e012_4) resultE012 += 1.0 * (a.e01! * b.e2!)\r\n        if (e012_5) resultE012 += -1.0 * (a.e02! * b.e1!)\r\n        if (e012_6) resultE012 += 1.0 * (a.e12! * b.e0!)\r\n        if (e012_7) resultE012 += 1.0 * (a.e012! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e2: resultE2,\r\n        e01: resultE01,\r\n        e02: resultE02,\r\n        e12: resultE12,\r\n        e012: resultE012,\r\n    }\r\n    return result as GeometricProductResultType<A, B>\r\n}\r\n\r\nexport type InnerProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE2 ? BladeE2 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {}) &\r\n        (B extends BladeE02 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE12 : {}) &\r\n        (B extends BladeE012 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE0 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE1 : {}) &\r\n        (B extends BladeE02 ? BladeE2 : {}) &\r\n        (B extends BladeE012 ? BladeE12 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE1 ? BladeScalar : {}) &\r\n        (B extends BladeE01 ? BladeE0 : {}) &\r\n        (B extends BladeE12 ? BladeE2 : {}) &\r\n        (B extends BladeE012 ? BladeE02 : {})\r\n    ) : {}) &\r\n    (A extends BladeE2 ? (\r\n        (B extends BladeScalar ? BladeE2 : {}) &\r\n        (B extends BladeE2 ? BladeScalar : {}) &\r\n        (B extends BladeE02 ? BladeE0 : {}) &\r\n        (B extends BladeE12 ? BladeE1 : {}) &\r\n        (B extends BladeE012 ? BladeE01 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE0 ? BladeE1 : {}) &\r\n        (B extends BladeE1 ? BladeE0 : {}) &\r\n        (B extends BladeE01 ? BladeScalar : {}) &\r\n        (B extends BladeE012 ? BladeE2 : {})\r\n    ) : {}) &\r\n    (A extends BladeE02 ? (\r\n        (B extends BladeScalar ? BladeE02 : {}) &\r\n        (B extends BladeE0 ? BladeE2 : {}) &\r\n        (B extends BladeE2 ? BladeE0 : {}) &\r\n        (B extends BladeE02 ? BladeScalar : {}) &\r\n        (B extends BladeE012 ? BladeE1 : {})\r\n    ) : {}) &\r\n    (A extends BladeE12 ? (\r\n        (B extends BladeScalar ? BladeE12 : {}) &\r\n        (B extends BladeE1 ? BladeE2 : {}) &\r\n        (B extends BladeE2 ? BladeE1 : {}) &\r\n        (B extends BladeE12 ? BladeScalar : {}) &\r\n        (B extends BladeE012 ? BladeE0 : {})\r\n    ) : {}) &\r\n    (A extends BladeE012 ? (\r\n        (B extends BladeScalar ? BladeE012 : {}) &\r\n        (B extends BladeE0 ? BladeE12 : {}) &\r\n        (B extends BladeE1 ? BladeE02 : {}) &\r\n        (B extends BladeE2 ? BladeE01 : {}) &\r\n        (B extends BladeE01 ? BladeE2 : {}) &\r\n        (B extends BladeE02 ? BladeE1 : {}) &\r\n        (B extends BladeE12 ? BladeE0 : {}) &\r\n        (B extends BladeE012 ? BladeScalar : {})\r\n    ) : {})\r\n\r\nexport const innerProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): InnerProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    const scalar_1 = a.e0 !== undefined && b.e0 !== undefined\r\n    const scalar_2 = a.e1 !== undefined && b.e1 !== undefined\r\n    const scalar_3 = a.e2 !== undefined && b.e2 !== undefined\r\n    const scalar_4 = a.e01 !== undefined && b.e01 !== undefined\r\n    const scalar_5 = a.e02 !== undefined && b.e02 !== undefined\r\n    const scalar_6 = a.e12 !== undefined && b.e12 !== undefined\r\n    const scalar_7 = a.e012 !== undefined && b.e012 !== undefined\r\n    if (scalar_0 || scalar_1 || scalar_2 || scalar_3 || scalar_4 || scalar_5 || scalar_6 || scalar_7) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n        if (scalar_1) resultScalar += 1.0 * (a.e0! * b.e0!)\r\n        if (scalar_2) resultScalar += 1.0 * (a.e1! * b.e1!)\r\n        if (scalar_3) resultScalar += 1.0 * (a.e2! * b.e2!)\r\n        if (scalar_4) resultScalar += -1.0 * (a.e01! * b.e01!)\r\n        if (scalar_5) resultScalar += -1.0 * (a.e02! * b.e02!)\r\n        if (scalar_6) resultScalar += -1.0 * (a.e12! * b.e12!)\r\n        if (scalar_7) resultScalar += -1.0 * (a.e012! * b.e012!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    const e0_2 = a.e1 !== undefined && b.e01 !== undefined\r\n    const e0_3 = a.e2 !== undefined && b.e02 !== undefined\r\n    const e0_4 = a.e01 !== undefined && b.e1 !== undefined\r\n    const e0_5 = a.e02 !== undefined && b.e2 !== undefined\r\n    const e0_6 = a.e12 !== undefined && b.e012 !== undefined\r\n    const e0_7 = a.e012 !== undefined && b.e12 !== undefined\r\n    if (e0_0 || e0_1 || e0_2 || e0_3 || e0_4 || e0_5 || e0_6 || e0_7) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n        if (e0_2) resultE0 += -1.0 * (a.e1! * b.e01!)\r\n        if (e0_3) resultE0 += -1.0 * (a.e2! * b.e02!)\r\n        if (e0_4) resultE0 += 1.0 * (a.e01! * b.e1!)\r\n        if (e0_5) resultE0 += 1.0 * (a.e02! * b.e2!)\r\n        if (e0_6) resultE0 += -1.0 * (a.e12! * b.e012!)\r\n        if (e0_7) resultE0 += -1.0 * (a.e012! * b.e12!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e0 !== undefined && b.e01 !== undefined\r\n    const e1_2 = a.e1 !== undefined && b.scalar !== undefined\r\n    const e1_3 = a.e2 !== undefined && b.e12 !== undefined\r\n    const e1_4 = a.e01 !== undefined && b.e0 !== undefined\r\n    const e1_5 = a.e02 !== undefined && b.e012 !== undefined\r\n    const e1_6 = a.e12 !== undefined && b.e2 !== undefined\r\n    const e1_7 = a.e012 !== undefined && b.e02 !== undefined\r\n    if (e1_0 || e1_1 || e1_2 || e1_3 || e1_4 || e1_5 || e1_6 || e1_7) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e0! * b.e01!)\r\n        if (e1_2) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n        if (e1_3) resultE1 += -1.0 * (a.e2! * b.e12!)\r\n        if (e1_4) resultE1 += -1.0 * (a.e01! * b.e0!)\r\n        if (e1_5) resultE1 += 1.0 * (a.e02! * b.e012!)\r\n        if (e1_6) resultE1 += 1.0 * (a.e12! * b.e2!)\r\n        if (e1_7) resultE1 += 1.0 * (a.e012! * b.e02!)\r\n    }\r\n    let resultE2 = undefined\r\n    const e2_0 = a.scalar !== undefined && b.e2 !== undefined\r\n    const e2_1 = a.e0 !== undefined && b.e02 !== undefined\r\n    const e2_2 = a.e1 !== undefined && b.e12 !== undefined\r\n    const e2_3 = a.e2 !== undefined && b.scalar !== undefined\r\n    const e2_4 = a.e01 !== undefined && b.e012 !== undefined\r\n    const e2_5 = a.e02 !== undefined && b.e0 !== undefined\r\n    const e2_6 = a.e12 !== undefined && b.e1 !== undefined\r\n    const e2_7 = a.e012 !== undefined && b.e01 !== undefined\r\n    if (e2_0 || e2_1 || e2_2 || e2_3 || e2_4 || e2_5 || e2_6 || e2_7) {\r\n        resultE2 = 0\r\n        if (e2_0) resultE2 += 1.0 * (a.scalar! * b.e2!)\r\n        if (e2_1) resultE2 += 1.0 * (a.e0! * b.e02!)\r\n        if (e2_2) resultE2 += 1.0 * (a.e1! * b.e12!)\r\n        if (e2_3) resultE2 += 1.0 * (a.e2! * b.scalar!)\r\n        if (e2_4) resultE2 += -1.0 * (a.e01! * b.e012!)\r\n        if (e2_5) resultE2 += -1.0 * (a.e02! * b.e0!)\r\n        if (e2_6) resultE2 += -1.0 * (a.e12! * b.e1!)\r\n        if (e2_7) resultE2 += -1.0 * (a.e012! * b.e01!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e2 !== undefined && b.e012 !== undefined\r\n    const e01_2 = a.e01 !== undefined && b.scalar !== undefined\r\n    const e01_3 = a.e012 !== undefined && b.e2 !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e2! * b.e012!)\r\n        if (e01_2) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e012! * b.e2!)\r\n    }\r\n    let resultE02 = undefined\r\n    const e02_0 = a.scalar !== undefined && b.e02 !== undefined\r\n    const e02_1 = a.e1 !== undefined && b.e012 !== undefined\r\n    const e02_2 = a.e02 !== undefined && b.scalar !== undefined\r\n    const e02_3 = a.e012 !== undefined && b.e1 !== undefined\r\n    if (e02_0 || e02_1 || e02_2 || e02_3) {\r\n        resultE02 = 0\r\n        if (e02_0) resultE02 += 1.0 * (a.scalar! * b.e02!)\r\n        if (e02_1) resultE02 += -1.0 * (a.e1! * b.e012!)\r\n        if (e02_2) resultE02 += 1.0 * (a.e02! * b.scalar!)\r\n        if (e02_3) resultE02 += -1.0 * (a.e012! * b.e1!)\r\n    }\r\n    let resultE12 = undefined\r\n    const e12_0 = a.scalar !== undefined && b.e12 !== undefined\r\n    const e12_1 = a.e0 !== undefined && b.e012 !== undefined\r\n    const e12_2 = a.e12 !== undefined && b.scalar !== undefined\r\n    const e12_3 = a.e012 !== undefined && b.e0 !== undefined\r\n    if (e12_0 || e12_1 || e12_2 || e12_3) {\r\n        resultE12 = 0\r\n        if (e12_0) resultE12 += 1.0 * (a.scalar! * b.e12!)\r\n        if (e12_1) resultE12 += 1.0 * (a.e0! * b.e012!)\r\n        if (e12_2) resultE12 += 1.0 * (a.e12! * b.scalar!)\r\n        if (e12_3) resultE12 += 1.0 * (a.e012! * b.e0!)\r\n    }\r\n    let resultE012 = undefined\r\n    const e012_0 = a.scalar !== undefined && b.e012 !== undefined\r\n    const e012_1 = a.e012 !== undefined && b.scalar !== undefined\r\n    if (e012_0 || e012_1) {\r\n        resultE012 = 0\r\n        if (e012_0) resultE012 += 1.0 * (a.scalar! * b.e012!)\r\n        if (e012_1) resultE012 += 1.0 * (a.e012! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e2: resultE2,\r\n        e01: resultE01,\r\n        e02: resultE02,\r\n        e12: resultE12,\r\n        e012: resultE012,\r\n    }\r\n    return result as InnerProductResultType<A, B>\r\n}\r\n\r\nexport type ExteriorProductResultType<A, B> =\r\n    (A extends BladeScalar ? (\r\n        (B extends BladeScalar ? BladeScalar : {}) &\r\n        (B extends BladeE0 ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE1 : {}) &\r\n        (B extends BladeE2 ? BladeE2 : {}) &\r\n        (B extends BladeE01 ? BladeE01 : {}) &\r\n        (B extends BladeE02 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE12 : {}) &\r\n        (B extends BladeE012 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE0 ? (\r\n        (B extends BladeScalar ? BladeE0 : {}) &\r\n        (B extends BladeE1 ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE02 : {}) &\r\n        (B extends BladeE12 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE1 ? (\r\n        (B extends BladeScalar ? BladeE1 : {}) &\r\n        (B extends BladeE0 ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE12 : {}) &\r\n        (B extends BladeE02 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE2 ? (\r\n        (B extends BladeScalar ? BladeE2 : {}) &\r\n        (B extends BladeE0 ? BladeE02 : {}) &\r\n        (B extends BladeE1 ? BladeE12 : {}) &\r\n        (B extends BladeE01 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE01 ? (\r\n        (B extends BladeScalar ? BladeE01 : {}) &\r\n        (B extends BladeE2 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE02 ? (\r\n        (B extends BladeScalar ? BladeE02 : {}) &\r\n        (B extends BladeE1 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE12 ? (\r\n        (B extends BladeScalar ? BladeE12 : {}) &\r\n        (B extends BladeE0 ? BladeE012 : {})\r\n    ) : {}) &\r\n    (A extends BladeE012 ? (\r\n        (B extends BladeScalar ? BladeE012 : {})\r\n    ) : {})\r\n\r\nexport const exteriorProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B): ExteriorProductResultType<A, B> => {\r\n    let resultScalar = undefined\r\n    const scalar_0 = a.scalar !== undefined && b.scalar !== undefined\r\n    if (scalar_0) {\r\n        resultScalar = 0\r\n        if (scalar_0) resultScalar += 1.0 * (a.scalar! * b.scalar!)\r\n    }\r\n    let resultE0 = undefined\r\n    const e0_0 = a.scalar !== undefined && b.e0 !== undefined\r\n    const e0_1 = a.e0 !== undefined && b.scalar !== undefined\r\n    if (e0_0 || e0_1) {\r\n        resultE0 = 0\r\n        if (e0_0) resultE0 += 1.0 * (a.scalar! * b.e0!)\r\n        if (e0_1) resultE0 += 1.0 * (a.e0! * b.scalar!)\r\n    }\r\n    let resultE1 = undefined\r\n    const e1_0 = a.scalar !== undefined && b.e1 !== undefined\r\n    const e1_1 = a.e1 !== undefined && b.scalar !== undefined\r\n    if (e1_0 || e1_1) {\r\n        resultE1 = 0\r\n        if (e1_0) resultE1 += 1.0 * (a.scalar! * b.e1!)\r\n        if (e1_1) resultE1 += 1.0 * (a.e1! * b.scalar!)\r\n    }\r\n    let resultE2 = undefined\r\n    const e2_0 = a.scalar !== undefined && b.e2 !== undefined\r\n    const e2_1 = a.e2 !== undefined && b.scalar !== undefined\r\n    if (e2_0 || e2_1) {\r\n        resultE2 = 0\r\n        if (e2_0) resultE2 += 1.0 * (a.scalar! * b.e2!)\r\n        if (e2_1) resultE2 += 1.0 * (a.e2! * b.scalar!)\r\n    }\r\n    let resultE01 = undefined\r\n    const e01_0 = a.scalar !== undefined && b.e01 !== undefined\r\n    const e01_1 = a.e0 !== undefined && b.e1 !== undefined\r\n    const e01_2 = a.e1 !== undefined && b.e0 !== undefined\r\n    const e01_3 = a.e01 !== undefined && b.scalar !== undefined\r\n    if (e01_0 || e01_1 || e01_2 || e01_3) {\r\n        resultE01 = 0\r\n        if (e01_0) resultE01 += 1.0 * (a.scalar! * b.e01!)\r\n        if (e01_1) resultE01 += 1.0 * (a.e0! * b.e1!)\r\n        if (e01_2) resultE01 += -1.0 * (a.e1! * b.e0!)\r\n        if (e01_3) resultE01 += 1.0 * (a.e01! * b.scalar!)\r\n    }\r\n    let resultE02 = undefined\r\n    const e02_0 = a.scalar !== undefined && b.e02 !== undefined\r\n    const e02_1 = a.e0 !== undefined && b.e2 !== undefined\r\n    const e02_2 = a.e2 !== undefined && b.e0 !== undefined\r\n    const e02_3 = a.e02 !== undefined && b.scalar !== undefined\r\n    if (e02_0 || e02_1 || e02_2 || e02_3) {\r\n        resultE02 = 0\r\n        if (e02_0) resultE02 += 1.0 * (a.scalar! * b.e02!)\r\n        if (e02_1) resultE02 += 1.0 * (a.e0! * b.e2!)\r\n        if (e02_2) resultE02 += -1.0 * (a.e2! * b.e0!)\r\n        if (e02_3) resultE02 += 1.0 * (a.e02! * b.scalar!)\r\n    }\r\n    let resultE12 = undefined\r\n    const e12_0 = a.scalar !== undefined && b.e12 !== undefined\r\n    const e12_1 = a.e1 !== undefined && b.e2 !== undefined\r\n    const e12_2 = a.e2 !== undefined && b.e1 !== undefined\r\n    const e12_3 = a.e12 !== undefined && b.scalar !== undefined\r\n    if (e12_0 || e12_1 || e12_2 || e12_3) {\r\n        resultE12 = 0\r\n        if (e12_0) resultE12 += 1.0 * (a.scalar! * b.e12!)\r\n        if (e12_1) resultE12 += 1.0 * (a.e1! * b.e2!)\r\n        if (e12_2) resultE12 += -1.0 * (a.e2! * b.e1!)\r\n        if (e12_3) resultE12 += 1.0 * (a.e12! * b.scalar!)\r\n    }\r\n    let resultE012 = undefined\r\n    const e012_0 = a.scalar !== undefined && b.e012 !== undefined\r\n    const e012_1 = a.e0 !== undefined && b.e12 !== undefined\r\n    const e012_2 = a.e1 !== undefined && b.e02 !== undefined\r\n    const e012_3 = a.e2 !== undefined && b.e01 !== undefined\r\n    const e012_4 = a.e01 !== undefined && b.e2 !== undefined\r\n    const e012_5 = a.e02 !== undefined && b.e1 !== undefined\r\n    const e012_6 = a.e12 !== undefined && b.e0 !== undefined\r\n    const e012_7 = a.e012 !== undefined && b.scalar !== undefined\r\n    if (e012_0 || e012_1 || e012_2 || e012_3 || e012_4 || e012_5 || e012_6 || e012_7) {\r\n        resultE012 = 0\r\n        if (e012_0) resultE012 += 1.0 * (a.scalar! * b.e012!)\r\n        if (e012_1) resultE012 += 1.0 * (a.e0! * b.e12!)\r\n        if (e012_2) resultE012 += -1.0 * (a.e1! * b.e02!)\r\n        if (e012_3) resultE012 += 1.0 * (a.e2! * b.e01!)\r\n        if (e012_4) resultE012 += 1.0 * (a.e01! * b.e2!)\r\n        if (e012_5) resultE012 += -1.0 * (a.e02! * b.e1!)\r\n        if (e012_6) resultE012 += 1.0 * (a.e12! * b.e0!)\r\n        if (e012_7) resultE012 += 1.0 * (a.e012! * b.scalar!)\r\n    }\r\n    const result: any = {\r\n        scalar: resultScalar,\r\n        e0: resultE0,\r\n        e1: resultE1,\r\n        e2: resultE2,\r\n        e01: resultE01,\r\n        e02: resultE02,\r\n        e12: resultE12,\r\n        e012: resultE012,\r\n    }\r\n    return result as ExteriorProductResultType<A, B>\r\n}\r\n\r\nexport const multiply = <A extends OptionalMultiVector>(a: A, b: number): A => {\r\n    const result: any = {\r\n        scalar: a.scalar !== undefined ? a.scalar * b : undefined,\r\n        e0: a.e0 !== undefined ? a.e0 * b : undefined,\r\n        e1: a.e1 !== undefined ? a.e1 * b : undefined,\r\n        e2: a.e2 !== undefined ? a.e2 * b : undefined,\r\n        e01: a.e01 !== undefined ? a.e01 * b : undefined,\r\n        e02: a.e02 !== undefined ? a.e02 * b : undefined,\r\n        e12: a.e12 !== undefined ? a.e12 * b : undefined,\r\n        e012: a.e012 !== undefined ? a.e012 * b : undefined,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const div = <A extends OptionalMultiVector>(a: A, b: number): A => {\r\n    const result: any = {\r\n        scalar: a.scalar !== undefined ? a.scalar / b : undefined,\r\n        e0: a.e0 !== undefined ? a.e0 / b : undefined,\r\n        e1: a.e1 !== undefined ? a.e1 / b : undefined,\r\n        e2: a.e2 !== undefined ? a.e2 / b : undefined,\r\n        e01: a.e01 !== undefined ? a.e01 / b : undefined,\r\n        e02: a.e02 !== undefined ? a.e02 / b : undefined,\r\n        e12: a.e12 !== undefined ? a.e12 / b : undefined,\r\n        e012: a.e012 !== undefined ? a.e012 / b : undefined,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const reversion = <A extends OptionalMultiVector>(a: A): A => {\r\n    const result: any = {\r\n        scalar: a.scalar && a.scalar,\r\n        e0: a.e0 && a.e0,\r\n        e1: a.e1 && a.e1,\r\n        e2: a.e2 && a.e2,\r\n        e01: a.e01 && -a.e01,\r\n        e02: a.e02 && -a.e02,\r\n        e12: a.e12 && -a.e12,\r\n        e012: a.e012 && -a.e012,\r\n    }\r\n    return result as A\r\n}\r\n\r\nexport const repr = <A extends OptionalMultiVector>(a: A, digits: number = 3): string => {\r\n    let result = \"\"\r\n    if (a.scalar !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.scalar.toFixed(digits) + \"\"\r\n        } else {\r\n            result += a.scalar >= 0 ? \" + \" + a.scalar.toFixed(digits) + \"\" : \" - \" + Math.abs(a.scalar).toFixed(digits) + \"\"\r\n        }\r\n    }\r\n    if (a.e0 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e0.toFixed(digits) + \"e0\"\r\n        } else {\r\n            result += a.e0 >= 0 ? \" + \" + a.e0.toFixed(digits) + \"e0\" : \" - \" + Math.abs(a.e0).toFixed(digits) + \"e0\"\r\n        }\r\n    }\r\n    if (a.e1 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e1.toFixed(digits) + \"e1\"\r\n        } else {\r\n            result += a.e1 >= 0 ? \" + \" + a.e1.toFixed(digits) + \"e1\" : \" - \" + Math.abs(a.e1).toFixed(digits) + \"e1\"\r\n        }\r\n    }\r\n    if (a.e2 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e2.toFixed(digits) + \"e2\"\r\n        } else {\r\n            result += a.e2 >= 0 ? \" + \" + a.e2.toFixed(digits) + \"e2\" : \" - \" + Math.abs(a.e2).toFixed(digits) + \"e2\"\r\n        }\r\n    }\r\n    if (a.e01 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e01.toFixed(digits) + \"e01\"\r\n        } else {\r\n            result += a.e01 >= 0 ? \" + \" + a.e01.toFixed(digits) + \"e01\" : \" - \" + Math.abs(a.e01).toFixed(digits) + \"e01\"\r\n        }\r\n    }\r\n    if (a.e02 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e02.toFixed(digits) + \"e02\"\r\n        } else {\r\n            result += a.e02 >= 0 ? \" + \" + a.e02.toFixed(digits) + \"e02\" : \" - \" + Math.abs(a.e02).toFixed(digits) + \"e02\"\r\n        }\r\n    }\r\n    if (a.e12 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e12.toFixed(digits) + \"e12\"\r\n        } else {\r\n            result += a.e12 >= 0 ? \" + \" + a.e12.toFixed(digits) + \"e12\" : \" - \" + Math.abs(a.e12).toFixed(digits) + \"e12\"\r\n        }\r\n    }\r\n    if (a.e012 !== undefined) {\r\n        if (result === \"\") {\r\n            result += a.e012.toFixed(digits) + \"e012\"\r\n        } else {\r\n            result += a.e012 >= 0 ? \" + \" + a.e012.toFixed(digits) + \"e012\" : \" - \" + Math.abs(a.e012).toFixed(digits) + \"e012\"\r\n        }\r\n    }\r\n    return result\r\n}\r\n\r\nexport const regressiveProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    dual(exteriorProduct(dual(a), dual(b)))\r\n\r\nexport const sandwichProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    geometricProduct(b, geometricProduct(a, reversion(b)))\r\n\r\nexport const commutatorProduct = <A extends OptionalMultiVector, B extends OptionalMultiVector>(a: A, b: B) =>\r\n    multiply(sub(geometricProduct(a, b), geometricProduct(b, a)), 0.5)\r\n\r\nexport const exponential = <A extends OptionalMultiVector>(a: A) => {\r\n    const gp = geometricProduct(a, a) as any\r\n    const s = gp.scalar || 0\r\n\r\n    // TODO: Check if non-scalar parts are non-zero\r\n\r\n    if (s < 0) {\r\n        const rootS = Math.sign(s) * Math.sqrt(Math.abs(s))\r\n        return add({ scalar: Math.cos(rootS) }, multiply(a, Math.sin(rootS) / rootS))\r\n    } else if (s > 0) {\r\n        const rootS = Math.sign(s) * Math.sqrt(Math.abs(s))\r\n        return add({ scalar: Math.cosh(rootS) }, multiply(a, Math.sinh(rootS) / rootS))\r\n    } else {\r\n        return add({ scalar: 1 }, a)\r\n    }\r\n}","/* eslint-disable no-eval */\r\nimport React, { useState, useCallback, useRef, useMemo } from \"react\"\r\nimport styles from \"./InteractiveCode.module.css\"\r\nimport AceEditor from \"react-ace\"\r\nimport \"brace/mode/javascript\"\r\nimport \"brace/theme/monokai\"\r\nimport { SceneView } from \"../ga/viz2d\"\r\n\r\n\r\nexport type InteractiveCodeProps = {\r\n    style?: React.CSSProperties\r\n\r\n    sourceCode: string\r\n    editorStyle?: React.CSSProperties\r\n\r\n    hideOutput?: boolean\r\n    outputStyle?: React.CSSProperties\r\n\r\n    withVisualizer?: boolean\r\n    visualizerStyle?: React.CSSProperties\r\n}\r\n\r\nconst formatObject = (obj: any) => {\r\n    return typeof obj === \"string\" ?\r\n        obj : (\r\n            typeof obj === \"number\" ?\r\n                obj.toString() :\r\n                JSON.stringify(obj, null, 4)\r\n        )\r\n}\r\n\r\nexport function InteractiveCode(props: InteractiveCodeProps) {\r\n    const {\r\n        sourceCode, editorStyle, hideOutput, withVisualizer, visualizerStyle,\r\n        outputStyle, style\r\n    } = props\r\n\r\n    // Store the edited code\r\n    const [code, setCode] = useState(sourceCode)\r\n\r\n    // Store the result of runs\r\n    const [runResult, setRunResult] = useState(\"Press run\")\r\n\r\n    // Run the code.\r\n    const run = useCallback(() => {\r\n        const oldLog = console.log\r\n\r\n        const newRunResults: string[] = []\r\n\r\n        console.log = (message?: any, ...optionalParams: any[]) => {\r\n            newRunResults.push(\r\n                (message !== undefined ? formatObject(message) + \" \" : \"\") +\r\n                optionalParams.map(formatObject).join(\" \")\r\n            )\r\n            oldLog(message, ...optionalParams)\r\n        }\r\n\r\n        let codeToRun = code;\r\n        const renderTarget = withVisualizer && visualizerRef.current\r\n\r\n        // Add helpers when using visualizer\r\n        if (renderTarget) {\r\n            codeToRun = `\r\n                var points = [];\r\n                var lines = [];\r\n                var infos = [];\r\n                var renderPointPGA = (p, color) => points.push({point: p, radius: 4, fill: color});\r\n                var renderLinePGA = (l, color) => lines.push({line: l, width: 2, stroke: color});\r\n                var renderPointGA = (p, color) => renderPointPGA({e02: -p.e0, e01: p.e1, e12: 1}, color);\r\n                var renderInfo = (info, color) => infos.push({text: info, fontSize: 4, color: color});\r\n                var renderBoxPGA = (m, color, h) => {\r\n                    h = h || 3\r\n                    var corners = [\r\n                        {\r\n                            e01: -h,\r\n                            e02: -h,\r\n                            e12: 1\r\n                        },\r\n                        {\r\n                            e01: h,\r\n                            e02: -h,\r\n                            e12: 1\r\n                        },\r\n                        {\r\n                            e01: h,\r\n                            e02: h,\r\n                            e12: 1\r\n                        },\r\n                        {\r\n                            e01: -h,\r\n                            e02: h,\r\n                            e12: 1\r\n                        }\r\n                    ];\r\n\r\n                    for (var cornerIndex = 0; cornerIndex < corners.length; cornerIndex++) {\r\n                        points.push({point: pga.sandwichProduct(corners[cornerIndex], m), radius: 2, fill: color});\r\n                    }\r\n                };\r\n            ` + codeToRun + `\r\n                renderScene({ points: points, lines: lines, infos: infos }, document.getElementById(\"${renderTarget.id}\"));\r\n            `\r\n        }\r\n\r\n        // Declare log() so we can write shorter code\r\n        codeToRun = \"var log = console.log;\" + codeToRun\r\n\r\n        try {\r\n            eval(codeToRun)\r\n            setRunResult(newRunResults.join(\"\\n\"))\r\n        } catch (e) {\r\n            setRunResult(e.toString())\r\n        }\r\n\r\n        console.log = oldLog\r\n    }, [code, withVisualizer])\r\n\r\n    // Unique id so we can refer to the div element that contains the \r\n    // svg render target later if we use a visualizer.\r\n    const uniqueId = useMemo(() => {\r\n        return (Math.random().toString(36) + \"00000000000000000\").slice(2, 18)\r\n    }, [])\r\n\r\n    const visualizerRef = useRef<HTMLDivElement>(null)\r\n\r\n    return (\r\n        <div className={styles[\"interactive-code\"]} style={style}>\r\n            <div style={{ position: \"relative\", width: \"100%\" }}>\r\n                <button style={{ border: 0, background: \"#505050\", color: \"#FFFFFF\", position: \"absolute\", right: 10, top: 10, fontSize: 24, zIndex: 10 }} onClick={run}>Run</button>\r\n            </div>\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", alignContent: \"stretch\" }}>\r\n                <div style={{ display: \"flex\", flexDirection: \"row\", alignContent: \"stretch\", flexWrap: \"wrap\" }}>\r\n                    <AceEditor className={withVisualizer ? styles[\"interactive-code-editor-with-viz\"] : styles[\"interactive-code-editor-without-viz\"]}\r\n                        style={{ ...{ width: undefined, height: undefined }, ...editorStyle }}\r\n                        mode=\"javascript\" theme=\"monokai\" value={code} onChange={e => setCode(e)}\r\n                        showPrintMargin={false}\r\n                    />\r\n\r\n                    {withVisualizer &&\r\n                        <div id={`#${uniqueId}`} ref={visualizerRef} className={styles[\"interactive-code-viz\"]} style={visualizerStyle}>\r\n                            <SceneView scene={{}} />\r\n                        </div>\r\n                    }\r\n                </div>\r\n\r\n                {!hideOutput &&\r\n                    <AceEditor className={styles[\"interactive-code-output\"]} style={{ ...{ width: undefined, height: undefined }, ...outputStyle }}\r\n                        mode=\"javascript\" theme=\"monokai\" value={runResult} readOnly={true}\r\n                        showPrintMargin={false}\r\n                    />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\n\r\nexport function PGAGeometryTutorial() {\r\n    return (\r\n        <div>\r\n            <h4>Projective Geometric Algebra Geometry</h4>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport function GADesign1() {\r\n    // Need to retrigger equation typesetting as it's only done once on startup\r\n    useEffect(() => {\r\n        // eslint-disable-next-line no-eval\r\n        eval(\"if (MathJax && MathJax.typeset) MathJax.typeset();\")\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h3>Designing Geometric Algebras</h3>\r\n            <div>\r\n                Typically we choose a Geometric Algebra that will work well with our problem.\r\n                First there are the object types the different GAs can represent.\r\n                If we want flat objects such as lines and planes going through the origin ordinary GA works.\r\n                If we additionally want the objects to be at arbitrary positions PGA is a good choice.\r\n                For spheres we can choose CGA which can directly represent them.\r\n                Secondly we might need certain operations which also dictates our choice of GA.\r\n                Ordinary GA has rotors that can do rotations only.\r\n                With both PGA and CGA we get rotors which can do translation and rotation.\r\n\r\n                Below is a table of a few already explored GAs and their properties.\r\n\r\n                <table style={{ width: \"100%\", padding: \"2%\" }}>\r\n                    <tr>\r\n                        <th style={{ textAlign: \"left\" }}>Name</th>\r\n                        <th style={{ textAlign: \"left\" }}>{`$\\\\mathbb{Cl}(p, q, r)$`}</th>\r\n                        <th style={{ textAlign: \"left\" }}>Objects</th>\r\n                        <th style={{ textAlign: \"left\" }}>Rotors</th>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Ordinary GA</td>\r\n                        <td>N, 0, 0</td>\r\n                        <td>Flat (through origin)</td>\r\n                        <td>Rotation</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Projective Geometric Algebra</td>\r\n                        <td>N, 0, 1</td>\r\n                        <td>Flat</td>\r\n                        <td>Rotation, Translation</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Conformal Geometric Algebra</td>\r\n                        <td>N+1, 1, 0</td>\r\n                        <td>Flat, Round</td>\r\n                        <td>Rotation, Translation</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><a href=\"https://link.springer.com/article/10.1007/s00006-018-0879-2\">Conic Geometric Algebra</a></td>\r\n                        <td>5, 3, 0</td>\r\n                        <td>Conics (2D)</td>\r\n                        <td>Rotation, Translation, Uniform scaling</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td><a href=\"https://www.researchgate.net/publication/324067465_Quadric_Conformal_Geometric_Algebra_of_mathbb_R96R96\">Quadric Geometric Algebra</a></td>\r\n                        <td>9, 6, 0</td>\r\n                        <td>Quadrics (3D)</td>\r\n                        <td>Rotation, Translation, Uniform scaling</td>\r\n                    </tr>\r\n                </table>\r\n\r\n                So if what we need is contained in one of these we can simply use them and\r\n                benefit from the previous exploration done within them.\r\n                What if we need something that is not contained in one of these pre-made\r\n                GAs though? Is there a way to create exactly what we need?\r\n                \r\n                In the first part of this article we will try to figure out how to create a\r\n                GA that contains the objects we want. Specifically we will try to create a\r\n                GA containing arbitrary polynomial shapes such as parabolas and <a href=\"https://en.wikipedia.org/wiki/Elliptic_curve\">elliptic curves</a>.\r\n                In the second part we will also look at the rotors.\r\n            </div>\r\n\r\n            <h4>How are objects represented outside of GA?</h4>\r\n            <div>\r\n                <div>\r\n                    Before jumping into GA we should take a step back and remember how we represented \r\n                    objects in algebra before.\r\n                </div>\r\n                <div>\r\n                    Usually we represent a 2D line by the linear equation $y = a x + b$, a circle at the origin\r\n                    by $x^2 + y^2 = r^2$ and so on. Rearranging this a bit to bring everything to the same\r\n                    side we get equivalently $ax + b - y = 0$ and $x^2 + y^2 - r^2 = 0$. The object is then\r\n                    represented by all the points $(x, y)$ for which these equations are true, that is, for which\r\n                    the left hand side evaluates to zero. We call this the null space or kernel of the function.\r\n                </div>\r\n            </div>\r\n\r\n            <h4>Object representation in GA</h4>\r\n            <div>\r\n                <div>\r\n                    Now jumping to GA, in 2D PGA a point is represented by a bivector {`$x e_{0y} + y e_{x0} + 1 e_{xy}$`} and \r\n                    a line is represented by a vector {`$x e_x + y e_y - d e_0$`}. Let's call the mapping for points\r\n                    the $up$  function:\r\n                    {`\\\\begin{equation}\r\n                    up: \\\\mathbb{R}^N \\\\mapsto \\\\mathbb{Cl}(...)\r\n                    \\\\end{equation}`}\r\n\r\n                    Here's a table of the previously mentioned algebras and their up functions. Note that some of these use a dual representation \r\n                    for points (points as pseudovectors) and some use the usual representation (points as vectors).\r\n\r\n                    <table style={{ width: \"100%\", padding: \"2%\" }}>\r\n                        <tr>\r\n                            <th style={{ textAlign: \"left\" }}>Name</th>\r\n                            <th style={{ textAlign: \"left\" }}>Up</th>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ordinary GA</td>\r\n                            <td>$x e_x + y e_y + z e_z + ...$</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Projective Geometric Algebra</td>\r\n                            <td>$x e_x^* + y e_y^* + ... + 1 e_0^*$</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Conformal Geometric Algebra</td>\r\n                            <td>$1 e_o + x e_x + y e_y + ... + \\frac{1}{2} (x^2 + y^2 + ...) e_\\infty$</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Conic Geometric Algebra</td>\r\n                            <td>{`$e_{o+} + x e_x + y e_y + \\\\frac{1}{2} (x^2 + y^2) e_{\\\\infty +} + \\\\frac{1}{2} (x^2 - y^2) e_{\\\\infty +} + x y e_{\\\\infty \\\\times}$`}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Quadric Geometric Algebra</td>\r\n                            <td>{`$x e_x + ... + \\\\frac{1}{2} (x^2 e_{\\\\infty 1} + ...) + x y e_{\\\\infty 4} + ... + 1 e_{o 1} + ... $`}</td>\r\n                        </tr>\r\n                    </table>\r\n\r\n                    How do we connect these representations to the usual null-space representation?\r\n                    There are two almost equivalent ways of doing this.\r\n                </div>\r\n                <h5>Inner Product Null Space Representation</h5>\r\n                <div>\r\n                    The first one is the Inner Product Null Space (IPNS) representation. Here we say that the inner product\r\n                    of our object, let's call it $o$, is zero for arbitrary points produced by our up function.\r\n\r\n                    {`\\\\begin{equation}\r\n                    X \\\\cdot o = 0\r\n                    \\\\end{equation}`}\r\n                    \r\n                    The IPNS representation has the downside that we need to define a metric so the inner product works.\r\n                    This means that the representation depends on what our basis vectors square to. This also doesn't work\r\n                    for degenerate metrics such as the one used by PGA.\r\n                </div>\r\n                <h5>Outer Product Null Space Representation</h5>\r\n                <div>\r\n                    The second representation is the Outer Product Null Space (OPNS) representation. Instead of the inner product \r\n                    we use the outer product which means we don't need to define a metric either and this will work the same regardless \r\n                    of what our basis vectors square to. We wedge our object $o$ with an arbitrary point produced by our up function.\r\n\r\n                    {`\\\\begin{equation}\r\n                    X \\\\wedge o = 0\r\n                    \\\\end{equation}`}\r\n\r\n                    The intuition here is that if points are represented by vectors then $\\wedge$ represents the join operation. If \r\n                    we try to join a point that already lies on the object we get zero. Note that if we're using a dual representation \r\n                    (points as pseudovectors) then we need to use $\\vee$ instead as that is then the join operation (maybe a better name \r\n                    would then be the Vee Product Null Space (VPNS)?). \r\n                </div>\r\n                <div>\r\n                    We will continue using OPNS from now on and apply it to recover more familiar equations for the objects.\r\n                </div>\r\n                <h5>OPNS applied to PGA 2D</h5>\r\n                <div>\r\n                    Let's apply the OPNS equation to see what a vector in 2D PGA represents. For the arbitrary $X$ \r\n                    we need to use a pseudovector. The $up(x, y)$ function gives us a pseudovector (bivector in this case) \r\n                    so let's use it in place of $X$ and remember that we need to use $\\vee$ for dual representations.\r\n\r\n                    {`\\\\begin{aligned}\r\n                    up(x, y) \\\\vee vector & = (x e_{0y} + y e_{x0} + 1 e_{xy}) \\\\vee (a e_x + b e_y + d e_0) \\\\\\\\\r\n                    & = a x + b y + d  \\\\\\\\\r\n                    & = a x + b y + d = 0\r\n                    \\\\end{aligned}`}\r\n\r\n                    We have recovered the usual equation for a line. Unlike the previous one, this one also has a coefficient for $y$ which makes \r\n                    it possible to represent vertical lines (by setting $b = 0$ we get $a x = -d$). Hence the vectors in 2D PGA represent lines.\r\n                </div>\r\n            </div>\r\n\r\n            <h4>Representing polynomials in GA</h4>\r\n            <div>\r\n                Looking at how we arrived at the equation for a line from the OPNS equation we can see that the \r\n                coefficients $a, b, d$ came from the object whose representation we're trying to understand, but the \r\n                variables $x$, $y$ and $1$ (for $d$) came from how we defined the $up$ function.\r\n                This means that if we wanted to represent different shapes we need to change the $up$ function.\r\n            </div>\r\n            <div>\r\n                As an example, if we wanted to represent parabolas, we would need to have a basis vector that has $x^2$ as a \r\n                coefficient in $up$. For example {`$up(x, y) = x^2 e_{0y} + y e_{x0} + 1 e_{xy}$`} \r\n                would give us $a x^2 + b y + d = 0$ after applying the OPNS equation.\r\n            </div>\r\n            <div>\r\n                Another interesting observation here is that we have a constant term in the polynomial \r\n                which comes from the fact that we add a constant bivector {`$1 e_{xy}$`} \r\n                in the up function. This allows PGA to represent translated objects unlike ordinary GA which \r\n                can only represent objects through the origin.\r\n            </div>\r\n            <div>\r\n                Furthermore the number of basis vectors is arbitrary. For each term we want we can simply add another basis vector \r\n                with our desired coefficient.\r\n                Finally as already mentioned before, the OPNS does not depend on the metric so the interpretation works \r\n                regardless of what the basis vectors square to.\r\n            </div>\r\n\r\n            <h4>Example: Elliptic curves in GA</h4>\r\n            <div>\r\n                Looking at the <a href=\"https://en.wikipedia.org/wiki/Elliptic_curve\">Wikipedia article for elliptic curves</a> \r\n                we can find that the equation for an elliptic curve is $y^2 = x^3 + a x + b 1$. So to represent them we need \r\n                4 terms in our up function with coefficients $y^2, x^3, x, 1$. As a result we will need 4 basis vectors (with any signature). \r\n\r\n                {`\\\\begin{aligned}\r\n                up(x, y) & = x^3 e_1^* + y^2 e_2^* + x e_3^* + 1 e_4^* \\\\\\\\\r\n                & = x^3 e_{234} + y^2 e_{134} + x e_{124} + 1 e_{123}\r\n                \\\\end{aligned}`}\r\n\r\n                Vectors will now be able to represent elliptic curves as well as other simpler curves (parabolas, cubics, lines, ...).\r\n                You can verify this by hand (or ideally using symbolic math software) by applying the OPNS equation to a vector as \r\n                before in the 2D PGA example.\r\n            </div>\r\n\r\n            <h4>Join and meet</h4>\r\n            <div>\r\n                <div>\r\n                    If points are represented by vectors the join is $\\wedge$ and meet is $\\vee$.\r\n                    In algebras that uses a dual representation for points such as PGA this is swapped and join is $\\vee$ \r\n                    and meet is $\\wedge$.\r\n                </div>\r\n                <div>\r\n                    Something interesting happens when we look at the meet operation which returns the intersection object of two objects.\r\n                    In PGA when we intersected two straight lines we get a single point (or point at infinity if the lines are parallel).\r\n                    However with more complicated curves such as parabolas or elliptic curves we will get more than one intersection point.\r\n                    For example intersecting a parabola with a line (assuming they intersect) will result in two points.\r\n                    However the representation for such a point pair is identical to the representation of a single point in PGA.\r\n                    The difference will only be visible once we apply the OPNS equation to find out what our object is actually representing.\r\n                </div>\r\n                <h5>Example: parabola at origin intersects horizontal line</h5>\r\n                <div>\r\n                    Let's apply what we have just learnt and look at some actual results to see if they make sense.\r\n                    We want to intersect a parabola at the origin of the form $y = a x^2$ with a horizontal line of the form \r\n                    $y = c 1$. We would expect the intersection to contain 2 points (assuming they intersect).\r\n                </div>\r\n                <div>\r\n                    From the two equations we see that we need the terms $x^2$, $y$ and $1$ and thus we require 3 basis vectors. We'll use a dual \r\n                    representation (points as pseudovectors) and define our up function as follows\r\n\r\n                    {`\\\\begin{aligned}\r\n                    up(x, y) & = x^2 e_1^* + y e_2^* + 1 e_3^* \\\\\\\\\r\n                    & = x^2 e_{23} + y e_{31} + 1 e_{12}\r\n                    \\\\end{aligned}`}\r\n\r\n                    Now curves should be represented by vectors. For our parabola $p$ we need the $x^2$ and $y$ basis vectors, that is $e_1$ and $e_2$ respectively.\r\n                    For our line $l$ we will need the $y$ and $1$ basis vectors, that is $e_2$ and $e_3$ respectively.\r\n\r\n                    {`\\\\begin{aligned}\r\n                    p & = a e_1 - e_2 \\\\\\\\\r\n                    l & = -e_2 + b e_3\r\n                    \\\\end{aligned}`}\r\n\r\n                    Let's look at the OPNS (using $\\vee$) for $p$ to confirm it indeed represents the desired parabola.\r\n\r\n                    {`\\\\begin{aligned}\r\n                    up(x, y) \\\\vee p & = (x^2 e_1^* + y e_2^* + 1 e_3^*) \\\\vee (a e_1 - e_2) \\\\\\\\\r\n                    & = a x^2 - y = 0 \\\\\\\\\r\n                    \\\\end{aligned}`}\r\n\r\n                    {`\\\\begin{aligned}\r\n                    up(x, y) \\\\vee l & = (x^2 e_1^* + y e_2^* + 1 e_3^*) \\\\vee (-e_2 + b e_3) \\\\\\\\\r\n                    & = b - y = 0 \\\\\\\\\r\n                    \\\\end{aligned}`}\r\n\r\n                    Looks like we're good! Now we can intersect the two objects using $\\wedge$ as that is the meet operation in the dual representation.\r\n                    We will call the intersection object $i$.\r\n                    \r\n                    {`\\\\begin{aligned}\r\n                    i = p \\\\wedge l = -a e_{12} + a b e_{13} - b e_{23}\r\n                    \\\\end{aligned}`}\r\n\r\n                    Now let's look at the OPNS of the intersection object to see if it gives us what we expect (two points of intersection).\r\n\r\n                    {`\\\\begin{aligned}\r\n                    up(x, y) \\\\vee i & = (x^2 e_1^* + y e_2^* + 1 e_3^*) \\\\vee (-a e_{12} + a b e_{13} - b e_{23}) \\\\\\\\\r\n                    & = a (-b + y) e_1 + (-a x^2 + b) e_2 + b (a x^2 - y) e_3 = 0\r\n                    \\\\end{aligned}`}\r\n\r\n                    Now we have three vectors that need to each be equal to zero.\r\n\r\n                    {`\\\\begin{aligned}\r\n                    a (-b + y) = 0 & \\\\implies y = b \\\\\\\\\r\n                    (-a x^2 + b) = 0 & \\\\implies x^2 = \\\\frac{b}{a} \\\\\\\\\r\n                    b (a x^2 - y) = 0 & \\\\implies x^2 = \\\\frac{y}{a} \\\\\\\\\r\n                    \\\\end{aligned}`}\r\n\r\n                    The three equations aren't independent (combining the first and third one gives the second one). This is because we didn't \r\n                    use the most general form for curves which would give us 3 independent equations we'd need to solve. So now we see that \r\n                    the intersection object represents {`$x^2 = \\\\frac{b}{a}$`} and $y = b$. This has two solutions {`$x_{1,2} = \\\\pm \\\\sqrt{\\\\frac{b}{a}}$`} as expected \r\n                    and the solutions are the correct ones too (eg. $y$ is just the vertical offset $b$ of the line).\r\n                </div>\r\n                <div>\r\n                    Great, we have shown that what we learnt makes sense and can be applied without much thought required. We could even plot the solutions \r\n                    using a library that can plot the null space of the algebraic equations implicitly.\r\n                </div>\r\n                <h5>Intersecting Elliptic Curves</h5>\r\n                <div>\r\n                    To be continued.\r\n                </div>\r\n            </div>\r\n            <h4>Conclusion</h4>\r\n            <div>\r\n                We have learnt how to represent arbitrary polynomials using GA and that intersection and joining them works and makes sense. \r\n                There are some other things that we could explore. For example nothing stops us from using more complicated up functions than \r\n                polynomials and there is no reason they should not make sense anymore.\r\n            </div>\r\n            <div>\r\n                The major thing we are still missing are operations on objects such as rotation and translation for which we want rotors. \r\n                For these the metric and whether we use a dual representation or not will actually matter. That will be the topic of the next section.\r\n            </div>\r\n            <h4><Link to=\"/ga-design-2\">Next: Design of Geometric Algebras - Part 2</Link></h4>\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport { hydrate, render } from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nfunction getApp() {\n    return (\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    )\n}\n\nconst rootElement = document.getElementById(\"root\")\nif (rootElement) {\n    if (rootElement.hasChildNodes()) {\n        hydrate(getApp(), rootElement)\n    } else {\n        render(getApp(), rootElement)\n    }\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA \nserviceWorker.unregister()\n","export const codeRenderPoint = `// Render point at x=10, y=-60\r\nrenderPointGA({ e0: 10, e1: -60 })\r\n\r\n// Render point at x=-50, y=80\r\nrenderPointGA({ e0: -50, e1: 80 }, \"red\")`\r\n\r\nexport const codeSquareBasisVectors = `var exSquared = ga.geometricProduct({ e0: 1 }, { e0: 1 })\r\nvar eySquared = ga.geometricProduct({ e1: 1 }, { e1: 1 })\r\n\r\nlog(\"e0^2:\", exSquared)\r\nlog(\"e1^2:\", eySquared)`\r\n\r\nexport const codeExteriorProduct = `var exEy = ga.geometricProduct({ e0: 1 }, { e1: 1 })\r\nvar eyEx = ga.geometricProduct({ e1: 1 }, { e0: 1 })\r\n\r\nlog(\"e0 e1:\", exEy)\r\nlog(\"e1 e0:\", eyEx)`\r\n\r\nexport const codeAntiCommute = `var exEy = ga.geometricProduct({ e0: 1 }, { e1: 1 })\r\nvar exEyEx = ga.geometricProduct(exEy, { e0: 1 })\r\n\r\nlog(\"e0 e1 e0:\", exEyEx)`\r\n\r\nexport const codeSquareBivector = `var exEy = { e01: 1 }\r\nvar exEySquared = ga.geometricProduct(exEy, exEy)\r\n\r\nlog(\"e01^2\", exEySquared)`\r\n\r\nexport const codeRotate2DOrientation = `var eXy = { e01: 1 }\r\nvar eYx = { e01: -1 } // e_yx = -e_xy\r\n\r\nvar p = { e0: 70, e1: 0 }\r\n\r\nvar a = ga.geometricProduct(eXy, p)\r\nvar b = ga.geometricProduct(eYx, p)\r\n\r\nrenderPointGA(p)\r\nrenderPointGA(a, \"red\")\r\nrenderPointGA(b, \"blue\")\r\n`\r\n\r\nexport const codeRotate2D = `var phi = Math.PI * 3 / 4 // 135°\r\n\r\n// e^(phi e_{yx}) = e^(-phi e_{xy})\r\nvar r = ga.exponential({ e01: -phi })\r\n\r\nvar p = { e0: 70, e1: 0 }\r\n\r\n// p rotated by 135° counter-clockwise\r\nvar rotatedP = ga.geometricProduct(r, p)\r\n\r\nrenderPointGA(p)\r\nrenderPointGA(rotatedP, \"red\")\r\nrenderInfo(ga.repr(rotatedP), \"red\")`\r\n\r\nexport const codeGeneralRotor2D = `var phi = Math.PI * 3 / 4 // 135°\r\n\r\n// e^(phi/2 e_{yx}) = e^(-phi/2 e_{xy})\r\n// Only half the angle required with sandwich product\r\nvar r = ga.exponential({ e01: -phi / 2 })\r\n\r\nvar p = { e0: 70, e1: 0 }\r\n\r\n// R p ~R (sandwich product)\r\n// p rotated by 135° counter-clockwise\r\nvar rotatedP = ga.geometricProduct(\r\n    r,\r\n    ga.geometricProduct(p, ga.reversion(r)) \r\n)\r\n\r\nrenderPointGA(p)\r\nrenderPointGA(rotatedP, \"red\")\r\nrenderInfo(ga.repr(rotatedP), \"red\")`\r\n\r\nexport const codeGeneralRotor3D = `var phi = Math.PI * 3 / 4 // 135°\r\nvar theta = Math.PI / 2 // 90°\r\n\r\n// CCW XZ rotation by phi\r\nvar r1 = ga3d.exponential({ e02: -phi / 2 })\r\n\r\n// CCW XY rotation by theta\r\nvar r2 = ga3d.exponential({ e01: -theta / 2 })\r\n\r\n// Compose XY and XZ rotation\r\nvar r = ga3d.geometricProduct(r2, r1)\r\n\r\nvar p = { e0: 70, e1: 0, e2: 0 }\r\n\r\n// p first rotated by phi in XZ, then by theta in XY\r\nvar rotatedP = ga3d.geometricProduct(\r\n    r,\r\n    ga3d.geometricProduct(p, ga3d.reversion(r))\r\n)\r\n\r\nlog(\"Rotated P:\", rotatedP)`\r\n\r\nexport const codeReversionIdentity = `var phi = Math.PI * 3 / 4 // 135°\r\nvar theta = Math.PI / 2 // 90°\r\n\r\nvar r1 = ga3d.exponential({ e02: -phi / 2 })\r\nvar r2 = ga3d.exponential({ e01: -theta / 2 })\r\n\r\n// Compose XY and XZ rotation\r\nvar r = ga3d.geometricProduct(r2, r1)\r\n\r\nvar p = { e0: 70, e1: 0, e2: 0 }\r\n\r\n// (R ~R) p (R ~P)\r\nvar q = ga3d.sandwichProduct(\r\n    p,\r\n    ga3d.geometricProduct(r, ga3d.reversion(r))\r\n)\r\n\r\nlog(\"q:\", q)`"],"sourceRoot":""}