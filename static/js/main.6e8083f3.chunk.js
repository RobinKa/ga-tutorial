(this["webpackJsonptyped-ga-ghpages"]=this["webpackJsonptyped-ga-ghpages"]||[]).push([[0],{12:function(e,_,t){"use strict";t.d(_,"f",(function(){return i})),t.d(_,"g",(function(){return r})),t.d(_,"d",(function(){return a})),t.d(_,"e",(function(){return o})),t.d(_,"c",(function(){return n})),t.d(_,"a",(function(){return s})),t.d(_,"b",(function(){return c}));var i='// Render a point at x: 40, y: 60\nrenderPointPGA({\n    e02: -40, // -e_0y = e_y0\n    e01: 60,\n    e12: 1\n}, "lime")\n\n// Render a point at x: 20, y: 30\n// Point coordinates divided by e_xy part\nrenderPointPGA({\n    e02: -40,\n    e01: 60,\n    e12: 2\n}, "red")',r='var p = {\n    e02: -40,\n    e01: 60,\n    e12: 1\n}\n\n// Translator that moves by 80 along X.\n// Same as exp(d/2 e_0y).\nvar t = {\n    scalar: 1,\n    e01: 40\n}\n\nvar q = pga.sandwichProduct(p, t)\n\nrenderPointPGA(p, "lime")\nrenderPointPGA(q, "red")',a='var p = {\n    e02: -40,\n    e01: 60,\n    e12: 1\n}\n\nvar t = pga.exponential({\n    e01: 40\n})\n\nvar r = pga.exponential({\n    // 90\xb0/2; e_yx = -e_xy\n    e12: -Math.PI / 4\n})\n\nvar m = pga.geometricProduct(r, t)\n\nvar q = pga.sandwichProduct(p, m)\n\nrenderPointPGA(p, "lime")\nrenderPointPGA(q, "red")',o='var t = pga.exponential({\n    e01: 40\n})\n\nvar r = pga.exponential({\n    e12: -Math.PI / 8\n})\n\n// Translate -80 in X, then rotate 45\xb0 CCW\nvar m = pga.geometricProduct(r, t)\n\n// Identity motor to visualize the initial box\n// at the origin\nvar identity = { scalar: 1 }\n\nrenderBoxPGA(identity, "lime")\nrenderBoxPGA(m, "red")',n='var a1 = {\n    e01: 40,\n    e02: 30\n}\n\nvar a2 = {\n    e01: -40,\n    e02: -10,\n    e12: -Math.PI / 6\n}\n\nvar m1 = pga.exponential(a1)\nvar m2 = pga.exponential(a2)\n\nrenderBoxPGA(m1, "black")\nrenderBoxPGA(m2, "red")',s='var a1 = {\n    e01: 40,\n    e02: 30\n}\n\nvar a2 = {\n    e01: -40,\n    e02: -10,\n    e12: -Math.PI / 6\n}\n\nfor (var alpha = 0; alpha <= 1; alpha += 0.1) {\n    var m = pga.exponential(pga.add(\n        pga.geometricProduct(a1, { scalar: 1 - alpha }),\n        pga.geometricProduct(a2, { scalar: alpha })\n    ))\n    var c = "rgb(" + (255 * alpha).toString() + ", 0, 0)"\n    renderBoxPGA(m, c)\n}',c='var m1 = { scalar: 1, e01: 20, e02: 40 }\nvar m2 = { scalar: 1, e01: -250, e12: -Math.PI * 1.3 }\n\nfunction motorLog(m) {\n    var divisor = Math.sqrt(\n        pga.geometricProduct(\n            m,\n            pga.reversion(m)\n        ).scalar\n    )\n    var allGrades = pga.div(m, divisor)\n    return {\n        e01: allGrades.e01,\n        e02: allGrades.e02,\n        e12: allGrades.e12\n    }\n}\n\nvar a1 = motorLog(m1)\nvar a2 = motorLog(m2)\nrenderInfo("a1: " + pga.repr(a1))\nrenderInfo("a2: " + pga.repr(a2))\n\nfor (var alpha = 0; alpha <= 1; alpha += 0.1) {\n    var m = pga.exponential(pga.add(\n        pga.geometricProduct(a1, { scalar: 1 - alpha }),\n        pga.geometricProduct(a2, { scalar: alpha })\n    ))\n    var c = "rgb(" + (255 * alpha).toString() + ", 0, 0)"\n    renderBoxPGA(m, c)\n}'},13:function(e,_,t){"use strict";t.d(_,"g",(function(){return a})),t.d(_,"d",(function(){return o})),t.d(_,"c",(function(){return n.a})),t.d(_,"f",(function(){return s.a})),t.d(_,"e",(function(){return c})),t.d(_,"a",(function(){return d.a})),t.d(_,"b",(function(){return l.a}));var i=t(0),r=(t(1),t(3));function a(){return Object(i.jsxs)("div",{children:[Object(i.jsx)("h3",{children:"Index"}),Object(i.jsx)("div",{children:"This tutorial tries to teach Geometric Algebra (GA) in an interactive way with runnable code and visualizations. It is not meant to be an entirely bottom-up way where we try to derive every single result. Instead the focus is on trying to create an understanding for GA and gradually introduce new things while directly applying the learnt concepts."}),Object(i.jsx)("h4",{children:"Sections"}),Object(i.jsxs)("ol",{children:[Object(i.jsx)("li",{children:Object(i.jsx)(r.b,{to:"/motivation",children:"Motivation"})}),Object(i.jsx)("li",{children:Object(i.jsx)(r.b,{to:"/ga-basics",children:"Geometric Algebra Basics"})}),Object(i.jsx)("li",{children:Object(i.jsx)(r.b,{to:"/pga",children:"Projective Geometric Algebra"})}),Object(i.jsx)("li",{children:Object(i.jsx)(r.b,{to:"/pga-geometry",children:"PGA Geometry"})}),Object(i.jsx)("li",{children:Object(i.jsx)(r.b,{to:"/ga-design-1",children:"Design of Geometric Algebras - Part 1"})}),Object(i.jsx)("li",{children:Object(i.jsx)(r.b,{to:"/ga-design-2",children:"Design of Geometric Algebras - Part 2"})})]})]})}function o(){return Object(i.jsxs)("div",{children:[Object(i.jsx)("h3",{children:"Motivation"}),Object(i.jsx)("h5",{children:"CoffeeShop Examples"}),Object(i.jsx)("div",{children:"The CoffeeShop is a website containing many examples making use of Geometric Algebra. Below I listed some interesting ones. After completing this tutorial we will be able to reproduce them."}),Object(i.jsxs)("ul",{children:[Object(i.jsx)("li",{children:Object(i.jsx)("a",{href:"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga3d_skinning",children:"Skinning (smooth blending)"})}),Object(i.jsx)("li",{children:Object(i.jsx)("a",{href:"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga3d_physics_symmetric_top",children:"Rigidbody physics with unified rotation and translation"})}),Object(i.jsx)("li",{children:Object(i.jsx)("a",{href:"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga2d_inverse_kinematics",children:"Inverse kinematics"})}),Object(i.jsx)("li",{children:Object(i.jsx)("a",{href:"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#pga2d_differentiation",children:"Automatic differentiation"})}),Object(i.jsx)("li",{children:Object(i.jsx)("a",{href:"https://enkimute.github.io/ganja.js/examples/coffeeshop.html#ga3d_rotor_estimation",children:"Rotor estimation between two point clouds"})})]}),Object(i.jsx)("h4",{children:Object(i.jsx)(r.b,{to:"/ga-basics",children:"Next: Geometric Algebra Basics"})})]})}var n=t(31),s=t(36);function c(){return Object(i.jsx)("div",{children:Object(i.jsx)("h4",{children:"Projective Geometric Algebra Geometry"})})}var d=t(37),l=t(38)},15:function(e,_,t){"use strict";t.d(_,"a",(function(){return r}));var i=t(0);t(1);function r(e){var _=e.id,t=e.title,r="https://enkimute.github.io/ganja.js/examples/coffeeshop.html#".concat(_);return Object(i.jsxs)("div",{children:[Object(i.jsx)("iframe",{src:"".concat(r,"&amp;fullscreen"),title:t,width:"100%",height:"600px",frameBorder:0}),Object(i.jsx)("sub",{children:Object(i.jsx)("a",{href:r,children:"Link to CoffeeShop with code"})})]})}},16:function(e,_,t){e.exports={"interactive-code":"InteractiveCode_interactive-code__1W_Ca","interactive-code-editor-with-viz":"InteractiveCode_interactive-code-editor-with-viz__3vc2f","interactive-code-editor-without-viz":"InteractiveCode_interactive-code-editor-without-viz__23QwE","interactive-code-viz":"InteractiveCode_interactive-code-viz__1atqK","interactive-code-output":"InteractiveCode_interactive-code-output__2M2TB"}},19:function(e,_,t){"use strict";t.r(_),t.d(_,"pointCoordinates",(function(){return c})),t.d(_,"PointElementPGA2D",(function(){return d})),t.d(_,"LineElementPGA2D",(function(){return l})),t.d(_,"SceneView",(function(){return h}));var i=t(10),r=t(1),a=t(0),o=t(43),n=t(21),s=t(20),c=function(e){var _=1/e.e12;return[-e.e02*_,e.e01*_]};function d(e){var _=e.point,t=e.radius,i=e.fill,c=e.label,d=e.trailCount,l=e.trailStroke,u=-_.e02/_.e12,h=_.e01/_.e12,v=Object(r.useState)([]),E=Object(n.a)(v,2),O=E[0],x=E[1],j=Object(r.useMemo)((function(){return O.flat().join(" ")}),[O]),P=Object(r.useCallback)((function(){if(d){if(0===O.length||O[O.length-1][0]!==u||O[O.length-1][1]!==h){var e=Object(o.a)(O);e.length>d&&(e=e.slice(1)),e.push([u,h]),x(e)}}else x([])}),[u,h,O,d]);return Object(r.useEffect)(P,[u,h]),Object(a.jsxs)("g",{children:[Object(a.jsx)("title",{children:s.repr(_)}),O.length>0&&Object(a.jsx)("polyline",{fill:"none",stroke:l||"#F37121",strokeWidth:.5*(t||1),points:j}),Object(a.jsx)("circle",{cx:u,cy:-h,r:t||1,fill:i||"#F37121",stroke:"white"}),c&&Object(a.jsx)("text",{x:u,y:-h,dominantBaseline:"middle",fontWeight:"800",textAnchor:"middle",fontSize:t||1,children:c})]})}function l(e){var _=e.line,t=e.width,i=e.stroke,o=e.label,n=Object(r.useMemo)((function(){if(Math.abs(_.e2)>Math.abs(_.e1)){return[-100,-(-100*_.e1+_.e0)/_.e2,100,-(100*_.e1+_.e0)/_.e2]}return[-(-100*_.e2+_.e0)/_.e1,-100,-(100*_.e2+_.e0)/_.e1,100]}),[_]);return Object(a.jsxs)("g",{children:[Object(a.jsx)("title",{children:s.repr(_)}),Object(a.jsx)("line",{x1:n[0],y1:-n[1],x2:n[2],y2:-n[3],strokeWidth:t||1,stroke:i||"#F37121"}),o&&Object(a.jsx)("text",{x:(n[0]+n[2])/2,y:-.5*(n[1]+n[3]),dominantBaseline:"middle",fontWeight:"800",textAnchor:"middle",fontSize:1,children:o})]})}function u(){for(var e=[],_=[],t=-10;t<=10;t++)e.push(t),_.push(t);var i=Object(r.useCallback)((function(e){return 0===e?1:e%5===0?.5:.25}),[]);return Object(a.jsxs)("g",{children:[Object(a.jsx)("g",{children:_.map((function(e){return Object(a.jsxs)("g",{children:[Object(a.jsx)("line",{x1:10*e,x2:10*e,y1:100,y2:-100,stroke:"#CCCCCC",strokeWidth:i(e)}),e%2===0&&0!==e&&Object(a.jsx)("text",{x:10*e,y:-2,fill:"white",fontSize:5,textAnchor:"middle",children:"".concat((10*e).toFixed(0))})]},e)}))}),Object(a.jsx)("g",{children:e.map((function(e){return Object(a.jsxs)("g",{children:[Object(a.jsx)("line",{x1:-100,x2:100,y1:10*-e,y2:10*-e,stroke:"#CCCCCC",strokeWidth:i(e)}),e%2===0&&Object(a.jsx)("text",{x:5,y:-(10*e+2),fill:"white",fontSize:5,textAnchor:"middle",children:"".concat((10*e).toFixed(0))})]},e)}))})]})}function h(e){var _=e.scene,t=e.style;return Object(a.jsxs)("svg",{viewBox:"0 0 100 100",preserveAspectRatio:"xMinYMin slice",style:t,children:[Object(a.jsx)("rect",{fill:"#111D6E",width:"100%",height:"100%"}),Object(a.jsxs)("g",{transform:"translate(50, 50) scale(0.5)",children:[Object(a.jsx)(u,{}),_.lines&&_.lines.map((function(e,_){return Object(r.createElement)(l,Object(i.a)(Object(i.a)({},e),{},{key:_}))})),_.points&&_.points.map((function(e,_){return Object(r.createElement)(d,Object(i.a)(Object(i.a)({},e),{},{key:_}))}))]}),_.infos&&_.infos.map((function(e,_){return Object(a.jsx)("text",{fontWeight:"100",x:1,y:5+5*_,fontSize:e.fontSize||1,fill:e.color||"white",children:e.text},_)}))]})}},20:function(e,_,t){"use strict";t.r(_),t.d(_,"add",(function(){return i})),t.d(_,"sub",(function(){return r})),t.d(_,"dual",(function(){return a})),t.d(_,"geometricProduct",(function(){return o})),t.d(_,"innerProduct",(function(){return n})),t.d(_,"exteriorProduct",(function(){return s})),t.d(_,"multiply",(function(){return c})),t.d(_,"div",(function(){return d})),t.d(_,"reversion",(function(){return l})),t.d(_,"repr",(function(){return u})),t.d(_,"regressiveProduct",(function(){return h})),t.d(_,"sandwichProduct",(function(){return v})),t.d(_,"commutatorProduct",(function(){return E})),t.d(_,"exponential",(function(){return O}));var i=function(e,_){return{scalar:void 0!==e.scalar||void 0!==_.scalar?(e.scalar||0)+(_.scalar||0):void 0,e0:void 0!==e.e0||void 0!==_.e0?(e.e0||0)+(_.e0||0):void 0,e1:void 0!==e.e1||void 0!==_.e1?(e.e1||0)+(_.e1||0):void 0,e2:void 0!==e.e2||void 0!==_.e2?(e.e2||0)+(_.e2||0):void 0,e01:void 0!==e.e01||void 0!==_.e01?(e.e01||0)+(_.e01||0):void 0,e02:void 0!==e.e02||void 0!==_.e02?(e.e02||0)+(_.e02||0):void 0,e12:void 0!==e.e12||void 0!==_.e12?(e.e12||0)+(_.e12||0):void 0,e012:void 0!==e.e012||void 0!==_.e012?(e.e012||0)+(_.e012||0):void 0}},r=function(e,_){return{scalar:void 0!==e.scalar||void 0!==_.scalar?(e.scalar||0)-(_.scalar||0):void 0,e0:void 0!==e.e0||void 0!==_.e0?(e.e0||0)-(_.e0||0):void 0,e1:void 0!==e.e1||void 0!==_.e1?(e.e1||0)-(_.e1||0):void 0,e2:void 0!==e.e2||void 0!==_.e2?(e.e2||0)-(_.e2||0):void 0,e01:void 0!==e.e01||void 0!==_.e01?(e.e01||0)-(_.e01||0):void 0,e02:void 0!==e.e02||void 0!==_.e02?(e.e02||0)-(_.e02||0):void 0,e12:void 0!==e.e12||void 0!==_.e12?(e.e12||0)-(_.e12||0):void 0,e012:void 0!==e.e012||void 0!==_.e012?(e.e012||0)-(_.e012||0):void 0}},a=function(e){return{scalar:void 0!==e.e012?1*e.e012:void 0,e0:void 0!==e.e12?1*e.e12:void 0,e1:void 0!==e.e02?-1*e.e02:void 0,e2:void 0!==e.e01?1*e.e01:void 0,e01:void 0!==e.e2?1*e.e2:void 0,e02:void 0!==e.e1?-1*e.e1:void 0,e12:void 0!==e.e0?1*e.e0:void 0,e012:void 0!==e.scalar?1*e.scalar:void 0}},o=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar,r=void 0!==e.e1&&void 0!==_.e1,a=void 0!==e.e2&&void 0!==_.e2,o=void 0!==e.e12&&void 0!==_.e12;(i||r||a||o)&&(t=0,i&&(t+=e.scalar*_.scalar*1),r&&(t+=e.e1*_.e1*1),a&&(t+=e.e2*_.e2*1),o&&(t+=e.e12*_.e12*-1));var n=void 0,s=void 0!==e.scalar&&void 0!==_.e0,c=void 0!==e.e0&&void 0!==_.scalar,d=void 0!==e.e1&&void 0!==_.e01,l=void 0!==e.e2&&void 0!==_.e02,u=void 0!==e.e01&&void 0!==_.e1,h=void 0!==e.e02&&void 0!==_.e2,v=void 0!==e.e12&&void 0!==_.e012,E=void 0!==e.e012&&void 0!==_.e12;(s||c||d||l||u||h||v||E)&&(n=0,s&&(n+=e.scalar*_.e0*1),c&&(n+=e.e0*_.scalar*1),d&&(n+=e.e1*_.e01*-1),l&&(n+=e.e2*_.e02*-1),u&&(n+=e.e01*_.e1*1),h&&(n+=e.e02*_.e2*1),v&&(n+=e.e12*_.e012*-1),E&&(n+=e.e012*_.e12*-1));var O=void 0,x=void 0!==e.scalar&&void 0!==_.e1,j=void 0!==e.e1&&void 0!==_.scalar,P=void 0!==e.e2&&void 0!==_.e12,b=void 0!==e.e12&&void 0!==_.e2;(x||j||P||b)&&(O=0,x&&(O+=e.scalar*_.e1*1),j&&(O+=e.e1*_.scalar*1),P&&(O+=e.e2*_.e12*-1),b&&(O+=e.e12*_.e2*1));var m=void 0,M=void 0!==e.scalar&&void 0!==_.e2,p=void 0!==e.e1&&void 0!==_.e12,D=void 0!==e.e2&&void 0!==_.scalar,f=void 0!==e.e12&&void 0!==_.e1;(M||p||D||f)&&(m=0,M&&(m+=e.scalar*_.e2*1),p&&(m+=e.e1*_.e12*1),D&&(m+=e.e2*_.scalar*1),f&&(m+=e.e12*_.e1*-1));var g=void 0,w=void 0!==e.scalar&&void 0!==_.e01,A=void 0!==e.e0&&void 0!==_.e1,C=void 0!==e.e1&&void 0!==_.e0,y=void 0!==e.e2&&void 0!==_.e012,T=void 0!==e.e01&&void 0!==_.scalar,I=void 0!==e.e02&&void 0!==_.e12,R=void 0!==e.e12&&void 0!==_.e02,W=void 0!==e.e012&&void 0!==_.e2;(w||A||C||y||T||I||R||W)&&(g=0,w&&(g+=e.scalar*_.e01*1),A&&(g+=e.e0*_.e1*1),C&&(g+=e.e1*_.e0*-1),y&&(g+=e.e2*_.e012*1),T&&(g+=e.e01*_.scalar*1),I&&(g+=e.e02*_.e12*-1),R&&(g+=e.e12*_.e02*1),W&&(g+=e.e012*_.e2*1));var B=void 0,L=void 0!==e.scalar&&void 0!==_.e02,U=void 0!==e.e0&&void 0!==_.e2,K=void 0!==e.e1&&void 0!==_.e012,$=void 0!==e.e2&&void 0!==_.e0,k=void 0!==e.e01&&void 0!==_.e12,q=void 0!==e.e02&&void 0!==_.scalar,G=void 0!==e.e12&&void 0!==_.e01,S=void 0!==e.e012&&void 0!==_.e1;(L||U||K||$||k||q||G||S)&&(B=0,L&&(B+=e.scalar*_.e02*1),U&&(B+=e.e0*_.e2*1),K&&(B+=e.e1*_.e012*-1),$&&(B+=e.e2*_.e0*-1),k&&(B+=e.e01*_.e12*1),q&&(B+=e.e02*_.scalar*1),G&&(B+=e.e12*_.e01*-1),S&&(B+=e.e012*_.e1*-1));var F=void 0,z=void 0!==e.scalar&&void 0!==_.e12,N=void 0!==e.e1&&void 0!==_.e2,V=void 0!==e.e2&&void 0!==_.e1,X=void 0!==e.e12&&void 0!==_.scalar;(z||N||V||X)&&(F=0,z&&(F+=e.scalar*_.e12*1),N&&(F+=e.e1*_.e2*1),V&&(F+=e.e2*_.e1*-1),X&&(F+=e.e12*_.scalar*1));var J=void 0,H=void 0!==e.scalar&&void 0!==_.e012,Y=void 0!==e.e0&&void 0!==_.e12,Z=void 0!==e.e1&&void 0!==_.e02,Q=void 0!==e.e2&&void 0!==_.e01,ee=void 0!==e.e01&&void 0!==_.e2,_e=void 0!==e.e02&&void 0!==_.e1,te=void 0!==e.e12&&void 0!==_.e0,ie=void 0!==e.e012&&void 0!==_.scalar;return(H||Y||Z||Q||ee||_e||te||ie)&&(J=0,H&&(J+=e.scalar*_.e012*1),Y&&(J+=e.e0*_.e12*1),Z&&(J+=e.e1*_.e02*-1),Q&&(J+=e.e2*_.e01*1),ee&&(J+=e.e01*_.e2*1),_e&&(J+=e.e02*_.e1*-1),te&&(J+=e.e12*_.e0*1),ie&&(J+=e.e012*_.scalar*1)),{scalar:t,e0:n,e1:O,e2:m,e01:g,e02:B,e12:F,e012:J}},n=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar,r=void 0!==e.e1&&void 0!==_.e1,a=void 0!==e.e2&&void 0!==_.e2,o=void 0!==e.e12&&void 0!==_.e12;(i||r||a||o)&&(t=0,i&&(t+=e.scalar*_.scalar*1),r&&(t+=e.e1*_.e1*1),a&&(t+=e.e2*_.e2*1),o&&(t+=e.e12*_.e12*-1));var n=void 0,s=void 0!==e.scalar&&void 0!==_.e0,c=void 0!==e.e0&&void 0!==_.scalar,d=void 0!==e.e1&&void 0!==_.e01,l=void 0!==e.e2&&void 0!==_.e02,u=void 0!==e.e01&&void 0!==_.e1,h=void 0!==e.e02&&void 0!==_.e2,v=void 0!==e.e12&&void 0!==_.e012,E=void 0!==e.e012&&void 0!==_.e12;(s||c||d||l||u||h||v||E)&&(n=0,s&&(n+=e.scalar*_.e0*1),c&&(n+=e.e0*_.scalar*1),d&&(n+=e.e1*_.e01*-1),l&&(n+=e.e2*_.e02*-1),u&&(n+=e.e01*_.e1*1),h&&(n+=e.e02*_.e2*1),v&&(n+=e.e12*_.e012*-1),E&&(n+=e.e012*_.e12*-1));var O=void 0,x=void 0!==e.scalar&&void 0!==_.e1,j=void 0!==e.e1&&void 0!==_.scalar,P=void 0!==e.e2&&void 0!==_.e12,b=void 0!==e.e12&&void 0!==_.e2;(x||j||P||b)&&(O=0,x&&(O+=e.scalar*_.e1*1),j&&(O+=e.e1*_.scalar*1),P&&(O+=e.e2*_.e12*-1),b&&(O+=e.e12*_.e2*1));var m=void 0,M=void 0!==e.scalar&&void 0!==_.e2,p=void 0!==e.e1&&void 0!==_.e12,D=void 0!==e.e2&&void 0!==_.scalar,f=void 0!==e.e12&&void 0!==_.e1;(M||p||D||f)&&(m=0,M&&(m+=e.scalar*_.e2*1),p&&(m+=e.e1*_.e12*1),D&&(m+=e.e2*_.scalar*1),f&&(m+=e.e12*_.e1*-1));var g=void 0,w=void 0!==e.scalar&&void 0!==_.e01,A=void 0!==e.e2&&void 0!==_.e012,C=void 0!==e.e01&&void 0!==_.scalar,y=void 0!==e.e012&&void 0!==_.e2;(w||A||C||y)&&(g=0,w&&(g+=e.scalar*_.e01*1),A&&(g+=e.e2*_.e012*1),C&&(g+=e.e01*_.scalar*1),y&&(g+=e.e012*_.e2*1));var T=void 0,I=void 0!==e.scalar&&void 0!==_.e02,R=void 0!==e.e1&&void 0!==_.e012,W=void 0!==e.e02&&void 0!==_.scalar,B=void 0!==e.e012&&void 0!==_.e1;(I||R||W||B)&&(T=0,I&&(T+=e.scalar*_.e02*1),R&&(T+=e.e1*_.e012*-1),W&&(T+=e.e02*_.scalar*1),B&&(T+=e.e012*_.e1*-1));var L=void 0,U=void 0!==e.scalar&&void 0!==_.e12,K=void 0!==e.e12&&void 0!==_.scalar;(U||K)&&(L=0,U&&(L+=e.scalar*_.e12*1),K&&(L+=e.e12*_.scalar*1));var $=void 0,k=void 0!==e.scalar&&void 0!==_.e012,q=void 0!==e.e012&&void 0!==_.scalar;return(k||q)&&($=0,k&&($+=e.scalar*_.e012*1),q&&($+=e.e012*_.scalar*1)),{scalar:t,e0:n,e1:O,e2:m,e01:g,e02:T,e12:L,e012:$}},s=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar;i&&(t=0,i&&(t+=e.scalar*_.scalar*1));var r=void 0,a=void 0!==e.scalar&&void 0!==_.e0,o=void 0!==e.e0&&void 0!==_.scalar;(a||o)&&(r=0,a&&(r+=e.scalar*_.e0*1),o&&(r+=e.e0*_.scalar*1));var n=void 0,s=void 0!==e.scalar&&void 0!==_.e1,c=void 0!==e.e1&&void 0!==_.scalar;(s||c)&&(n=0,s&&(n+=e.scalar*_.e1*1),c&&(n+=e.e1*_.scalar*1));var d=void 0,l=void 0!==e.scalar&&void 0!==_.e2,u=void 0!==e.e2&&void 0!==_.scalar;(l||u)&&(d=0,l&&(d+=e.scalar*_.e2*1),u&&(d+=e.e2*_.scalar*1));var h=void 0,v=void 0!==e.scalar&&void 0!==_.e01,E=void 0!==e.e0&&void 0!==_.e1,O=void 0!==e.e1&&void 0!==_.e0,x=void 0!==e.e01&&void 0!==_.scalar;(v||E||O||x)&&(h=0,v&&(h+=e.scalar*_.e01*1),E&&(h+=e.e0*_.e1*1),O&&(h+=e.e1*_.e0*-1),x&&(h+=e.e01*_.scalar*1));var j=void 0,P=void 0!==e.scalar&&void 0!==_.e02,b=void 0!==e.e0&&void 0!==_.e2,m=void 0!==e.e2&&void 0!==_.e0,M=void 0!==e.e02&&void 0!==_.scalar;(P||b||m||M)&&(j=0,P&&(j+=e.scalar*_.e02*1),b&&(j+=e.e0*_.e2*1),m&&(j+=e.e2*_.e0*-1),M&&(j+=e.e02*_.scalar*1));var p=void 0,D=void 0!==e.scalar&&void 0!==_.e12,f=void 0!==e.e1&&void 0!==_.e2,g=void 0!==e.e2&&void 0!==_.e1,w=void 0!==e.e12&&void 0!==_.scalar;(D||f||g||w)&&(p=0,D&&(p+=e.scalar*_.e12*1),f&&(p+=e.e1*_.e2*1),g&&(p+=e.e2*_.e1*-1),w&&(p+=e.e12*_.scalar*1));var A=void 0,C=void 0!==e.scalar&&void 0!==_.e012,y=void 0!==e.e0&&void 0!==_.e12,T=void 0!==e.e1&&void 0!==_.e02,I=void 0!==e.e2&&void 0!==_.e01,R=void 0!==e.e01&&void 0!==_.e2,W=void 0!==e.e02&&void 0!==_.e1,B=void 0!==e.e12&&void 0!==_.e0,L=void 0!==e.e012&&void 0!==_.scalar;return(C||y||T||I||R||W||B||L)&&(A=0,C&&(A+=e.scalar*_.e012*1),y&&(A+=e.e0*_.e12*1),T&&(A+=e.e1*_.e02*-1),I&&(A+=e.e2*_.e01*1),R&&(A+=e.e01*_.e2*1),W&&(A+=e.e02*_.e1*-1),B&&(A+=e.e12*_.e0*1),L&&(A+=e.e012*_.scalar*1)),{scalar:t,e0:r,e1:n,e2:d,e01:h,e02:j,e12:p,e012:A}},c=function(e,_){return{scalar:void 0!==e.scalar?e.scalar*_:void 0,e0:void 0!==e.e0?e.e0*_:void 0,e1:void 0!==e.e1?e.e1*_:void 0,e2:void 0!==e.e2?e.e2*_:void 0,e01:void 0!==e.e01?e.e01*_:void 0,e02:void 0!==e.e02?e.e02*_:void 0,e12:void 0!==e.e12?e.e12*_:void 0,e012:void 0!==e.e012?e.e012*_:void 0}},d=function(e,_){return{scalar:void 0!==e.scalar?e.scalar/_:void 0,e0:void 0!==e.e0?e.e0/_:void 0,e1:void 0!==e.e1?e.e1/_:void 0,e2:void 0!==e.e2?e.e2/_:void 0,e01:void 0!==e.e01?e.e01/_:void 0,e02:void 0!==e.e02?e.e02/_:void 0,e12:void 0!==e.e12?e.e12/_:void 0,e012:void 0!==e.e012?e.e012/_:void 0}},l=function(e){return{scalar:e.scalar&&e.scalar,e0:e.e0&&e.e0,e1:e.e1&&e.e1,e2:e.e2&&e.e2,e01:e.e01&&-e.e01,e02:e.e02&&-e.e02,e12:e.e12&&-e.e12,e012:e.e012&&-e.e012}},u=function(e){var _=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,t="";return void 0!==e.scalar&&(t+=""===t?e.scalar.toFixed(_)+"":e.scalar>=0?" + "+e.scalar.toFixed(_):" - "+Math.abs(e.scalar).toFixed(_)),void 0!==e.e0&&(t+=""===t?e.e0.toFixed(_)+"e0":e.e0>=0?" + "+e.e0.toFixed(_)+"e0":" - "+Math.abs(e.e0).toFixed(_)+"e0"),void 0!==e.e1&&(t+=""===t?e.e1.toFixed(_)+"e1":e.e1>=0?" + "+e.e1.toFixed(_)+"e1":" - "+Math.abs(e.e1).toFixed(_)+"e1"),void 0!==e.e2&&(t+=""===t?e.e2.toFixed(_)+"e2":e.e2>=0?" + "+e.e2.toFixed(_)+"e2":" - "+Math.abs(e.e2).toFixed(_)+"e2"),void 0!==e.e01&&(t+=""===t?e.e01.toFixed(_)+"e01":e.e01>=0?" + "+e.e01.toFixed(_)+"e01":" - "+Math.abs(e.e01).toFixed(_)+"e01"),void 0!==e.e02&&(t+=""===t?e.e02.toFixed(_)+"e02":e.e02>=0?" + "+e.e02.toFixed(_)+"e02":" - "+Math.abs(e.e02).toFixed(_)+"e02"),void 0!==e.e12&&(t+=""===t?e.e12.toFixed(_)+"e12":e.e12>=0?" + "+e.e12.toFixed(_)+"e12":" - "+Math.abs(e.e12).toFixed(_)+"e12"),void 0!==e.e012&&(t+=""===t?e.e012.toFixed(_)+"e012":e.e012>=0?" + "+e.e012.toFixed(_)+"e012":" - "+Math.abs(e.e012).toFixed(_)+"e012"),t},h=function(e,_){return a(s(a(e),a(_)))},v=function(e,_){return o(_,o(e,l(_)))},E=function(e,_){return c(r(o(e,_),o(_,e)),.5)},O=function(e){var _=o(e,e).scalar||0;if(_<0){var t=Math.sign(_)*Math.sqrt(Math.abs(_));return i({scalar:Math.cos(t)},c(e,Math.sin(t)/t))}if(_>0){var r=Math.sign(_)*Math.sqrt(Math.abs(_));return i({scalar:Math.cosh(r)},c(e,Math.sinh(r)/r))}return i({scalar:1},e)}},31:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return GATutorial}));var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),react_router_dom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(3),_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(5),_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(9);function GATutorial(){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){eval("if (MathJax && MathJax.typeset) MathJax.typeset();")}),[]),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Geometric Algebra Basics"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Usually introductions to GA begin by defining various rules and going over derivations before doing anything useful with them. I will also define some rules but try to get to the interesting stuff more quickly."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Vectors"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Like for the standard 2D vector algebra in GA we have two basis vectors $e_x, e_y$ using which arbitrary vectors $v = x e_x + y e_y$ can be formed. Below is some runnable and editable code that forms such vectors and then displays them as points. The basis vectors $e_x, e_y$ are labeled ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"e0"})," and ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"e1"})," in the code. We specify the non-zero coefficients for each basis vector when creating a new vector."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.e,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Geometric Product"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"The product which defines Geometric Algebra and is its most important aspect is called the Geometric Product. There are two useful rules for using the geometric product which will now be introduced."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Rule 1: Basis vectors square to +1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Multiplying two same basis vectors together with the geometric product will result in $+1$ (for now...) if they are the same.","\\begin{equation}\n                e_x e_x = 1, e_y e_y = 1\n                \\end{equation}","This is similar to how the dot product in standard vector algebra works. Let's verify these results with the code again, this time just logging some text instead of visualizing."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.i}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Rule 2: Different basis vectors anti-commute"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["What is new is that we can also multiply two different basis vectors and the result will not be zero, but instead can't be simplified further.","\\begin{equation}\n                e_x e_y = e_{xy}\n                \\end{equation}","$e_{xy}$"," here is just shorthand for the two basis vectors multiplied together. Such elements made up of two basis vectors are called bivectors."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Importantly the order of the product matters. A rule is that when you swap the factors of a product of basis vectors you pick up a minus sign. We say that the basis vectors anti-commute.","\\begin{equation}\n                e_{xy} = e_x e_y = -e_y e_x = -e_{yx}\n                \\end{equation}"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.b}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Practice"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Let's now use these two basic rules we just learnt and see what some results are when we use them:","\\begin{aligned}\n                e_x e_y e_x & = & \\text{(Rewrite as shorthand)} \\\\\n                e_{xyx} & = & \\text{(Swap neighbours on the right, pick up minus sign)} \\\\\n                -e_{xxy} & = & \\text{(Multiplying same basis vectors results in 1, e_xx = e_x e_x = 1)} \\\\\n                -e_y &\n                \\end{aligned}","We can verify these results with the code:"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.a}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Terminology"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Here's a list of some more terminology that is often used in GA"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Multivector"}),": any element of the algebra (eg. ","$1 + 2 e_x + 5 e_{xy}$",")"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Basis blade"}),": basis vectors and any combination of them (eg. in 2D we have four in total: ","$1, e_x, e_y, e_{xy}$",")"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Grade"}),": the degree of a multivector (eg. $1$ is grade $0$, $e_x$ is grade $1$, $e_x + 5 e_y$ it also grade $1$, ","$e_{xy}$"," is grade $2$)"]})]})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Rotors"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Squaring bivectors"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Now for something more interesting, let's see what happens if we square the bivector ","$e_{xy}$",", that is, multiplying it with itself:"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.j}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["\\begin{equation}\n                e_{xy}^2 = e_{xy} e_{xy} = e_{xyxy} = -e_{xyyx} = -e_{xx} = -1\n                \\end{equation}","We can see the square of the bivector ","$e_{xy}$"," is $-1$. This shows that such a bivector is very similar to the imaginary unit $i$ of complex numbers which was specifically introduced to square to $-1$. Here we didn't have to introduce anything new and we automatically had such an element in our algebra."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["There is still one caveat. While ","$e_{xy}$"," squares to $-1$, so does ","$e_{yx}$",". So which one do we use? Let's try to visualize what multiplying a vector does for both of them using ","$v' = e_{xy} v$"," and ","$v' = e_{yx} v$","."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.h,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["We can see that ","$e_{xy}$"," produces a clockwise (CW) rotation by 90\xb0 and ","$e_{yx}$"," produces a counter-clockwise (CCW) rotation by 90\xb0. We will stick with the CCW version using ","$e_{yx}$",". Instead of that to make a CCW rotation we could have also swapped the order of the product (","$v' = v e_{xy}$",") but using ","$e_{yx}$"," instead will allow us to follow the usual conventions later."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Rotating 2D vectors using rotors"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["As mentioned before ","$e_{yx}$"," can be identified as the imaginary unit $i$ of complex numbers hence we can represent complex numbers as ","$a + b e_{yx}$"," and a CCW rotation in the XY plane by an arbitrary angle $\\phi$ can be performed just like with complex numbers using ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://en.wikipedia.org/wiki/Euler%27s_formula",children:"Euler's formula"}),"\\begin{equation}\n                R(\\phi) = e^{\\phi e_{yx}} = cos(\\phi) + e_{yx} sin(\\phi)\n                \\end{equation}","The object $R$ you get after exponentiating is called a rotor (because it rotates when you multiply with it). Unlike with complex numbers now however, we can multiply a vector by a rotor directly instead of having to treat vectors as if they were complex numbers."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.g,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"\\begin{equation}\n                R(\\phi) v = (cos(\\phi) + e_{yx} sin(\\phi)) (x e_x + y e_y) =\n                e_x (x cos(\\phi) - y sin(\\phi)) + e_y (x sin(\\phi) + y cos(\\phi))\n                \\end{equation}"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Higher dimensions"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["It turns out that the two dimensional rotor application formula $v' = R v$ was slightly special. In the general case it is necessary to use a two sided product","\n                \\begin{equation}\n                v' = R v \\widetilde{R}\n                \\end{equation}\n                ","which is also called the sandwich product. ","$\\widetilde{R}$"," here stands for ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://en.wikipedia.org/wiki/Paravector#Reversion_conjugation",children:"reversion"})," of $R$ which just means reversing the order of all basis vectors. For example ","$e_{yx}$"," becomes ","$e_{xy}$",". As we already know from the second rule of the geometric product, such a change of order just produces a minus sign for the bivectors, so ","$\\widetilde{e_{yx}} = -e_{xy}$","."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Another thing that changes with the sandwich product is that we multiply with the rotor twice, so our rotor will only need to contain half of the rotation angle.","\n                \\begin{equation}\n                R(\\phi) = e^{e_{yx} \\frac{\\phi}{2}}\n                \\end{equation}\n                "]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"We can now verify that this will indeed give the same results in 2D as the simple one-sided product"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.c,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["In the three dimensional case, if we wanted to create a rotor that rotates in the XZ plane by $\\phi$ CCW our rotor would look like this:","\n                \\begin{equation}\n                R(\\phi) = e^{e_{zx} \\frac{\\phi}{2}}\n                \\end{equation}\n                ","We can then also combine rotations in different planes into a single rotor by multiplying them. A rotor that rotates by $\\phi$ CCW in the XZ plane followed by a rotation of $\\theta$ CCW in the XY plane looks like this","\n                \\begin{equation}\n                R(\\phi, \\theta) = e^{e_{yx} \\frac{\\theta}{2}} e^{e_{zx} \\frac{\\phi}{2}}\n                \\end{equation}\n                "]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.d,editorStyle:{height:350}}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["These elements that are like the 3D version of complex numbers are called ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://en.wikipedia.org/wiki/Quaternion",children:"quaternions"}),"."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"More on reversion"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Applying the reversion operation on a rotor reverses its effect, for example applying the reversion operation to a rotor that rotates by 90\xb0 CCW will make it rotate by 90\xb0 CW (ie. -90\xb0 CCW). A result of this is that a rotor multiplied by its reversal produces the identity ","$R \\widetilde{R} = 1$"," which does nothing when applied as demonstrated in the code below. Here we also make use of the ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"sandwichProduct()"})," function instead of writing the sandwich product using ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"geometricProduct()"})," and ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"reversion()"}),"."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_3__.a,{sourceCode:_CodeGATutorial__WEBPACK_IMPORTED_MODULE_4__.f,editorStyle:{height:300}}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Summary"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Geometric product rule 1"}),": basis vectors square to +1 (","$e_x e_x = e_{xx} = 1, e_y e_y = e_{yy} = 1$",")"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Geometric product rule 2"}),": different basis vectors anti-commute (","$e_x e_y = e_{xy} =  -e_{yx} = -e_y e_x$",")"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Rotor in XY plane rotating by $\\phi$ counter-clockwise"}),": ","$R(\\phi) = e^{\\phi e_{yx}} = cos(\\phi) + e_{yx} sin(\\phi)$"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Reversion"}),": reverse order of basis vectors (eg. ","$e_{xyz} = e_{zyx} = -e_{xyz}$","), inverts rotors"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Apply Rotor $R$ to $x$ using sandwich product"}),": ","$x' = R x \\widetilde{{R}}$"]})]})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Conclusion"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"In this section we introduced Geometric Algebra. We learnt the basic rules of the Geometric Product and how to work with them. We also learnt about rotors which generalize the rotations created by complex numbers to any dimension and also puts them directly in the context of vectors."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"In the next section we will learn how we can introduce translation in the rotors so we can do both translation and rotation using the same rotor and just one sandwich product. This will prove to have many advantages allow even further generalization."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.b,{to:"/pga",children:"Next: Projective Geometric Algebra"})})]})}},36:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return PGATutorial}));var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(5),_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(12),react_router_dom__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(3);function PGATutorial(){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){eval("if (MathJax && MathJax.typeset) MathJax.typeset();")}),[]),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Translations"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["So far we learnt how to do rotations using rotors. Another important operation is translation. Naively we could just use vector addition to achieve translation using some offset vector $d = d_x e_x + d_y e_y$","\\begin{equation}\n                v' = v + d\n                \\end{equation}","If we have two translation vectors $a$ and $b$ we can combine their action by adding them to get a single translation vector $d = a + b$. This all seems very obvious and straightforward."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["What if we wanted to do both translation and rotation? Using vector addition for translation and rotors for rotation our operation would look like this","\\begin{equation}\n                v' = R v \\widetilde{R} + d\n                \\end{equation}","Now if we wanted to compose two translations and rotations, we would have two rotors $R_1$ and $R_2$ and two translation vectors $d_1$ and $d_2$. First we would apply $R_1$ and $d_1$ according to the formula above. Then we would apply $R_2$ and $d_2$ on the result of the previous operation.","\\begin{aligned}\n                v' & = R_1 v \\widetilde{R_1} + d_1 \\\\\n                v'' & = R_2 v' \\widetilde{R_2} + d_2 = R_2 (R_1 v \\widetilde{R_1} + d_1) \\widetilde{R_2} + d_2\n                \\end{aligned}","We could multiply this out but we will get a lot of terms and the operations don't compose as nicely as they did when we had only rotations or translations. Is there a way we can do both rotation and translation with a single rotor? Projective Geometric Algebra (PGA) sets out to do this."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Projective Geometric Algebra"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"A new kind of basis vector"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["PGA starts with the familiar basis vectors that square to $+1$ and also adds another basis vector $e_0$ one that squares to $0$. In two dimensional PGA we thus have basis vectors $e_x$, $e_y$ and $e_0$. As a result there will also be three bivectors ","$e_{0x}, e_{0y}, e_{xy}$"," and one trivector ","$e_{0xy}$","."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"We will see that this strange additional basis vector allows us to encode both rotations and translations in a single rotor and also many more things we couldn't easily do before."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Points"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Another peculiarity of PGA is that points are not encoded as vectors $x e_x + y e_y$ anymore but as","\\begin{equation}\n                P = x e_{y0} + y e_{0x} + e_{xy}\n                \\end{equation}","In the code below we display some points like before but this time using 2D PGA. The vector $e_0$ is denoted by",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"e0"})," and $e_x, e_y$ as ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"e1"})," and ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"e2"}),"."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__.a,{sourceCode:_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__.f,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["In the code we can also see that the rendered point coordinate gets divided by the ","$e_{xy}$"," part of the multivector. Multiplying the multivector by a scalar thus won't have any effect on which point the multivector encodes as the final position gets divided by the ","$e_{xy}$"," part again which was also scaled by the same amount."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Translators"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"As promised this weird setup will allow us to perform translations using rotors. Rotors that only do translation are also called translators and we denote them by $T$."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Just like with the rotors we use the exponential function to generate translators from our algebra. A translator that moves by $d$ in the X direction is given by ","$T = e^{\\frac{d}{2} e_{0x}}$",". If we compare this to the point encoding we will notice that ","$e_{0x}$"," is the bivector related to the Y coordinate, so here the translators perform a translation that is orthogonal to the bivector's direction. As previously we will apply the translator using the sandwich product."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["This time to calculate the result of the exponential we can not make use of Euler's formula as it only applies to elements that square to $-1$ and the bivector ","$e_{0x}$"," squares to $0$. The equivalent of Euler's formula for elements squaring to $0$ is fortunately very simple","\\begin{equation}\n                T = e^{\\frac{d}{2} e_{0x}} = 1 + \\frac{d}{2} e_{0x}\n                \\end{equation}","so all we picked up was the additional scalar $1$."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__.a,{sourceCode:_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__.g,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Motors"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["We can also compose rotors and translators using multiplications. We call the resulting elements motors and denote them by $m$. For example a motor","\\begin{equation}\n                m = e^{\\frac{\\phi}{2} e_{yx}} e^{\\frac{d}{2} e_{0x}}\n                \\end{equation}","will first perform the translation of the previous example followed by a rotation around the origin in the XY plane by $\\phi$ CCW."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__.a,{sourceCode:_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__.d,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["So far we have only been visualizing single points. With points we can not observe the effect that rotation has besides how it affects the position of the points. To visualize the rotation we will look at how a set of points gets transformed instead, such as a box. When applying a rotor that rotates we would expect the box to also rotate. We will use the provided ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("code",{children:"renderBoxPGA()"})," function for this purpose. The way it works is that it takes four points that are offset relative to the origin and transforms them with the given motor."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__.a,{sourceCode:_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__.e,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Our motor here produces a CCW rotation of ","$\\frac{\\pi}{4}$"," (twice the amount written in the code) which indeed rotated our box by 45\xb0."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Motor interpolation"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"A very useful property of PGA is its ability to smoothly interpolate between motors. Previously if we had separate translation and rotation (eg. when using vector addition for translation and rotors for rotation) it was not clear how one would interpolate between two of such transformations."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Interpolating translations and vectors is easy, for example with linear interpolation. If we are given two vectors $v_1, v_2$ and a blending factor $\\alpha$ the interpolated vector $v(\\alpha)$ is given by","\\begin{equation}\n                v(v_1, v_2, \\alpha) = (1 - \\alpha) v_1 + \\alpha v_2\n                \\end{equation}"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Interpolating rotations and rotors is a bit trickier but still relatively common, for example using quaternions and ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://en.wikipedia.org/wiki/Slerp",children:"spherical linear interpolation"}),"."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"So how do we interpolate between two motors $m_1$ and $m_2$ such as in the following example?"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__.a,{sourceCode:_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__.c,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"With known exponents"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Thankfully our hard work of learning about motors will pay off here. Imagine we are given the exponents of two motors $m_1$ and $m_2$ which we denote by $a_1$ and $a_2$ (ie. ","$m_1 = e^{a_1}, m_2 = e^{a_2}$","). To get the interpolated motor $m(\\alpha)$ all we have to do is linearly interpolate between the exponents and then exponentiate","\\begin{equation}\n                m(\\alpha) = e^{(1 - \\alpha) a_1 + \\alpha a_2}\n                \\end{equation}"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__.a,{sourceCode:_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__.a,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"We can see the interpolation produces a curve. If we interpolated translation and rotation separately using linear interpolation we would have just gotten a straight line."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"With unknown exponents"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"What if we don't know the exponents of the motors? This would happen for example when we keep composing motors. A very practical example where that occurs is if we used a motor to describe the position and rotation of a rigidbody in a physics simulation."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Just like in usual algebra, we can take the logarithm of an exponential to get its exponent. The logarithm of a motor in 2D PGA is given by","\\begin{equation}\n                log(m) = \\langle \\frac{m}{||m||} \\rangle_2\n                \\end{equation}","where $||m||$ stands for the norm of the motor and $\\langle ... \\rangle_2$ stands for only keeping the grade $2$ parts (ie. all bivectors) of the result. $||m||$ can easily be calculated as ","$\\sqrt{m \\widetilde{m}}$"," which results in a scalar."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"In the code we just take the previous example but instead of given exponents $a_1, a_2$ we will calculate them from given motors using the logarithm."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_InteractiveCode__WEBPACK_IMPORTED_MODULE_2__.a,{sourceCode:_CodePGATutorial__WEBPACK_IMPORTED_MODULE_3__.b,hideOutput:!0,withVisualizer:!0}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Summary"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("ul",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"2D PGA basis vectors"}),": $e_0^2 = 0, e_x^2 = 1, e_y^2 = 1$"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Point at $(x, y)$"}),": ","$P = x e_{y0} + y e_{0x} + e_{xy}$"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Point coordinates $(x, y)$ from PGA point $P$"}),": ","$(X, Y) = \\frac{(P_{y0}, P_{x0})}{P_{xy}}$"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("b",{children:["Translator by $d$ orthogonal to Y direction ","$e_{0x}$"," (ie. along X direction)"]}),": ","$T = e^{\\frac{d}{2} e_{0x}}$"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Motor"}),": Rotor that both rotates and translates"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Motor logarithm"}),": ","$log(m) = \\langle \\frac{m}{||m||} \\rangle_2$"]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("li",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{children:"Interpolate between motors $m_1$ and $m_2$"}),": ","$m(m_1, m_2, \\alpha) = e^{(1 - \\alpha) log(m_1) + \\alpha log(m_2)}$"]})]})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Conclusion"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"In this section we learnt about PGA where we have a new basis vector $e_0$ which squares to $0$ and also a different encoding for our points. This enabled us to perform translations using rotors. A rotor which does rotation and translation is also called a motor. This also enabled us to interpolate smoothly between motors."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:'In the next section we will take a look at how PGA allows us to represent "flat" geometric objects such as lines and planes, and how it allows us to easily do many operations that would classically look very distinct. We will also learn about the concept of duality and how the geometric product decomposes into two separate parts.'}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.b,{to:"/pga-geometry",children:"Next: PGA Geometry"})})]})}},37:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return GADesign1}));var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),react_router_dom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(3),_CoffeeShop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(15);function GADesign1(){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){eval("if (MathJax && MathJax.typeset) MathJax.typeset();")}),[]),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Designing Geometric Algebras - Part 1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Typically we choose a Geometric Algebra that will work well with our problem. First there are the object types the different GAs can represent. If we want flat objects such as lines and planes going through the origin ordinary GA works. If we additionally want the objects to be at arbitrary positions PGA is a good choice. For spheres we can choose CGA which can directly represent them. Secondly we might need certain operations which also dictates our choice of GA. Ordinary GA has rotors that can do rotations only. With both PGA and CGA we get rotors which can do translation and rotation. Below is a table of a few already explored GAs and their properties.",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("table",{style:{width:"100%",padding:"2%"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"Name"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"Signature"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"Objects"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"Rotors"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Ordinary GA"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"N, 0, 0"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Flat (through origin)"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Rotation"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Projective Geometric Algebra"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"N, 0, 1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Flat"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Rotation, Translation"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Conformal Geometric Algebra"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"N+1, 1, 0"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Flat, Round"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Rotation, Translation"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://link.springer.com/article/10.1007/s00006-018-0879-2",children:"Conic Geometric Algebra"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"5, 3, 0"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Conics (2D)"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Rotation, Translation, Uniform scaling"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://www.researchgate.net/publication/324067465_Quadric_Conformal_Geometric_Algebra_of_mathbb_R96R96",children:"Quadric Geometric Algebra"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"9, 6, 0"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Quadrics (3D)"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Rotation, Translation, Uniform scaling"})]})]}),"So if what we need is contained in one of these we can simply use them and benefit from the previous exploration done within them. What if we need something that is not contained in one of these pre-made GAs though? Is there a way to create exactly what we need? In the first part of this article we will try to figure out how to create a GA that contains the objects we want. Specifically we will try to create a GA containing arbitrary polynomial shapes such as parabolas and ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://en.wikipedia.org/wiki/Elliptic_curve",children:"elliptic curves"}),". In the second part we will also look at the rotors."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"How are objects represented outside of GA?"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Before jumping into GA we should take a step back and remember how we represented objects in algebra before."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Usually we represent a 2D line by the linear equation $y = a x + b$, a circle at the origin by $x^2 + y^2 = r^2$ and so on. Rearranging this a bit to bring everything to the same side we get equivalently $ax + b - y = 0$ and $x^2 + y^2 - r^2 = 0$. The object is then represented by all the points $(x, y)$ for which these equations are true, that is, for which the left hand side evaluates to zero. We call this the null space or kernel of the function."})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Object representation in GA"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Now jumping to GA, in 2D PGA a point is represented by a bivector ","$x e_{0y} + y e_{x0} + 1 e_{xy}$"," and a line is represented by a vector ","$x e_x + y e_y - d e_0$",". Let's call the mapping for points the $up$  function:","\\begin{equation}\n                    up: \\mathbb{R}^N \\mapsto \\mathbb{Cl}(...)\n                    \\end{equation}","Here's a table of the previously mentioned algebras and their up functions. Note that some of these use a dual representation for points (points as pseudovectors) and some use the usual representation (points as vectors).",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("table",{style:{width:"100%",padding:"2%"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"Name"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"Up"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Ordinary GA"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"$x e_x + y e_y + z e_z + ...$"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Projective Geometric Algebra"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"$x e_x^* + y e_y^* + ... + 1 e_0^*$"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Conformal Geometric Algebra"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("td",{children:["$1 e_o + x e_x + y e_y + ... + \\frac",1,2," (x^2 + y^2 + ...) e_\\infty$"]})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Conic Geometric Algebra"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"$e_{o+} + x e_x + y e_y + \\frac{1}{2} (x^2 + y^2) e_{\\infty +} + \\frac{1}{2} (x^2 - y^2) e_{\\infty +} + x y e_{\\infty \\times}$"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Quadric Geometric Algebra"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"$x e_x + ... + \\frac{1}{2} (x^2 e_{\\infty 1} + ...) + x y e_{\\infty 4} + ... + 1 e_{o 1} + ... $"})]})]}),"How do we connect these representations to the usual null-space representation? There are two almost equivalent ways of doing this."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Inner Product Null Space Representation"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["The first one is the Inner Product Null Space (IPNS) representation. Here we say that the inner product of our object, let's call it $o$, is zero for an arbitrary point produced by our up function.","\\begin{equation}\n                    up(...) \\cdot o = 0\n                    \\end{equation}","The IPNS representation has the downside that we need to define a metric so the inner product works. This means that the representation depends on what our basis vectors square to. This also doesn't work for degenerate metrics such as the one used by PGA."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Outer Product Null Space Representation"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["The second representation is the Outer Product Null Space (OPNS) representation. Instead of the inner product we use the outer product which means we don't need to define a metric either and this will work the same regardless of what our basis vectors square to. We wedge our object $o$ with an arbitrary point produced by our up function.","\\begin{equation}\n                    up(...) \\wedge o = 0\n                    \\end{equation}","The intuition here is that if points are represented by vectors then $\\wedge$ represents the join operation. If we try to join a point that already lies on the object we get zero. Note that if we're using a dual representation (points as pseudovectors) then we need to use $\\vee$ instead as that is then the join operation (maybe a better name would then be the Vee Product Null Space (VPNS)?)."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"We will continue using OPNS from now on and apply it to recover more familiar equations for the objects."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Example: OPNS applied to PGA 2D"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Let's apply the OPNS equation to see what a vector in 2D PGA represents. For the arbitrary $X$ we need to use a pseudovector. The $up(x, y)$ function gives us a pseudovector (bivector in this case) so let's use it in place of $X$ and remember that we need to use $\\vee$ for dual representations.","\\begin{aligned}\n                    up(x, y) \\vee vector & = (x e_{0y} + y e_{x0} + 1 e_{xy}) \\vee (a e_x + b e_y + d e_0) \\\\\n                    & = a x + b y + d  \\\\\n                    & = a x + b y + d = 0\n                    \\end{aligned}","We have recovered the usual equation for a line. Unlike the previous one, this one also has a coefficient for $y$ which makes it possible to represent vertical lines (by setting $b = 0$ we get $a x = -d$). Hence the vectors in 2D PGA represent lines."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["What happens when we apply the OPNS to PGA points (pseudovectors, bivectors in 2D)?","\\begin{aligned}\n                    up(x, y) \\vee point & = (x e_{0y} + y e_{x0} + 1 e_{xy}) \\vee (a e_{0y} + b e_{x0} + c e_{xy}) \\\\\n                    & = b x e_0 + c x e_y - a y e_0 + c y e_x - a e_y - b e_x  \\\\\n                    & = e_y (c x - a) + e_x (c y - b) + e_0 (b x - a y)\n                    \\end{aligned}","We get three equations that have to vanish, only two of which are independent.","\\begin{aligned}\n                    & c x - a = 0 & \\implies x = \\frac{a}{c} \\\\\n                    & c y - b = 0 & \\implies y = \\frac{b}{c} \\\\\n                    & b x - a y = b \\frac{a}{c} - a y = 0 & \\implies y = \\frac{b}{c}\n                    \\end{aligned}","The coordinates we extract get divided by the ","$e_{xy}$"," part of the point. We automatically get homogeneous space and projective points just by defining the up function the way we did with the constant coefficient term ","$1 e_{xy}$","."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"As a final note, applying OPNS is like finding an inverse for the up function. For points it indeed gives the inverse mapping (ie. as if we just inverted the function directly) but the OPNS also generalizes it to apply to elements other than points in a consistent manner."})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Representing polynomials in GA"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Looking at how we arrived at the equation for a line from the OPNS equation we can see that the coefficients $a, b, d$ came from the object whose representation we're trying to understand, but the variables $x$, $y$ and $1$ (for $d$) came from how we defined the $up$ function. This means that if we wanted to represent different shapes we need to change the $up$ function."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["As an example, if we wanted to represent parabolas, we would need to have a basis vector that has $x^2$ as a coefficient in $up$. For example ","$up(x, y) = x^2 e_{0y} + y e_{x0} + 1 e_{xy}$","would give us $a x^2 + b y + d = 0$ after applying the OPNS equation."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Another interesting observation here is that we have a constant term in the polynomial which comes from the fact that we add a constant bivector ","$1 e_{xy}$","in the up function. This allows PGA to represent translated objects unlike ordinary GA which can only represent objects through the origin."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Furthermore the number of basis vectors is arbitrary. For each term we want we can simply add another basis vector with our desired coefficient. Finally as already mentioned before, the OPNS does not depend on the metric so the interpretation works regardless of what the basis vectors square to."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Example: Elliptic curves in GA"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Looking at the ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://en.wikipedia.org/wiki/Elliptic_curve",children:"Wikipedia article for elliptic curves"}),"we can find that the equation for an elliptic curve is $y^2 = x^3 + a x + b 1$. So to represent them we need 4 terms in our up function with coefficients $y^2, x^3, x, 1$. As a result we will need 4 basis vectors (with any signature).","\\begin{aligned}\n                up(x, y) & = x^3 e_1^* + y^2 e_2^* + x e_3^* + 1 e_4^* \\\\\n                & = x^3 e_{234} + y^2 e_{134} + x e_{124} + 1 e_{123}\n                \\end{aligned}","Vectors will now be able to represent elliptic curves as well as other simpler curves (parabolas, cubics, lines, ...). You can verify this by hand (or ideally using symbolic math software) by applying the OPNS equation to a vector as before in the 2D PGA example.",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CoffeeShop__WEBPACK_IMPORTED_MODULE_3__.a,{id:"aEncZBjgb",title:"Elliptic curves in GA"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Join and meet"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"If points are represented by vectors the join is $\\wedge$ and meet is $\\vee$. In algebras that uses a dual representation for points such as PGA this is swapped and join is $\\vee$ and meet is $\\wedge$."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Something interesting happens when we look at the meet operation which returns the intersection object of two objects. In PGA when we intersected two straight lines we get a single point (or point at infinity if the lines are parallel). However with more complicated curves such as parabolas or elliptic curves we will get more than one intersection point. For example intersecting a parabola with a line (assuming they intersect) will result in two points. However the representation for such a point pair is identical to the representation of a single point in PGA. The difference will only be visible once we apply the OPNS equation to find out what our object is actually representing."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Example: parabola at origin intersects horizontal line"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Let's apply what we have just learnt and look at some actual results to see if they make sense. We want to intersect a parabola at the origin of the form $y = a x^2$ with a horizontal line of the form $y = c 1$. We would expect the intersection to contain 2 points (assuming they intersect)."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["From the two equations we see that we need the terms $x^2$, $y$ and $1$ and thus we require 3 basis vectors. We'll use a dual representation (points as pseudovectors) and define our up function as follows","\\begin{aligned}\n                    up(x, y) & = x^2 e_1^* + y e_2^* + 1 e_3^* \\\\\n                    & = x^2 e_{23} + y e_{31} + 1 e_{12}\n                    \\end{aligned}","Now curves should be represented by vectors. For our parabola $p$ we need the $x^2$ and $y$ basis vectors, that is $e_1$ and $e_2$ respectively. For our line $l$ we will need the $y$ and $1$ basis vectors, that is $e_2$ and $e_3$ respectively.","\\begin{aligned}\n                    p & = a e_1 - e_2 \\\\\n                    l & = -e_2 + b e_3\n                    \\end{aligned}","Let's look at the OPNS (using $\\vee$) for $p$ to confirm it indeed represents the desired parabola.","\\begin{aligned}\n                    up(x, y) \\vee p & = (x^2 e_1^* + y e_2^* + 1 e_3^*) \\vee (a e_1 - e_2) \\\\\n                    & = a x^2 - y = 0 \\\\\n                    \\end{aligned}","\\begin{aligned}\n                    up(x, y) \\vee l & = (x^2 e_1^* + y e_2^* + 1 e_3^*) \\vee (-e_2 + b e_3) \\\\\n                    & = b - y = 0 \\\\\n                    \\end{aligned}","Looks like we're good! Now we can intersect the two objects using $\\wedge$ as that is the meet operation in the dual representation. We will call the intersection object $i$.","\\begin{aligned}\n                    i = p \\wedge l = -a e_{12} + a b e_{13} - b e_{23}\n                    \\end{aligned}","Now let's look at the OPNS of the intersection object to see if it gives us what we expect (two points of intersection).","\\begin{aligned}\n                    up(x, y) \\vee i & = (x^2 e_1^* + y e_2^* + 1 e_3^*) \\vee (-a e_{12} + a b e_{13} - b e_{23}) \\\\\n                    & = a (-b + y) e_1 + (-a x^2 + b) e_2 + b (a x^2 - y) e_3 = 0\n                    \\end{aligned}","Now we have three vectors that need to each be equal to zero.","\\begin{aligned}\n                    a (-b + y) = 0 & \\implies y = b \\\\\n                    (-a x^2 + b) = 0 & \\implies x^2 = \\frac{b}{a} \\\\\n                    b (a x^2 - y) = 0 & \\implies x^2 = \\frac{y}{a} \\\\\n                    \\end{aligned}","The three equations aren't independent (combining the first and third one gives the second one). So now we see that the intersection object represents ","$x^2 = \\frac{b}{a}$"," and $y = b$. This has two solutions ","$x_{1,2} = \\pm \\sqrt{\\frac{b}{a}}$"," as expected and the solutions are the correct ones too (eg. $y$ is just the vertical offset $b$ of the line)."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Great, we have shown that what we learnt makes sense and can be applied without much thought required. We can even plot the solutions using a library that can plot the null space of the algebraic equations implicitly.",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CoffeeShop__WEBPACK_IMPORTED_MODULE_3__.a,{id:"CHBV5IJ4J",title:"Parabola intersects line in GA"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Example: Intersecting Elliptic Curves"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"To be continued."})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Conclusion"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"We have learnt how to represent arbitrary polynomials using GA and that intersection and joining them works and makes sense. There are some other things that we could explore. For example nothing stops us from using more complicated up functions than polynomials and there is no reason they should not make sense anymore."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"The major thing we are still missing are operations on objects such as rotation and translation for which we want rotors. For these the metric and whether we use a dual representation or not will actually matter. That will be the topic of the next section."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.b,{to:"/ga-design-2",children:"Next: Design of Geometric Algebras - Part 2"})})]})}},38:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return GADesign2}));var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),react_router_dom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(3),_CoffeeShop__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(15);function GADesign2(){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){eval("if (MathJax && MathJax.typeset) MathJax.typeset();")}),[]),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Designing Geometric Algebras - Part 2"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"In the first part of this series we learnt how to create geometric algebras that can represent arbitrary objects. In this second part we will learn about how to create the rotors we want to perform translation, rotation and so on."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Rotor Recap"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["With each pair of basis vectors we can form a bivector. The bivector can be exponentiated which results in a rotor that, when an object is sandwiched with it, will perform one of three operations depending on what the bivector $B$ squares to:",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("table",{style:{width:"100%",padding:"2%"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"$B^2$"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"$e^{t B}$"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("th",{style:{textAlign:"left"},children:"Sandwich action on vector"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"-1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"$cos(t) + B sin(t)$"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Rotates between B's two vectors"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"0"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"$1 + t B$"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"Translates orthogonal to B's two vectors"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("tr",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"+1"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("td",{children:"$cosh(t) + B sinh(t)$"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("td",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://en.wikipedia.org/wiki/Lorentz_transformation#Physical_formulation_of_Lorentz_boosts",children:"Boosts"})," between B's two vectors"]})]})]}),"Let's take a look at ordinary 3-space GA. We have three basis vectors $e_x, e_y, e_z$ that each square to +1. We have three bivectors ","$e_{xy}, e_{yz}, e_{xz}$"," that each square to -1. Thus the bivectors perform a rotation in their planes, meaning, between the components of the two basis vectors they are composed of when applied with the sandwich product to a vector."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Rotors for different up functions"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["With a more complicated up function this is no different. The bivectors will still eg. rotate between two components of two basis vectors. The result looks more interesting though. If we have a basis vector for the $x^2$ term and another basis vector for a constant term, we can rotate between a parabola and a straight line! This is demonstrated below with an algebra that has 3 basis vectors and corresponding terms in the up function $x^2, y, 1$.",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"2%"},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CoffeeShop__WEBPACK_IMPORTED_MODULE_3__.a,{id:"j6gKZCgwS",title:"Parabola and line rotor example"})}),"Here's another example where we rotate an elliptic curve into vertical lines (the algebra can represent vertical line tuples).",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{padding:"2%"},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CoffeeShop__WEBPACK_IMPORTED_MODULE_3__.a,{id:"siFF2jGCi",title:"Elliptic curve rotor example"})})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Basis vectors as mirrors"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["If you've seen ",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("a",{href:"https://www.youtube.com/watch?v=ichOiuBoBoQ",children:"Steven De Keninck's presentation on dual quaternions"})," you have seen how the rotors arise naturally from viewing the action of the basis vectors as mirrors in the dual view. For example using ordinary 3-space again, each basis vector when applied with the sandwich product will reflect the components along its axis."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"As you might have hoped or expected, nothing changes. If we reflect in a basis vector that has an $x^2$ coefficient in the up function, sandwiching with that basis vector will reflect in a parabola instead of a line. This is hard to visualize, especially for understanding how the rotors arise from these mirrors but it does all work out the same."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:"Rotor exploration"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("b",{style:{color:"red"},children:"Here are some things I tried. I might remove this section later or move it to a new page later once I figure out a good pattern for constructing our desired rotors."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"PGA-like rotors for rotation and translation"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Depending on what our basis vectors square to we will get different squares for the bivectors. This makes it tricky to get all the transformations we want. For example we can't easily get both rotation between $e_1, e_2$ and translation orthogonal to it."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["However we can introduce a new basis vector $e_3$ that squares to zero and add it to our up function with a constant coefficient. Assuming our two basis vectors $e_1, e_2$ we started with both square to one, we get rotors for rotation between $e_1, e_2$ as well as translations in either direction if we sandwich with the exponential of the dual of a vector. For example ","$e^{\\frac{d}{2} e_1^*} = 1 + \\frac{d}{2} e_1^*$"," is a translator (a rotor doing translation) in the 1-direction by $d$ when applied with the sandwich product."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Shear rotors"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"So far this was all relatively specific to the up function used by PGA where the extra basis vector has a constant coefficient. How does the action of such a rotor look like if the coefficient is not a constant?"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Let's look at the simple case with two basis vectors and up function $up(x, y) = x e_1 + y e_2$ and $e_1^2 = 1$ but $e_2^2 = 0$. We have the bivector ","$e_{12}$"," which squares to zero. When we exponentiate it and apply it with the sandwich product to a vector we get","\\begin{aligned}\n                & (1 + \\frac{d}{2} e_{12}) (x e_1 + y e_2) (1 - \\frac{d}{2} e_{12}) \\\\\n                = & (1 + \\frac{d}{2} e_{12}) (x e_1 + y e_2 - \\frac{d}{2} x e_2) \\\\\n                = & x e_1 + y e_2 - d x e_2 \\\\\n                = & x e_1 + (y - d x) e_2\n                \\end{aligned}","It does some sort of translation in the $e_2$ direction proportional to the $e_1$ value. For $x = 0$ the $e_2$ direction is unaffected. The bigger the $e_1$ component gets the more the $e_2$ direction gets translated. This is a shear in the $e_2$ direction, the vector which squares to zero."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:'"Opposite-PGA" exploration'}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{children:"Let's try the previous PGA rotor example but instead make $e_1^2 = e_2^2 = 0$ and $e_3^2 = 1$."}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Applying ","$e_{13}$"," to a vector (line)","\\begin{aligned}\n                    & (1 + \\frac{d}{2} e_{13}) (x e_1 + y e_2 + 1 e_3) (1 - \\frac{d}{2} e_{13}) \\\\\n                    = & (1 + \\frac{d}{2} e_{12}) (x e_1 + y e_2 + 1 e_3 + \\frac{d}{2} e_1 + \\frac{d}{2} y e_{123}) \\\\\n                    = & x e_1 + y e_2 + 1 e_3 + d e_1 + d y e_{123} \\\\\n                    = & (x + d) e_1 + y e_2 + 1 e_3 + d y e_{123}\n                    \\end{aligned}","This does translation in the $e_1$ direction and also some kind of shear in ","$e_{123}$"," proportional to the $e_2$ component. $e_23$ does the same thing but with $e_1$ and $e_2$ swapped."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Applying ","$e_{12}$"," to a vector (line):","\\begin{aligned}\n                    & (1 + \\frac{d}{2} e_{12}) (x e_1 + y e_2 + 1 e_3) (1 - \\frac{d}{2} e_{12}) \\\\\n                    = & (1 + \\frac{d}{2} e_{12}) (x e_1 + y e_2 + 1 e_3 - \\frac{d}{2} e_{123}) \\\\\n                    = & x e_1 + y e_2 + 1 e_3 - d e_{123}\n                    \\end{aligned}","This does translation in ","$e_{123}$","."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Applying ","$e_{12}$"," to a bivector (point):","\\begin{aligned}\n                    & (1 + \\frac{d}{2} e_{12}) (x e_{31} + y e_{23} + 1 e_{12}) (1 - \\frac{d}{2} e_{12}) \\\\\n                    = & (1 + \\frac{d}{2} e_{12}) (x e_{31} + y e_{23} + 1 e_{12}) \\\\\n                    = & x e_{31} + y e_{23} + 1 e_{12}\n                    \\end{aligned}","This is the identity map."]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("br",{}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["Applying ","$e_{13}$"," to a bivector (point):","\\begin{aligned}\n                    & (1 + \\frac{d}{2} e_{13}) (x e_{31} + y e_{23} + 1 e_{12}) (1 - \\frac{d}{2} e_{13}) \\\\\n                    = & (1 + \\frac{d}{2} e_{12}) (x e_{31} + y e_{23} + 1 e_{12} + \\frac{d}{2} y e_{12}) \\\\\n                    = & x e_{31} + y e_{23} + 1 e_{12} + d y e_{12} \\\\\n                    = & x e_{31} + y e_{23} + (1 + d y) e_{12}\n                    \\end{aligned}","This is a shear in the ","$e_{12}$"," direction proportional to the ","$e_{23}$"," component. The last bivector ","$e_{23}$"," will do the same thing in the but proportional to the ","$e_{13}$"," component. Since this is a projective point (which follows from inverting the up function, not conjecture!) it's a division of both x and y by $1 + x$ or $1 + y$. Also composing the two rotors will give us the following:","\\begin{aligned}\n                    & R = (1 + \\frac{d_x}{2} e_{23})(1 + \\frac{d_y}{2} e_{13}) = 1 + \\frac{d_x}{2} e_{23} + \\frac{d_y}{2} e_{13} + \\frac{d_x d_y}{4} e_{12}\\\\\n                    & R p \\widetilde{R} = \\frac{x}{1 + d_x x + d_y y} e_{31} + \\frac{y}{1 + d_x x + d_y y} e_{23} + 1 e_{12}\n                    \\end{aligned}","Interestingly the composed rotor picks up the ","$e_{12}$"," part for which we already showed that it is the identity map. In different notation, the composed map is","\\begin{aligned}\n                    (x, y) \\rightarrow (\\frac{x}{1 + d_x x + d_y y}, \\frac{y}{1 + d_x x + d_y y})\n                    \\end{aligned}","Perhaps it is possible to construct scaling rotors for each direction this way if we could change the $x$ and $y$ in the denominator by adjusting our up function and basis vectors."]})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h5",{children:"Non-isotropic scaling rotor"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{children:["We want rotors that only scale in one direction, instead of scaling all directions equally. Start with PGA, but for up instead use the logarithm on the coordinates","\\begin{aligned}\n                up(x, y) = log(x) e_1^* + log(y) e_2^* + 1 e_0^*\n                \\end{aligned}","If we try to find the inverse mapping (ie. get the $(x, y)$ coordinates a bivector represents) we have","\\begin{aligned}\n                x = exp(\\frac{\\langle p \\rangle_{1^*}}{\\langle p \\rangle_{0^*}}), y = exp(\\frac{\\langle p \\rangle_{2^*}}{\\langle p \\rangle_{0^*}})\n                \\end{aligned}","If we now apply a translator $T_x(log(s_x))$ that translates by $log(s_x)$ in the $e_x^*$ direction (just like in the usual PGA), we get","\\begin{aligned}\n                & T_x(log(s_x)) up(x, y) \\widetilde{T_x}(log(s_x)) \\\\\n                = & (log(x) + log(s_x)) e_x^* + log(y) e_y^* + 1 e_0^* \\\\\n                = & log(x s_x) e_x^* + log(y) e_y^* + 1 e_0^*\n                \\end{aligned}","Recovering the $(x', y')$ coordinates this result represents using the inverse up mapping we get","\\begin{aligned}\n                x' & = exp(\\frac{log(x s_x)}{1}) = x s_x \\\\\n                y' & = exp(\\frac{log(y)}{1}) = y\n                \\end{aligned}","And we have non-isotropic scaling, yay! Of course the same will work for scaling $y$ too. There is still a big issue though: $x$ and $y$ have to be greater than zero since the logarithm is not defined otherwise (or we could just use the complex logarithm? although maybe there's a nicer GA way of avoiding arbitrary complex numbers here).",Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_CoffeeShop__WEBPACK_IMPORTED_MODULE_3__.a,{id:"dg4qW2Vqs",title:"Non-isotropic scaling with rotors"})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h4",{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_2__.b,{to:"/ga-design-3",children:"Next: Design of Geometric Algebras - Part 3"})})]})}},39:function(module,__webpack_exports__,__webpack_require__){"use strict";var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_1___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__),react_dom__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(17),react_dom__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(react_dom__WEBPACK_IMPORTED_MODULE_2__),react_router_dom__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(2),react_router_dom__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(3),_pages__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(13),_ga_ga_pp__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(41),_ga_ga_ppp__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(42),_ga_ga_zpp__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(20),_ga_viz2d__WEBPACK_IMPORTED_MODULE_9__=__webpack_require__(19),breadcrumbPathToName={motivation:"Motivation","ga-basics":"Geometric Algebra Basics",pga:"Projective Geometric Algebra","pga-geometry":"PGA Geometry","ga-design-1":"Designing Geometric Algebras - Part 1","ga-design-2":"Designing Geometric Algebras - Part 2"},pathToBreadcrumbs=function(e){var _=["Geometric Algebra"],t=[""],i=e;"/"===i[i.length-1]&&(i=i.substr(0,i.length-1));for(var r=i.substr(1).split("/");r.length>0;){var a=r[0];_.push(breadcrumbPathToName[a]?breadcrumbPathToName[a]:a),t.push("".concat(t[t.length-1],"/").concat(r[0])),r.splice(0,1)}return t[0]="/",_.map((function(e,_){return{name:e,url:t[_]}}))};function NotFound(){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("h3",{children:"Not Found"})}function TutorialSite(){var e=Object(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.f)(),_=Object(react__WEBPACK_IMPORTED_MODULE_1__.useMemo)((function(){return pathToBreadcrumbs(e.pathname).map((function(e){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.b,{to:e.url,children:e.name})})).reduce((function(e,_){return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[" ",e," > ",_,"  "]})}))}),[e]);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"demo-container mdl-grid",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"mdl-cell mdl-cell--2-col mdl-cell--hide-tablet mdl-cell--hide-phone"}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:"demo-content mdl-color--white mdl-shadow--4dp content mdl-color-text--grey-800 mdl-cell mdl-cell--8-col",children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"demo-crumbs mdl-color-text--grey-500",children:_}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{id:"section-to-print",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.c,{children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{path:"/motivation",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pages__WEBPACK_IMPORTED_MODULE_5__.d,{})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{path:"/ga-basics",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pages__WEBPACK_IMPORTED_MODULE_5__.c,{})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{path:"/pga",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pages__WEBPACK_IMPORTED_MODULE_5__.f,{})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{path:"/pga-geometry",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pages__WEBPACK_IMPORTED_MODULE_5__.e,{})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{exact:!0,path:"/",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pages__WEBPACK_IMPORTED_MODULE_5__.g,{})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{exact:!0,path:"/ga-design-1",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pages__WEBPACK_IMPORTED_MODULE_5__.a,{})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{exact:!0,path:"/ga-design-2",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_pages__WEBPACK_IMPORTED_MODULE_5__.b,{})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_3__.a,{path:"*",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(NotFound,{})})]})})]})]}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("footer",{className:"demo-footer mdl-mini-footer",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{className:"mdl-mini-footer--left-section",children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("ul",{className:"mdl-mini-footer--link-list"})})})]})}function App(){return Object(react__WEBPACK_IMPORTED_MODULE_1__.useEffect)((function(){var wnd=window;wnd.ga=_ga_ga_pp__WEBPACK_IMPORTED_MODULE_6__,wnd.ga3d=_ga_ga_ppp__WEBPACK_IMPORTED_MODULE_7__,wnd.pga=_ga_ga_zpp__WEBPACK_IMPORTED_MODULE_8__,wnd.viz=_ga_viz2d__WEBPACK_IMPORTED_MODULE_9__,wnd.renderScene=function(e,_){react_dom__WEBPACK_IMPORTED_MODULE_2___default.a.render(_ga_viz2d__WEBPACK_IMPORTED_MODULE_9__.SceneView({scene:e}),_)},eval("\n            var ga = wnd.ga;\n            var ga3d = wnd.ga3d;\n            var pga = wnd.pga;\n            var viz = wnd.viz;\n            var renderScene = wnd.renderScene;\n        ")}),[]),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_router_dom__WEBPACK_IMPORTED_MODULE_4__.a,{children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(TutorialSite,{})})}__webpack_exports__.a=App},41:function(e,_,t){"use strict";t.r(_),t.d(_,"add",(function(){return i})),t.d(_,"sub",(function(){return r})),t.d(_,"dual",(function(){return a})),t.d(_,"geometricProduct",(function(){return o})),t.d(_,"innerProduct",(function(){return n})),t.d(_,"exteriorProduct",(function(){return s})),t.d(_,"multiply",(function(){return c})),t.d(_,"div",(function(){return d})),t.d(_,"reversion",(function(){return l})),t.d(_,"repr",(function(){return u})),t.d(_,"regressiveProduct",(function(){return h})),t.d(_,"sandwichProduct",(function(){return v})),t.d(_,"commutatorProduct",(function(){return E})),t.d(_,"exponential",(function(){return O}));var i=function(e,_){return{scalar:void 0!==e.scalar||void 0!==_.scalar?(e.scalar||0)+(_.scalar||0):void 0,e0:void 0!==e.e0||void 0!==_.e0?(e.e0||0)+(_.e0||0):void 0,e1:void 0!==e.e1||void 0!==_.e1?(e.e1||0)+(_.e1||0):void 0,e01:void 0!==e.e01||void 0!==_.e01?(e.e01||0)+(_.e01||0):void 0}},r=function(e,_){return{scalar:void 0!==e.scalar||void 0!==_.scalar?(e.scalar||0)-(_.scalar||0):void 0,e0:void 0!==e.e0||void 0!==_.e0?(e.e0||0)-(_.e0||0):void 0,e1:void 0!==e.e1||void 0!==_.e1?(e.e1||0)-(_.e1||0):void 0,e01:void 0!==e.e01||void 0!==_.e01?(e.e01||0)-(_.e01||0):void 0}},a=function(e){return{scalar:void 0!==e.e01?1*e.e01:void 0,e0:void 0!==e.e1?1*e.e1:void 0,e1:void 0!==e.e0?-1*e.e0:void 0,e01:void 0!==e.scalar?1*e.scalar:void 0}},o=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar,r=void 0!==e.e0&&void 0!==_.e0,a=void 0!==e.e1&&void 0!==_.e1,o=void 0!==e.e01&&void 0!==_.e01;(i||r||a||o)&&(t=0,i&&(t+=e.scalar*_.scalar*1),r&&(t+=e.e0*_.e0*1),a&&(t+=e.e1*_.e1*1),o&&(t+=e.e01*_.e01*-1));var n=void 0,s=void 0!==e.scalar&&void 0!==_.e0,c=void 0!==e.e0&&void 0!==_.scalar,d=void 0!==e.e1&&void 0!==_.e01,l=void 0!==e.e01&&void 0!==_.e1;(s||c||d||l)&&(n=0,s&&(n+=e.scalar*_.e0*1),c&&(n+=e.e0*_.scalar*1),d&&(n+=e.e1*_.e01*-1),l&&(n+=e.e01*_.e1*1));var u=void 0,h=void 0!==e.scalar&&void 0!==_.e1,v=void 0!==e.e0&&void 0!==_.e01,E=void 0!==e.e1&&void 0!==_.scalar,O=void 0!==e.e01&&void 0!==_.e0;(h||v||E||O)&&(u=0,h&&(u+=e.scalar*_.e1*1),v&&(u+=e.e0*_.e01*1),E&&(u+=e.e1*_.scalar*1),O&&(u+=e.e01*_.e0*-1));var x=void 0,j=void 0!==e.scalar&&void 0!==_.e01,P=void 0!==e.e0&&void 0!==_.e1,b=void 0!==e.e1&&void 0!==_.e0,m=void 0!==e.e01&&void 0!==_.scalar;return(j||P||b||m)&&(x=0,j&&(x+=e.scalar*_.e01*1),P&&(x+=e.e0*_.e1*1),b&&(x+=e.e1*_.e0*-1),m&&(x+=e.e01*_.scalar*1)),{scalar:t,e0:n,e1:u,e01:x}},n=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar,r=void 0!==e.e0&&void 0!==_.e0,a=void 0!==e.e1&&void 0!==_.e1,o=void 0!==e.e01&&void 0!==_.e01;(i||r||a||o)&&(t=0,i&&(t+=e.scalar*_.scalar*1),r&&(t+=e.e0*_.e0*1),a&&(t+=e.e1*_.e1*1),o&&(t+=e.e01*_.e01*-1));var n=void 0,s=void 0!==e.scalar&&void 0!==_.e0,c=void 0!==e.e0&&void 0!==_.scalar,d=void 0!==e.e1&&void 0!==_.e01,l=void 0!==e.e01&&void 0!==_.e1;(s||c||d||l)&&(n=0,s&&(n+=e.scalar*_.e0*1),c&&(n+=e.e0*_.scalar*1),d&&(n+=e.e1*_.e01*-1),l&&(n+=e.e01*_.e1*1));var u=void 0,h=void 0!==e.scalar&&void 0!==_.e1,v=void 0!==e.e0&&void 0!==_.e01,E=void 0!==e.e1&&void 0!==_.scalar,O=void 0!==e.e01&&void 0!==_.e0;(h||v||E||O)&&(u=0,h&&(u+=e.scalar*_.e1*1),v&&(u+=e.e0*_.e01*1),E&&(u+=e.e1*_.scalar*1),O&&(u+=e.e01*_.e0*-1));var x=void 0,j=void 0!==e.scalar&&void 0!==_.e01,P=void 0!==e.e01&&void 0!==_.scalar;return(j||P)&&(x=0,j&&(x+=e.scalar*_.e01*1),P&&(x+=e.e01*_.scalar*1)),{scalar:t,e0:n,e1:u,e01:x}},s=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar;i&&(t=0,i&&(t+=e.scalar*_.scalar*1));var r=void 0,a=void 0!==e.scalar&&void 0!==_.e0,o=void 0!==e.e0&&void 0!==_.scalar;(a||o)&&(r=0,a&&(r+=e.scalar*_.e0*1),o&&(r+=e.e0*_.scalar*1));var n=void 0,s=void 0!==e.scalar&&void 0!==_.e1,c=void 0!==e.e1&&void 0!==_.scalar;(s||c)&&(n=0,s&&(n+=e.scalar*_.e1*1),c&&(n+=e.e1*_.scalar*1));var d=void 0,l=void 0!==e.scalar&&void 0!==_.e01,u=void 0!==e.e0&&void 0!==_.e1,h=void 0!==e.e1&&void 0!==_.e0,v=void 0!==e.e01&&void 0!==_.scalar;return(l||u||h||v)&&(d=0,l&&(d+=e.scalar*_.e01*1),u&&(d+=e.e0*_.e1*1),h&&(d+=e.e1*_.e0*-1),v&&(d+=e.e01*_.scalar*1)),{scalar:t,e0:r,e1:n,e01:d}},c=function(e,_){return{scalar:void 0!==e.scalar?e.scalar*_:void 0,e0:void 0!==e.e0?e.e0*_:void 0,e1:void 0!==e.e1?e.e1*_:void 0,e01:void 0!==e.e01?e.e01*_:void 0}},d=function(e,_){return{scalar:void 0!==e.scalar?e.scalar/_:void 0,e0:void 0!==e.e0?e.e0/_:void 0,e1:void 0!==e.e1?e.e1/_:void 0,e01:void 0!==e.e01?e.e01/_:void 0}},l=function(e){return{scalar:e.scalar&&e.scalar,e0:e.e0&&e.e0,e1:e.e1&&e.e1,e01:e.e01&&-e.e01}},u=function(e){var _=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,t="";return void 0!==e.scalar&&(t+=""===t?e.scalar.toFixed(_)+"":e.scalar>=0?" + "+e.scalar.toFixed(_):" - "+Math.abs(e.scalar).toFixed(_)),void 0!==e.e0&&(t+=""===t?e.e0.toFixed(_)+"e0":e.e0>=0?" + "+e.e0.toFixed(_)+"e0":" - "+Math.abs(e.e0).toFixed(_)+"e0"),void 0!==e.e1&&(t+=""===t?e.e1.toFixed(_)+"e1":e.e1>=0?" + "+e.e1.toFixed(_)+"e1":" - "+Math.abs(e.e1).toFixed(_)+"e1"),void 0!==e.e01&&(t+=""===t?e.e01.toFixed(_)+"e01":e.e01>=0?" + "+e.e01.toFixed(_)+"e01":" - "+Math.abs(e.e01).toFixed(_)+"e01"),t},h=function(e,_){return a(s(a(e),a(_)))},v=function(e,_){return o(_,o(e,l(_)))},E=function(e,_){return c(r(o(e,_),o(_,e)),.5)},O=function(e){var _=o(e,e).scalar||0;if(_<0){var t=Math.sign(_)*Math.sqrt(Math.abs(_));return i({scalar:Math.cos(t)},c(e,Math.sin(t)/t))}if(_>0){var r=Math.sign(_)*Math.sqrt(Math.abs(_));return i({scalar:Math.cosh(r)},c(e,Math.sinh(r)/r))}return i({scalar:1},e)}},42:function(e,_,t){"use strict";t.r(_),t.d(_,"add",(function(){return i})),t.d(_,"sub",(function(){return r})),t.d(_,"dual",(function(){return a})),t.d(_,"geometricProduct",(function(){return o})),t.d(_,"innerProduct",(function(){return n})),t.d(_,"exteriorProduct",(function(){return s})),t.d(_,"multiply",(function(){return c})),t.d(_,"div",(function(){return d})),t.d(_,"reversion",(function(){return l})),t.d(_,"repr",(function(){return u})),t.d(_,"regressiveProduct",(function(){return h})),t.d(_,"sandwichProduct",(function(){return v})),t.d(_,"commutatorProduct",(function(){return E})),t.d(_,"exponential",(function(){return O}));var i=function(e,_){return{scalar:void 0!==e.scalar||void 0!==_.scalar?(e.scalar||0)+(_.scalar||0):void 0,e0:void 0!==e.e0||void 0!==_.e0?(e.e0||0)+(_.e0||0):void 0,e1:void 0!==e.e1||void 0!==_.e1?(e.e1||0)+(_.e1||0):void 0,e2:void 0!==e.e2||void 0!==_.e2?(e.e2||0)+(_.e2||0):void 0,e01:void 0!==e.e01||void 0!==_.e01?(e.e01||0)+(_.e01||0):void 0,e02:void 0!==e.e02||void 0!==_.e02?(e.e02||0)+(_.e02||0):void 0,e12:void 0!==e.e12||void 0!==_.e12?(e.e12||0)+(_.e12||0):void 0,e012:void 0!==e.e012||void 0!==_.e012?(e.e012||0)+(_.e012||0):void 0}},r=function(e,_){return{scalar:void 0!==e.scalar||void 0!==_.scalar?(e.scalar||0)-(_.scalar||0):void 0,e0:void 0!==e.e0||void 0!==_.e0?(e.e0||0)-(_.e0||0):void 0,e1:void 0!==e.e1||void 0!==_.e1?(e.e1||0)-(_.e1||0):void 0,e2:void 0!==e.e2||void 0!==_.e2?(e.e2||0)-(_.e2||0):void 0,e01:void 0!==e.e01||void 0!==_.e01?(e.e01||0)-(_.e01||0):void 0,e02:void 0!==e.e02||void 0!==_.e02?(e.e02||0)-(_.e02||0):void 0,e12:void 0!==e.e12||void 0!==_.e12?(e.e12||0)-(_.e12||0):void 0,e012:void 0!==e.e012||void 0!==_.e012?(e.e012||0)-(_.e012||0):void 0}},a=function(e){return{scalar:void 0!==e.e012?1*e.e012:void 0,e0:void 0!==e.e12?1*e.e12:void 0,e1:void 0!==e.e02?-1*e.e02:void 0,e2:void 0!==e.e01?1*e.e01:void 0,e01:void 0!==e.e2?1*e.e2:void 0,e02:void 0!==e.e1?-1*e.e1:void 0,e12:void 0!==e.e0?1*e.e0:void 0,e012:void 0!==e.scalar?1*e.scalar:void 0}},o=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar,r=void 0!==e.e0&&void 0!==_.e0,a=void 0!==e.e1&&void 0!==_.e1,o=void 0!==e.e2&&void 0!==_.e2,n=void 0!==e.e01&&void 0!==_.e01,s=void 0!==e.e02&&void 0!==_.e02,c=void 0!==e.e12&&void 0!==_.e12,d=void 0!==e.e012&&void 0!==_.e012;(i||r||a||o||n||s||c||d)&&(t=0,i&&(t+=e.scalar*_.scalar*1),r&&(t+=e.e0*_.e0*1),a&&(t+=e.e1*_.e1*1),o&&(t+=e.e2*_.e2*1),n&&(t+=e.e01*_.e01*-1),s&&(t+=e.e02*_.e02*-1),c&&(t+=e.e12*_.e12*-1),d&&(t+=e.e012*_.e012*-1));var l=void 0,u=void 0!==e.scalar&&void 0!==_.e0,h=void 0!==e.e0&&void 0!==_.scalar,v=void 0!==e.e1&&void 0!==_.e01,E=void 0!==e.e2&&void 0!==_.e02,O=void 0!==e.e01&&void 0!==_.e1,x=void 0!==e.e02&&void 0!==_.e2,j=void 0!==e.e12&&void 0!==_.e012,P=void 0!==e.e012&&void 0!==_.e12;(u||h||v||E||O||x||j||P)&&(l=0,u&&(l+=e.scalar*_.e0*1),h&&(l+=e.e0*_.scalar*1),v&&(l+=e.e1*_.e01*-1),E&&(l+=e.e2*_.e02*-1),O&&(l+=e.e01*_.e1*1),x&&(l+=e.e02*_.e2*1),j&&(l+=e.e12*_.e012*-1),P&&(l+=e.e012*_.e12*-1));var b=void 0,m=void 0!==e.scalar&&void 0!==_.e1,M=void 0!==e.e0&&void 0!==_.e01,p=void 0!==e.e1&&void 0!==_.scalar,D=void 0!==e.e2&&void 0!==_.e12,f=void 0!==e.e01&&void 0!==_.e0,g=void 0!==e.e02&&void 0!==_.e012,w=void 0!==e.e12&&void 0!==_.e2,A=void 0!==e.e012&&void 0!==_.e02;(m||M||p||D||f||g||w||A)&&(b=0,m&&(b+=e.scalar*_.e1*1),M&&(b+=e.e0*_.e01*1),p&&(b+=e.e1*_.scalar*1),D&&(b+=e.e2*_.e12*-1),f&&(b+=e.e01*_.e0*-1),g&&(b+=e.e02*_.e012*1),w&&(b+=e.e12*_.e2*1),A&&(b+=e.e012*_.e02*1));var C=void 0,y=void 0!==e.scalar&&void 0!==_.e2,T=void 0!==e.e0&&void 0!==_.e02,I=void 0!==e.e1&&void 0!==_.e12,R=void 0!==e.e2&&void 0!==_.scalar,W=void 0!==e.e01&&void 0!==_.e012,B=void 0!==e.e02&&void 0!==_.e0,L=void 0!==e.e12&&void 0!==_.e1,U=void 0!==e.e012&&void 0!==_.e01;(y||T||I||R||W||B||L||U)&&(C=0,y&&(C+=e.scalar*_.e2*1),T&&(C+=e.e0*_.e02*1),I&&(C+=e.e1*_.e12*1),R&&(C+=e.e2*_.scalar*1),W&&(C+=e.e01*_.e012*-1),B&&(C+=e.e02*_.e0*-1),L&&(C+=e.e12*_.e1*-1),U&&(C+=e.e012*_.e01*-1));var K=void 0,$=void 0!==e.scalar&&void 0!==_.e01,k=void 0!==e.e0&&void 0!==_.e1,q=void 0!==e.e1&&void 0!==_.e0,G=void 0!==e.e2&&void 0!==_.e012,S=void 0!==e.e01&&void 0!==_.scalar,F=void 0!==e.e02&&void 0!==_.e12,z=void 0!==e.e12&&void 0!==_.e02,N=void 0!==e.e012&&void 0!==_.e2;($||k||q||G||S||F||z||N)&&(K=0,$&&(K+=e.scalar*_.e01*1),k&&(K+=e.e0*_.e1*1),q&&(K+=e.e1*_.e0*-1),G&&(K+=e.e2*_.e012*1),S&&(K+=e.e01*_.scalar*1),F&&(K+=e.e02*_.e12*-1),z&&(K+=e.e12*_.e02*1),N&&(K+=e.e012*_.e2*1));var V=void 0,X=void 0!==e.scalar&&void 0!==_.e02,J=void 0!==e.e0&&void 0!==_.e2,H=void 0!==e.e1&&void 0!==_.e012,Y=void 0!==e.e2&&void 0!==_.e0,Z=void 0!==e.e01&&void 0!==_.e12,Q=void 0!==e.e02&&void 0!==_.scalar,ee=void 0!==e.e12&&void 0!==_.e01,_e=void 0!==e.e012&&void 0!==_.e1;(X||J||H||Y||Z||Q||ee||_e)&&(V=0,X&&(V+=e.scalar*_.e02*1),J&&(V+=e.e0*_.e2*1),H&&(V+=e.e1*_.e012*-1),Y&&(V+=e.e2*_.e0*-1),Z&&(V+=e.e01*_.e12*1),Q&&(V+=e.e02*_.scalar*1),ee&&(V+=e.e12*_.e01*-1),_e&&(V+=e.e012*_.e1*-1));var te=void 0,ie=void 0!==e.scalar&&void 0!==_.e12,re=void 0!==e.e0&&void 0!==_.e012,ae=void 0!==e.e1&&void 0!==_.e2,oe=void 0!==e.e2&&void 0!==_.e1,ne=void 0!==e.e01&&void 0!==_.e02,se=void 0!==e.e02&&void 0!==_.e01,ce=void 0!==e.e12&&void 0!==_.scalar,de=void 0!==e.e012&&void 0!==_.e0;(ie||re||ae||oe||ne||se||ce||de)&&(te=0,ie&&(te+=e.scalar*_.e12*1),re&&(te+=e.e0*_.e012*1),ae&&(te+=e.e1*_.e2*1),oe&&(te+=e.e2*_.e1*-1),ne&&(te+=e.e01*_.e02*-1),se&&(te+=e.e02*_.e01*1),ce&&(te+=e.e12*_.scalar*1),de&&(te+=e.e012*_.e0*1));var le=void 0,ue=void 0!==e.scalar&&void 0!==_.e012,he=void 0!==e.e0&&void 0!==_.e12,ve=void 0!==e.e1&&void 0!==_.e02,Ee=void 0!==e.e2&&void 0!==_.e01,Oe=void 0!==e.e01&&void 0!==_.e2,xe=void 0!==e.e02&&void 0!==_.e1,je=void 0!==e.e12&&void 0!==_.e0,Pe=void 0!==e.e012&&void 0!==_.scalar;return(ue||he||ve||Ee||Oe||xe||je||Pe)&&(le=0,ue&&(le+=e.scalar*_.e012*1),he&&(le+=e.e0*_.e12*1),ve&&(le+=e.e1*_.e02*-1),Ee&&(le+=e.e2*_.e01*1),Oe&&(le+=e.e01*_.e2*1),xe&&(le+=e.e02*_.e1*-1),je&&(le+=e.e12*_.e0*1),Pe&&(le+=e.e012*_.scalar*1)),{scalar:t,e0:l,e1:b,e2:C,e01:K,e02:V,e12:te,e012:le}},n=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar,r=void 0!==e.e0&&void 0!==_.e0,a=void 0!==e.e1&&void 0!==_.e1,o=void 0!==e.e2&&void 0!==_.e2,n=void 0!==e.e01&&void 0!==_.e01,s=void 0!==e.e02&&void 0!==_.e02,c=void 0!==e.e12&&void 0!==_.e12,d=void 0!==e.e012&&void 0!==_.e012;(i||r||a||o||n||s||c||d)&&(t=0,i&&(t+=e.scalar*_.scalar*1),r&&(t+=e.e0*_.e0*1),a&&(t+=e.e1*_.e1*1),o&&(t+=e.e2*_.e2*1),n&&(t+=e.e01*_.e01*-1),s&&(t+=e.e02*_.e02*-1),c&&(t+=e.e12*_.e12*-1),d&&(t+=e.e012*_.e012*-1));var l=void 0,u=void 0!==e.scalar&&void 0!==_.e0,h=void 0!==e.e0&&void 0!==_.scalar,v=void 0!==e.e1&&void 0!==_.e01,E=void 0!==e.e2&&void 0!==_.e02,O=void 0!==e.e01&&void 0!==_.e1,x=void 0!==e.e02&&void 0!==_.e2,j=void 0!==e.e12&&void 0!==_.e012,P=void 0!==e.e012&&void 0!==_.e12;(u||h||v||E||O||x||j||P)&&(l=0,u&&(l+=e.scalar*_.e0*1),h&&(l+=e.e0*_.scalar*1),v&&(l+=e.e1*_.e01*-1),E&&(l+=e.e2*_.e02*-1),O&&(l+=e.e01*_.e1*1),x&&(l+=e.e02*_.e2*1),j&&(l+=e.e12*_.e012*-1),P&&(l+=e.e012*_.e12*-1));var b=void 0,m=void 0!==e.scalar&&void 0!==_.e1,M=void 0!==e.e0&&void 0!==_.e01,p=void 0!==e.e1&&void 0!==_.scalar,D=void 0!==e.e2&&void 0!==_.e12,f=void 0!==e.e01&&void 0!==_.e0,g=void 0!==e.e02&&void 0!==_.e012,w=void 0!==e.e12&&void 0!==_.e2,A=void 0!==e.e012&&void 0!==_.e02;(m||M||p||D||f||g||w||A)&&(b=0,m&&(b+=e.scalar*_.e1*1),M&&(b+=e.e0*_.e01*1),p&&(b+=e.e1*_.scalar*1),D&&(b+=e.e2*_.e12*-1),f&&(b+=e.e01*_.e0*-1),g&&(b+=e.e02*_.e012*1),w&&(b+=e.e12*_.e2*1),A&&(b+=e.e012*_.e02*1));var C=void 0,y=void 0!==e.scalar&&void 0!==_.e2,T=void 0!==e.e0&&void 0!==_.e02,I=void 0!==e.e1&&void 0!==_.e12,R=void 0!==e.e2&&void 0!==_.scalar,W=void 0!==e.e01&&void 0!==_.e012,B=void 0!==e.e02&&void 0!==_.e0,L=void 0!==e.e12&&void 0!==_.e1,U=void 0!==e.e012&&void 0!==_.e01;(y||T||I||R||W||B||L||U)&&(C=0,y&&(C+=e.scalar*_.e2*1),T&&(C+=e.e0*_.e02*1),I&&(C+=e.e1*_.e12*1),R&&(C+=e.e2*_.scalar*1),W&&(C+=e.e01*_.e012*-1),B&&(C+=e.e02*_.e0*-1),L&&(C+=e.e12*_.e1*-1),U&&(C+=e.e012*_.e01*-1));var K=void 0,$=void 0!==e.scalar&&void 0!==_.e01,k=void 0!==e.e2&&void 0!==_.e012,q=void 0!==e.e01&&void 0!==_.scalar,G=void 0!==e.e012&&void 0!==_.e2;($||k||q||G)&&(K=0,$&&(K+=e.scalar*_.e01*1),k&&(K+=e.e2*_.e012*1),q&&(K+=e.e01*_.scalar*1),G&&(K+=e.e012*_.e2*1));var S=void 0,F=void 0!==e.scalar&&void 0!==_.e02,z=void 0!==e.e1&&void 0!==_.e012,N=void 0!==e.e02&&void 0!==_.scalar,V=void 0!==e.e012&&void 0!==_.e1;(F||z||N||V)&&(S=0,F&&(S+=e.scalar*_.e02*1),z&&(S+=e.e1*_.e012*-1),N&&(S+=e.e02*_.scalar*1),V&&(S+=e.e012*_.e1*-1));var X=void 0,J=void 0!==e.scalar&&void 0!==_.e12,H=void 0!==e.e0&&void 0!==_.e012,Y=void 0!==e.e12&&void 0!==_.scalar,Z=void 0!==e.e012&&void 0!==_.e0;(J||H||Y||Z)&&(X=0,J&&(X+=e.scalar*_.e12*1),H&&(X+=e.e0*_.e012*1),Y&&(X+=e.e12*_.scalar*1),Z&&(X+=e.e012*_.e0*1));var Q=void 0,ee=void 0!==e.scalar&&void 0!==_.e012,_e=void 0!==e.e012&&void 0!==_.scalar;return(ee||_e)&&(Q=0,ee&&(Q+=e.scalar*_.e012*1),_e&&(Q+=e.e012*_.scalar*1)),{scalar:t,e0:l,e1:b,e2:C,e01:K,e02:S,e12:X,e012:Q}},s=function(e,_){var t=void 0,i=void 0!==e.scalar&&void 0!==_.scalar;i&&(t=0,i&&(t+=e.scalar*_.scalar*1));var r=void 0,a=void 0!==e.scalar&&void 0!==_.e0,o=void 0!==e.e0&&void 0!==_.scalar;(a||o)&&(r=0,a&&(r+=e.scalar*_.e0*1),o&&(r+=e.e0*_.scalar*1));var n=void 0,s=void 0!==e.scalar&&void 0!==_.e1,c=void 0!==e.e1&&void 0!==_.scalar;(s||c)&&(n=0,s&&(n+=e.scalar*_.e1*1),c&&(n+=e.e1*_.scalar*1));var d=void 0,l=void 0!==e.scalar&&void 0!==_.e2,u=void 0!==e.e2&&void 0!==_.scalar;(l||u)&&(d=0,l&&(d+=e.scalar*_.e2*1),u&&(d+=e.e2*_.scalar*1));var h=void 0,v=void 0!==e.scalar&&void 0!==_.e01,E=void 0!==e.e0&&void 0!==_.e1,O=void 0!==e.e1&&void 0!==_.e0,x=void 0!==e.e01&&void 0!==_.scalar;(v||E||O||x)&&(h=0,v&&(h+=e.scalar*_.e01*1),E&&(h+=e.e0*_.e1*1),O&&(h+=e.e1*_.e0*-1),x&&(h+=e.e01*_.scalar*1));var j=void 0,P=void 0!==e.scalar&&void 0!==_.e02,b=void 0!==e.e0&&void 0!==_.e2,m=void 0!==e.e2&&void 0!==_.e0,M=void 0!==e.e02&&void 0!==_.scalar;(P||b||m||M)&&(j=0,P&&(j+=e.scalar*_.e02*1),b&&(j+=e.e0*_.e2*1),m&&(j+=e.e2*_.e0*-1),M&&(j+=e.e02*_.scalar*1));var p=void 0,D=void 0!==e.scalar&&void 0!==_.e12,f=void 0!==e.e1&&void 0!==_.e2,g=void 0!==e.e2&&void 0!==_.e1,w=void 0!==e.e12&&void 0!==_.scalar;(D||f||g||w)&&(p=0,D&&(p+=e.scalar*_.e12*1),f&&(p+=e.e1*_.e2*1),g&&(p+=e.e2*_.e1*-1),w&&(p+=e.e12*_.scalar*1));var A=void 0,C=void 0!==e.scalar&&void 0!==_.e012,y=void 0!==e.e0&&void 0!==_.e12,T=void 0!==e.e1&&void 0!==_.e02,I=void 0!==e.e2&&void 0!==_.e01,R=void 0!==e.e01&&void 0!==_.e2,W=void 0!==e.e02&&void 0!==_.e1,B=void 0!==e.e12&&void 0!==_.e0,L=void 0!==e.e012&&void 0!==_.scalar;return(C||y||T||I||R||W||B||L)&&(A=0,C&&(A+=e.scalar*_.e012*1),y&&(A+=e.e0*_.e12*1),T&&(A+=e.e1*_.e02*-1),I&&(A+=e.e2*_.e01*1),R&&(A+=e.e01*_.e2*1),W&&(A+=e.e02*_.e1*-1),B&&(A+=e.e12*_.e0*1),L&&(A+=e.e012*_.scalar*1)),{scalar:t,e0:r,e1:n,e2:d,e01:h,e02:j,e12:p,e012:A}},c=function(e,_){return{scalar:void 0!==e.scalar?e.scalar*_:void 0,e0:void 0!==e.e0?e.e0*_:void 0,e1:void 0!==e.e1?e.e1*_:void 0,e2:void 0!==e.e2?e.e2*_:void 0,e01:void 0!==e.e01?e.e01*_:void 0,e02:void 0!==e.e02?e.e02*_:void 0,e12:void 0!==e.e12?e.e12*_:void 0,e012:void 0!==e.e012?e.e012*_:void 0}},d=function(e,_){return{scalar:void 0!==e.scalar?e.scalar/_:void 0,e0:void 0!==e.e0?e.e0/_:void 0,e1:void 0!==e.e1?e.e1/_:void 0,e2:void 0!==e.e2?e.e2/_:void 0,e01:void 0!==e.e01?e.e01/_:void 0,e02:void 0!==e.e02?e.e02/_:void 0,e12:void 0!==e.e12?e.e12/_:void 0,e012:void 0!==e.e012?e.e012/_:void 0}},l=function(e){return{scalar:e.scalar&&e.scalar,e0:e.e0&&e.e0,e1:e.e1&&e.e1,e2:e.e2&&e.e2,e01:e.e01&&-e.e01,e02:e.e02&&-e.e02,e12:e.e12&&-e.e12,e012:e.e012&&-e.e012}},u=function(e){var _=arguments.length>1&&void 0!==arguments[1]?arguments[1]:3,t="";return void 0!==e.scalar&&(t+=""===t?e.scalar.toFixed(_)+"":e.scalar>=0?" + "+e.scalar.toFixed(_):" - "+Math.abs(e.scalar).toFixed(_)),void 0!==e.e0&&(t+=""===t?e.e0.toFixed(_)+"e0":e.e0>=0?" + "+e.e0.toFixed(_)+"e0":" - "+Math.abs(e.e0).toFixed(_)+"e0"),void 0!==e.e1&&(t+=""===t?e.e1.toFixed(_)+"e1":e.e1>=0?" + "+e.e1.toFixed(_)+"e1":" - "+Math.abs(e.e1).toFixed(_)+"e1"),void 0!==e.e2&&(t+=""===t?e.e2.toFixed(_)+"e2":e.e2>=0?" + "+e.e2.toFixed(_)+"e2":" - "+Math.abs(e.e2).toFixed(_)+"e2"),void 0!==e.e01&&(t+=""===t?e.e01.toFixed(_)+"e01":e.e01>=0?" + "+e.e01.toFixed(_)+"e01":" - "+Math.abs(e.e01).toFixed(_)+"e01"),void 0!==e.e02&&(t+=""===t?e.e02.toFixed(_)+"e02":e.e02>=0?" + "+e.e02.toFixed(_)+"e02":" - "+Math.abs(e.e02).toFixed(_)+"e02"),void 0!==e.e12&&(t+=""===t?e.e12.toFixed(_)+"e12":e.e12>=0?" + "+e.e12.toFixed(_)+"e12":" - "+Math.abs(e.e12).toFixed(_)+"e12"),void 0!==e.e012&&(t+=""===t?e.e012.toFixed(_)+"e012":e.e012>=0?" + "+e.e012.toFixed(_)+"e012":" - "+Math.abs(e.e012).toFixed(_)+"e012"),t},h=function(e,_){return a(s(a(e),a(_)))},v=function(e,_){return o(_,o(e,l(_)))},E=function(e,_){return c(r(o(e,_),o(_,e)),.5)},O=function(e){var _=o(e,e).scalar||0;if(_<0){var t=Math.sign(_)*Math.sqrt(Math.abs(_));return i({scalar:Math.cos(t)},c(e,Math.sin(t)/t))}if(_>0){var r=Math.sign(_)*Math.sqrt(Math.abs(_));return i({scalar:Math.cosh(r)},c(e,Math.sinh(r)/r))}return i({scalar:1},e)}},49:function(e,_,t){},5:function(module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.d(__webpack_exports__,"a",(function(){return InteractiveCode}));var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__(0),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__),_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__(10),_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__(21),react__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__(1),react__WEBPACK_IMPORTED_MODULE_3___default=__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__),_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__(16),_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4___default=__webpack_require__.n(_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4__),react_ace__WEBPACK_IMPORTED_MODULE_5__=__webpack_require__(30),react_ace__WEBPACK_IMPORTED_MODULE_5___default=__webpack_require__.n(react_ace__WEBPACK_IMPORTED_MODULE_5__),brace_mode_javascript__WEBPACK_IMPORTED_MODULE_6__=__webpack_require__(62),brace_mode_javascript__WEBPACK_IMPORTED_MODULE_6___default=__webpack_require__.n(brace_mode_javascript__WEBPACK_IMPORTED_MODULE_6__),brace_theme_monokai__WEBPACK_IMPORTED_MODULE_7__=__webpack_require__(64),brace_theme_monokai__WEBPACK_IMPORTED_MODULE_7___default=__webpack_require__.n(brace_theme_monokai__WEBPACK_IMPORTED_MODULE_7__),_ga_viz2d__WEBPACK_IMPORTED_MODULE_8__=__webpack_require__(19),formatObject=function(e){return"string"===typeof e?e:"number"===typeof e?e.toString():JSON.stringify(e,null,4)};function InteractiveCode(props){var sourceCode=props.sourceCode,editorStyle=props.editorStyle,hideOutput=props.hideOutput,withVisualizer=props.withVisualizer,visualizerStyle=props.visualizerStyle,outputStyle=props.outputStyle,style=props.style,_useState=Object(react__WEBPACK_IMPORTED_MODULE_3__.useState)(sourceCode),_useState2=Object(_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__.a)(_useState,2),code=_useState2[0],setCode=_useState2[1],_useState3=Object(react__WEBPACK_IMPORTED_MODULE_3__.useState)("Press run"),_useState4=Object(_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__.a)(_useState3,2),runResult=_useState4[0],setRunResult=_useState4[1],run=Object(react__WEBPACK_IMPORTED_MODULE_3__.useCallback)((function(){var oldLog=console.log,newRunResults=[];console.log=function(e){for(var _=arguments.length,t=new Array(_>1?_-1:0),i=1;i<_;i++)t[i-1]=arguments[i];newRunResults.push((void 0!==e?formatObject(e)+" ":"")+t.map(formatObject).join(" ")),oldLog.apply(void 0,[e].concat(t))};var codeToRun=code,renderTarget=withVisualizer&&visualizerRef.current;renderTarget&&(codeToRun="\n                var points = [];\n                var lines = [];\n                var infos = [];\n                var renderPointPGA = (p, color) => points.push({point: p, radius: 4, fill: color});\n                var renderLinePGA = (l, color) => lines.push({line: l, width: 2, stroke: color});\n                var renderPointGA = (p, color) => renderPointPGA({e02: -p.e0, e01: p.e1, e12: 1}, color);\n                var renderInfo = (info, color) => infos.push({text: info, fontSize: 4, color: color});\n                var renderBoxPGA = (m, color, h) => {\n                    h = h || 3\n                    var corners = [\n                        {\n                            e01: -h,\n                            e02: -h,\n                            e12: 1\n                        },\n                        {\n                            e01: h,\n                            e02: -h,\n                            e12: 1\n                        },\n                        {\n                            e01: h,\n                            e02: h,\n                            e12: 1\n                        },\n                        {\n                            e01: -h,\n                            e02: h,\n                            e12: 1\n                        }\n                    ];\n\n                    for (var cornerIndex = 0; cornerIndex < corners.length; cornerIndex++) {\n                        points.push({point: pga.sandwichProduct(corners[cornerIndex], m), radius: 2, fill: color});\n                    }\n                };\n            "+codeToRun+'\n                renderScene({ points: points, lines: lines, infos: infos }, document.getElementById("'.concat(renderTarget.id,'"));\n            ')),codeToRun="var log = console.log;"+codeToRun;try{eval(codeToRun),setRunResult(newRunResults.join("\n"))}catch(e){setRunResult(e.toString())}console.log=oldLog}),[code,withVisualizer]),uniqueId=Object(react__WEBPACK_IMPORTED_MODULE_3__.useMemo)((function(){return(Math.random().toString(36)+"00000000000000000").slice(2,18)}),[]),visualizerRef=Object(react__WEBPACK_IMPORTED_MODULE_3__.useRef)(null);return Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{className:_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4___default.a["interactive-code"],style:style,children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{style:{position:"relative",width:"100%"},children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("button",{style:{border:0,background:"#505050",color:"#FFFFFF",position:"absolute",right:10,top:10,fontSize:24,zIndex:10},onClick:run,children:"Run"})}),Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"column",alignContent:"stretch"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)("div",{style:{display:"flex",flexDirection:"row",alignContent:"stretch",flexWrap:"wrap"},children:[Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_ace__WEBPACK_IMPORTED_MODULE_5___default.a,{className:withVisualizer?_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4___default.a["interactive-code-editor-with-viz"]:_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4___default.a["interactive-code-editor-without-viz"],style:Object(_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)(Object(_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)({},{width:void 0,height:void 0}),editorStyle),mode:"javascript",theme:"monokai",value:code,onChange:function(e){return setCode(e)},showPrintMargin:!1}),withVisualizer&&Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)("div",{id:"#".concat(uniqueId),ref:visualizerRef,className:_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4___default.a["interactive-code-viz"],style:visualizerStyle,children:Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_ga_viz2d__WEBPACK_IMPORTED_MODULE_8__.SceneView,{scene:{}})})]}),!hideOutput&&Object(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(react_ace__WEBPACK_IMPORTED_MODULE_5___default.a,{className:_InteractiveCode_module_css__WEBPACK_IMPORTED_MODULE_4___default.a["interactive-code-output"],style:Object(_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)(Object(_home_runner_work_ga_tutorial_ga_tutorial_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__.a)({},{width:void 0,height:void 0}),outputStyle),mode:"javascript",theme:"monokai",value:runResult,readOnly:!0,showPrintMargin:!1})]})]})}},65:function(e,_,t){"use strict";t.r(_);var i=t(0),r=t(1),a=t.n(r),o=t(17),n=(t(49),t(39));Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function s(){return Object(i.jsx)(a.a.StrictMode,{children:Object(i.jsx)(n.a,{})})}var c=document.getElementById("root");c&&(c.hasChildNodes()?Object(o.hydrate)(s(),c):Object(o.render)(s(),c)),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()})).catch((function(e){console.error(e.message)}))},9:function(e,_,t){"use strict";t.d(_,"e",(function(){return i})),t.d(_,"i",(function(){return r})),t.d(_,"b",(function(){return a})),t.d(_,"a",(function(){return o})),t.d(_,"j",(function(){return n})),t.d(_,"h",(function(){return s})),t.d(_,"g",(function(){return c})),t.d(_,"c",(function(){return d})),t.d(_,"d",(function(){return l})),t.d(_,"f",(function(){return u}));var i='// Render point at x=10, y=-60\nrenderPointGA({ e0: 10, e1: -60 })\n\n// Render point at x=-50, y=80\nrenderPointGA({ e0: -50, e1: 80 }, "red")',r='var exSquared = ga.geometricProduct({ e0: 1 }, { e0: 1 })\nvar eySquared = ga.geometricProduct({ e1: 1 }, { e1: 1 })\n\nlog("e0^2:", exSquared)\nlog("e1^2:", eySquared)',a='var exEy = ga.geometricProduct({ e0: 1 }, { e1: 1 })\nvar eyEx = ga.geometricProduct({ e1: 1 }, { e0: 1 })\n\nlog("e0 e1:", exEy)\nlog("e1 e0:", eyEx)',o='var exEy = ga.geometricProduct({ e0: 1 }, { e1: 1 })\nvar exEyEx = ga.geometricProduct(exEy, { e0: 1 })\n\nlog("e0 e1 e0:", exEyEx)',n='var exEy = { e01: 1 }\nvar exEySquared = ga.geometricProduct(exEy, exEy)\n\nlog("e01^2", exEySquared)',s='var eXy = { e01: 1 }\nvar eYx = { e01: -1 } // e_yx = -e_xy\n\nvar p = { e0: 70, e1: 0 }\n\nvar a = ga.geometricProduct(eXy, p)\nvar b = ga.geometricProduct(eYx, p)\n\nrenderPointGA(p)\nrenderPointGA(a, "red")\nrenderPointGA(b, "blue")\n',c='var phi = Math.PI * 3 / 4 // 135\xb0\n\n// e^(phi e_{yx}) = e^(-phi e_{xy})\nvar r = ga.exponential({ e01: -phi })\n\nvar p = { e0: 70, e1: 0 }\n\n// p rotated by 135\xb0 counter-clockwise\nvar rotatedP = ga.geometricProduct(r, p)\n\nrenderPointGA(p)\nrenderPointGA(rotatedP, "red")\nrenderInfo(ga.repr(rotatedP), "red")',d='var phi = Math.PI * 3 / 4 // 135\xb0\n\n// e^(phi/2 e_{yx}) = e^(-phi/2 e_{xy})\n// Only half the angle required with sandwich product\nvar r = ga.exponential({ e01: -phi / 2 })\n\nvar p = { e0: 70, e1: 0 }\n\n// R p ~R (sandwich product)\n// p rotated by 135\xb0 counter-clockwise\nvar rotatedP = ga.geometricProduct(\n    r,\n    ga.geometricProduct(p, ga.reversion(r)) \n)\n\nrenderPointGA(p)\nrenderPointGA(rotatedP, "red")\nrenderInfo(ga.repr(rotatedP), "red")',l='var phi = Math.PI * 3 / 4 // 135\xb0\nvar theta = Math.PI / 2 // 90\xb0\n\n// CCW XZ rotation by phi\nvar r1 = ga3d.exponential({ e02: -phi / 2 })\n\n// CCW XY rotation by theta\nvar r2 = ga3d.exponential({ e01: -theta / 2 })\n\n// Compose XY and XZ rotation\nvar r = ga3d.geometricProduct(r2, r1)\n\nvar p = { e0: 70, e1: 0, e2: 0 }\n\n// p first rotated by phi in XZ, then by theta in XY\nvar rotatedP = ga3d.geometricProduct(\n    r,\n    ga3d.geometricProduct(p, ga3d.reversion(r))\n)\n\nlog("Rotated P:", rotatedP)',u='var phi = Math.PI * 3 / 4 // 135\xb0\nvar theta = Math.PI / 2 // 90\xb0\n\nvar r1 = ga3d.exponential({ e02: -phi / 2 })\nvar r2 = ga3d.exponential({ e01: -theta / 2 })\n\n// Compose XY and XZ rotation\nvar r = ga3d.geometricProduct(r2, r1)\n\nvar p = { e0: 70, e1: 0, e2: 0 }\n\n// (R ~R) p (R ~P)\nvar q = ga3d.sandwichProduct(\n    p,\n    ga3d.geometricProduct(r, ga3d.reversion(r))\n)\n\nlog("q:", q)'}},[[65,1,2]]]);
//# sourceMappingURL=main.6e8083f3.chunk.js.map